---
# code: language=ansible
- name: Setup satellite for provisioning
  # gather_facts: false
  hosts: satellite
  become: true
  vars_files:
    - extra_vars.yml
    - sat_repos.yml

  tasks:
    - name: Setup DNS, DHCP  and TFTP
      ansible.builtin.include_role:
        name: redhat.satellite_operations.installer
      vars:
        satellite_installer_scenario: satellite # noqa: var-naming[no-role-prefix]
        satellite_installer_options:
          - "--foreman-proxy-dns true"
          - "--foreman-proxy-dns-managed true"
          - "--foreman-proxy-dns-interface eth0"
          - "--foreman-proxy-dns-zone example.com"
          - "--foreman-proxy-dns-reverse 100.168.192.in-addr.arpa"
          - "--foreman-proxy-dhcp true"
          - "--foreman-proxy-dhcp-managed true"
          - "--foreman-proxy-dhcp-interface eth0"
          - "--foreman-proxy-dhcp-range '192.168.100.100 192.168.100.150'"
          - "--foreman-proxy-dhcp-gateway 192.168.100.1"
          - "--foreman-proxy-dhcp-nameservers 192.168.100.2"
          - "--foreman-proxy-tftp true"
          - "--foreman-proxy-tftp-managed true"
          - "--foreman-proxy-tftp-servername 192.168.100.2"
      # tags:
      #   - never

    - name: Point DNS to self
      ansible.builtin.include_role:
        name: linux-system-roles.network
      vars:
        network_connections:
          - name: eth0
            type: ethernet
            state: up
            ip:
              gateway4: "192.168.100.1"
              address:
                - "192.168.100.2/24"
              dns:
                - "192.168.100.2"
              dns_search:
                - "example.com"


    - name: Setup domain
      redhat.satellite.domain:
        name: "example.com"
        description: "Example Domain"
        dns_proxy: "satellite.example.com"
        server_url: "{{ satellite_server_url }}"
        username: "{{ satellite_username }}"
        password: "{{ satellite_password }}"

    - name: Setup subnet
      ansible.builtin.include_role:
        name: redhat.satellite.subnets
      vars:
  #      satellite_server_url: "{{ satellite_server_url }}"
  #      satellite_username: "{{ satellite_username }}"
  #      satellite_password: "{{ satellite_password }}"
        satellite_subnets: # noqa: var-naming[no-role-prefix]
          - name: "Example network"
            network: "192.168.100.0"
            mask: "255.255.255.0"
            gateway: "192.168.100.1"
            dns_primary: "192.168.100.2"
            ipam: "DHCP"
            dns_proxy: "satellite.example.com"
            tftp_proxy: "satellite.example.com"
            dhcp_proxy: "satellite.example.com"
            discovery_proxy: "satellite.example.com"
            remote_execution_proxies: satellite.example.com"
            domains:
              - "example.com"
