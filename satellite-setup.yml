---
# # code: language=ansible
# - name: Provision satellite server VM
#   hosts: libvirt
#   become: true
#   vars_files:
#     - sat_repos.yml

#   # tasks:
#   # - name: Create Satellite VM
#     community.libvirt.virt:

- name: Satellite server pre-install preparations
  hosts: satellite
  become: true
  become_method: sudo
  environment:
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
    TERM: linux

  vars_files:
    - sat_repos.yml
    - extra_vars.yml

  tasks:
    - name: Copy manifest over
      ansible.builtin.copy:
        src: manifest.zip
        dest: "{{ satellite_manifest_path }}"
        owner: root
        group: root
        mode: '0644'
      tags:
        - pre_task

    #  - name: remove rhui repos
    #    yum:
    #      name: rh-amazon-rhui-client*
    #      state: removed
    #    tags:
    #      - pre_task

    - name: Configure product-id.conf
      ansible.builtin.copy:
        dest: /etc/yum/pluginconf.d/product-id.conf
        content: |
          [main]
          enabled=1`
        owner: root
        group: root
        mode: '0644'
      tags:
        - pre_task

    - name: Subscription manager - register system
      community.general.redhat_subscription:
        server_hostname: "subscription.rhsm.redhat.com"
        server_insecure: 0
        server_prefix: /subscription
        server_port: 443
        rhsm_baseurl: https://cdn.redhat.com
        state: present
        force_register: true
        activationkey: "{{ satellite_activation_key }}"
        org_id: "{{ org_id }}"
        # pool: '^Red Hat Satellite Infrastructure^$'
      tags:
        - pre_task

    - name: Enable repositories
      ansible.builtin.lineinfile:
        path: /etc/rhsm/rhsm.conf
        regexp: '^manage_repos ='
        line: manage_repos = 1
      tags:
        - pre_task

    - name: Installer repos
      community.general.rhsm_repository:
        name:
          - rhel-8-for-x86_64-baseos-rpms
          - rhel-8-for-x86_64-appstream-rpms
          - satellite-6.13-for-rhel-8-x86_64-rpms
          - satellite-maintenance-6.13-for-rhel-8-x86_64-rpms
          - ansible-2.9-for-rhel-8-x86_64-rpms
        state: enabled
        purge: true
      tags:
        - pre_task

    - name: Enable appstream modules
      ansible.builtin.command: |
        dnf module enable -y {{ item.module }}:{{ item.stream }}/{{ item.profile | default('common') }}
      register: result
      changed_when:
        - '"Enabling module streams" in result.stdout'
      loop: "{{ dnf_module_list | list }}"
      when:
        - ansible_distribution_major_version >= '8'
        - dnf_module_list | length > 0

    - name: Update all packages
      ansible.builtin.dnf:
        name: "*"
        state: latest
        update_only: true

    - name: Install satellite package
      ansible.builtin.dnf:
        name: satellite
        state: latest
        update_only: true
      tags:
        - pre_task

    - name: Install chrony
      ansible.builtin.include_role:
        name: oasis_roles.system.chrony
      tags:
        - software

    - name: Set sat_pass
      ansible.builtin.set_fact:
        sat_pass: "{{ satellite_password }}"
      tags:
        - software

    - name: Check if Satellite is installed and running
      ansible.builtin.shell: >-
        satellite-maintain service status --brief | grep 'All services are running'
      ignore_errors: true
      register: satellite_status
      changed_when: satellite_status.rc != 0

    - name: Run installer
      ansible.builtin.include_role:
        name: redhat.satellite_operations.installer
      vars:
        satellite_installer_scenario: satellite
        satellite_installer_options:
          - "--foreman-initial-admin-password {{ sat_pass }}"
          - "--enable-foreman-plugin-remote-execution-cockpit"
          - "--enable-foreman-plugin-openscap"
          - "--enable-foreman-proxy-plugin-openscap"
          #  - "--foreman-proxy-plugin-openscap-puppet-module true"
        satellite_installer_command: satellite-installer
      when:
        - satellite_status.stdout is defined
        - not 'OK' in satellite_status.stdout
      tags:
        - software

    - name: Import manifest
      ansible.builtin.include_role:
        name: redhat.satellite.manifest
      when:
        - satellite_status.stdout is defined
        - not 'OK' in satellite_status.stdout
      tags:
        - post_software

    - name: Refresh manifest
      redhat.satellite.subscription_manifest:
        organization: "{{ satellite_organization }}"
        state: refreshed
        server_url: "{{ satellite_server_url }}"
        username: "{{ satellite_username }}"
        password: "{{ sat_pass }}"
        validate_certs: false
      async: 2000
      poll: 60
      tags:
        - post_software

    - name: Enable repositories
      ansible.builtin.include_role:
        name: redhat.satellite.repositories
      tags:
        - post_software

    - name: Sync repositories
      ansible.builtin.include_role:
        name: redhat.satellite.repositories
      tags:
        - post_software

    - name: Install default scap content
      ansible.builtin.command: hammer scap-content bulk-upload --type default
      register: output
      changed_when: output.rc != 0

    # work around for https://bugzilla.redhat.com/show_bug.cgi?id=1791340
    - name: Determine correct smart_proxy_dynflow_core directory name from wildcard
      ansible.builtin.find:
        paths: /opt/theforeman/tfm/root/usr/share/gems/gems
        file_type: directory
        patterns: "^smart_proxy_dynflow_core-"
        use_regex: true
      register: smart_proxy_dynflow_core_path

    - name: Print data
      ansible.builtin.debug:
        msg: "{{ smart_proxy_dynflow_core_path }}"

    - name: Workaround for bug 1791340
      ansible.builtin.lineinfile:
        path: "{{ item.path }}/smart_proxy_dynflow_core.gemspec"
        regexp: gem.authors
        line: "  gem.authors       = ['Ivan Necas']"
      with_items: "{{ smart_proxy_dynflow_core_path.files }}"
      tags:
        - post_software

    - name: MOTD
      ansible.builtin.copy:
        dest: /etc/motd
        mode: '0644'
        content: |
          #########################################
          ## Login with Password {{ sat_pass }} ##
          #########################################
      tags:
        - post_software

    # Because of https://bugzilla.redhat.com/show_bug.cgi?id=1779294 ...need to reset where default python points to
    - name: Set python to /usr/bin/python3 via alternatives
    #  community.general.alternatives:
    #    name: python
    #    path: /usr/bin/python3.6
    #    link: /usr/bin/python
    #    state: present
    ### Couldn't get alternative module to work correctly, so reverting to
      ansible.builtin.command: >-
        alternatives --set python /usr/bin/python3
      environment:
        HOME: /root
      tags:
        - post_software
      register: result
      changed_when: result.rc != 0

    - name: Create GPG key directory for importing keys
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - /etc/pki/rpm-gpg/import

    - name: Hammer org list
      ansible.builtin.command: >-
        hammer --output json organization list
      environment:
        HOME: /root
      register: hammer_org_list_result
      ignore_errors: true
      changed_when: never

    - name: Set the Organization Id from specific org selection via satellite_organization variable and .Id
      ansible.builtin.set_fact:
        sat_org_id: "{{ hammer_org_list_result.stdout | from_json | json_query(my_query) }}"
      vars:
        my_query: "[?Name=='{{ satellite_organization }}'].Id"

    - name: What is the Org Id?
      ansible.builtin.debug:
        msg: "The Org Id selected is: {{ sat_org_id[0] }}"

    - name: Print repository_sets defined
      ansible.builtin.debug:
        msg: "{{ item.name }}"
      throttle: 1
      with_community.general.flattened: "{{ satellite_products }}"
      when: item.repository_sets is defined

    - name: Print repositories defined
      ansible.builtin.debug:
        msg: "{{ item.name }}"
      throttle: 1
      with_community.general.flattened: "{{ satellite_products }}"
      when: item.repositories is defined

    - name: Sync repository_sets defined
      redhat.satellite.repository_sync:
        product: "{{ item.name }}"
        organization: "{{ satellite_organization }}"
        server_url: "{{ satellite_server_url }}"
        username: "{{ satellite_username }}"
        password: "{{ sat_pass }}"
      throttle: 1
      with_community.general.flattened: "{{ satellite_products }}"
      when: item.repository_sets is defined
      register: repo_sets_sync
      retries: 2
      delay: 15
      until: repo_sets_sync is not failed

    - name: Sync repositories defined
      redhat.satellite.repository_sync:
        product: "{{ item.name }}"
        organization: "{{ satellite_organization }}"
        server_url: "{{ satellite_server_url }}"
        username: "{{ satellite_username }}"
        password: "{{ sat_pass }}"
      throttle: 1
      with_community.general.flattened: "{{ satellite_products }}"
      when: item.repositories is defined
      register: repo_sync
      retries: 2
      delay: 15
      until: repo_sync is not failed

    # https://projects.theforeman.org/issues/10266
    # Commented for 6.11?
    # - name: disconnected mode
    #  command: 'hammer settings set --name content_disconnected --value true'
    #  environment:
    #    HOME: /root
    - name: Standard settings for satellite
      ansible.builtin.include_role:
        name: redhat.satellite.settings
      vars:
        satellite_settings:
          - name: ansible_out_of_sync_disabled
            value: true

    - name: Remove any persistent udev rules
      ansible.builtin.file:
        path: /etc/udev/rules.d/70-persistent-net.rules
        state: absent

    - name: Remove HWADDR MAC line from ifcfg-eth0
      ansible.builtin.lineinfile:
        path: /etc/sysconfig/network-scripts/ifcfg-eth0
        state: absent
        regexp: '^HWADDR'

    - name: Build ssh_host_ file list from wildcard
      ansible.builtin.find:
        paths: /etc/ssh
        patterns: "^ssh_host_"
        use_regex: true
      register: ssh_host_files_to_delete

    - name: Remove ssh_host_ files
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ ssh_host_files_to_delete.files }}"

    # - name: unregister
    #   community.general.redhat_subscription:
    #     state: absent
