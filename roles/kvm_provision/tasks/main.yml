---
# code: language=ansible
# tasks file for kvm_provision
- name: Ensure requirements in place
  ansible.builtin.package:
    name:
      - guestfs-tools
      - python3-libvirt
    state: present
  become: true

- name: Get VMs list
  community.libvirt.virt:
    command: list_vms
  register: existing_vms
  changed_when: false

- name: Create VM if not exists
  when: "kvm_provision_vm_name not in existing_vms.list_vms"
  block:
    - name: Copy base image to libvirt directory
      ansible.builtin.copy:
        dest: "{{ kvm_provision_libvirt_pool_dir }}/{{ kvm_provision_vm_name }}.qcow2"
        src: "{{ kvm_provision_base_image_dir }}/{{ kvm_provision_base_image_name }}"
        force: true
        remote_src: true
        mode: "0660"
      notify: Configure the image


    - name: Resize drive
      ansible.builtin.command: |
        qemu-img resize {{ kvm_provision_libvirt_pool_dir }}/{{ kvm_provision_vm_name }}.qcow2 \
        {{ kvm_provision_vm_size }}
      register: my_output
      changed_when: my_output.rc != 0

    - name: Define vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'vm-template.xml.j2') }}"

- name: Ensure VM is started
  community.libvirt.virt:
    name: "{{ kvm_provision_vm_name }}"
    state: running
  register: vm_start_results
  until: "vm_start_results is success"
  retries: 15
  delay: 2
