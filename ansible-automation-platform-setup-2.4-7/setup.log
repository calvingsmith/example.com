[0;34mUsing /etc/ansible/ansible.cfg as config file[0m
[0;34mrunning playbook inside collection ansible.automation_platform_installer[0m

PLAY [Warn if no core component is enabled] ************************************

TASK [Warn if no core component is enabled] ************************************
[0;36mskipping: [localhost] => {"changed": false, "false_condition": "not groups['automationcontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: tower[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: automationhub[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring:[0m
[1;35mautomationedacontroller[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: database[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: execution_nodes[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: sso[0m

PLAY [Group all valid hosts for AAP installation] ******************************

TASK [Gathering Facts] *********************************************************
[0;32mok: [aap.example.com][0m

TASK [group hosts used in AAP installer] ***************************************
[0;32mok: [aap.example.com] => {"add_group": "aap_valid_hosts", "changed": false, "parent_groups": ["all"]}[0m

PLAY [aap_valid_hosts] *********************************************************

TASK [include_role : ansible.automation_platform_installer.check_config_static] ***

TASK [ansible.automation_platform_installer.check_config_static : Ensure SSO node is run on a RHEL 8 x86_64 node] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['sso'] | default([])", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure cluster hosts are not localhost] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationcontroller'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Check that group names do not conflict with instance names] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "('instance_group_' + ansible_host) in groups", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : service_facts] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"services": {"NetworkManager-dispatcher.service": {"name": "NetworkManager-dispatcher.service", "source": "systemd", "state": "inactive", "status": "enabled"}, "NetworkManager-wait-online.service": {"name": "NetworkManager-wait-online.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "NetworkManager.service": {"name": "NetworkManager.service", "source": "systemd", "state": "running", "status": "enabled"}, "auditd.service": {"name": "auditd.service", "source": "systemd", "state": "running", "status": "enabled"}, "auth-rpcgss-module.service": {"name": "auth-rpcgss-module.service", "source": "systemd", "state": "stopped", "status": "static"}, "auto-cpufreq.service": {"name": "auto-cpufreq.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autofs.service": {"name": "autofs.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "autovt@.service": {"name": "autovt@.service", "source": "systemd", "state": "unknown", "status": "alias"}, "chrony-wait.service": {"name": "chrony-wait.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "chronyd-restricted.service": {"name": "chronyd-restricted.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "chronyd.service": {"name": "chronyd.service", "source": "systemd", "state": "running", "status": "enabled"}, "cloud-config.service": {"name": "cloud-config.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-final.service": {"name": "cloud-final.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init-hotplugd.service": {"name": "cloud-init-hotplugd.service", "source": "systemd", "state": "inactive", "status": "static"}, "cloud-init-local.service": {"name": "cloud-init-local.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cloud-init.service": {"name": "cloud-init.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "cockpit-motd.service": {"name": "cockpit-motd.service", "source": "systemd", "state": "inactive", "status": "static"}, "cockpit-wsinstance-http.service": {"name": "cockpit-wsinstance-http.service", "source": "systemd", "state": "inactive", "status": "static"}, "cockpit-wsinstance-https-factory@.service": {"name": "cockpit-wsinstance-https-factory@.service", "source": "systemd", "state": "unknown", "status": "static"}, "cockpit-wsinstance-https@.service": {"name": "cockpit-wsinstance-https@.service", "source": "systemd", "state": "unknown", "status": "static"}, "cockpit.service": {"name": "cockpit.service", "source": "systemd", "state": "inactive", "status": "static"}, "console-getty.service": {"name": "console-getty.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "container-getty@.service": {"name": "container-getty@.service", "source": "systemd", "state": "unknown", "status": "static"}, "cpupower.service": {"name": "cpupower.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "crond.service": {"name": "crond.service", "source": "systemd", "state": "running", "status": "enabled"}, "dbus-broker.service": {"name": "dbus-broker.service", "source": "systemd", "state": "running", "status": "enabled"}, "dbus-org.freedesktop.hostname1.service": {"name": "dbus-org.freedesktop.hostname1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.locale1.service": {"name": "dbus-org.freedesktop.locale1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.login1.service": {"name": "dbus-org.freedesktop.login1.service", "source": "systemd", "state": "active", "status": "alias"}, "dbus-org.freedesktop.nm-dispatcher.service": {"name": "dbus-org.freedesktop.nm-dispatcher.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus-org.freedesktop.timedate1.service": {"name": "dbus-org.freedesktop.timedate1.service", "source": "systemd", "state": "inactive", "status": "alias"}, "dbus.service": {"name": "dbus.service", "source": "systemd", "state": "active", "status": "alias"}, "debug-shell.service": {"name": "debug-shell.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "display-manager.service": {"name": "display-manager.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "dnf-makecache.service": {"name": "dnf-makecache.service", "source": "systemd", "state": "stopped", "status": "static"}, "dnf-system-upgrade-cleanup.service": {"name": "dnf-system-upgrade-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "dnf-system-upgrade.service": {"name": "dnf-system-upgrade.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "dracut-cmdline.service": {"name": "dracut-cmdline.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-initqueue.service": {"name": "dracut-initqueue.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-mount.service": {"name": "dracut-mount.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-pre-mount.service": {"name": "dracut-pre-mount.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-pre-pivot.service": {"name": "dracut-pre-pivot.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-pre-trigger.service": {"name": "dracut-pre-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-pre-udev.service": {"name": "dracut-pre-udev.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-shutdown-onfailure.service": {"name": "dracut-shutdown-onfailure.service", "source": "systemd", "state": "stopped", "status": "static"}, "dracut-shutdown.service": {"name": "dracut-shutdown.service", "source": "systemd", "state": "stopped", "status": "static"}, "emergency.service": {"name": "emergency.service", "source": "systemd", "state": "stopped", "status": "static"}, "fstrim.service": {"name": "fstrim.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-offline-update.service": {"name": "fwupd-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd-refresh.service": {"name": "fwupd-refresh.service", "source": "systemd", "state": "inactive", "status": "static"}, "fwupd.service": {"name": "fwupd.service", "source": "systemd", "state": "inactive", "status": "static"}, "getty@.service": {"name": "getty@.service", "source": "systemd", "state": "unknown", "status": "enabled"}, "getty@tty1.service": {"name": "getty@tty1.service", "source": "systemd", "state": "running", "status": "active"}, "grub-boot-indeterminate.service": {"name": "grub-boot-indeterminate.service", "source": "systemd", "state": "inactive", "status": "static"}, "grub2-systemd-integration.service": {"name": "grub2-systemd-integration.service", "source": "systemd", "state": "inactive", "status": "static"}, "gssproxy.service": {"name": "gssproxy.service", "source": "systemd", "state": "running", "status": "disabled"}, "hv_kvp_daemon.service": {"name": "hv_kvp_daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "initrd-cleanup.service": {"name": "initrd-cleanup.service", "source": "systemd", "state": "stopped", "status": "static"}, "initrd-parse-etc.service": {"name": "initrd-parse-etc.service", "source": "systemd", "state": "stopped", "status": "static"}, "initrd-switch-root.service": {"name": "initrd-switch-root.service", "source": "systemd", "state": "stopped", "status": "static"}, "initrd-udevadm-cleanup-db.service": {"name": "initrd-udevadm-cleanup-db.service", "source": "systemd", "state": "stopped", "status": "static"}, "insights-client-boot.service": {"name": "insights-client-boot.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "insights-client-results.service": {"name": "insights-client-results.service", "source": "systemd", "state": "inactive", "status": "static"}, "insights-client.service": {"name": "insights-client.service", "source": "systemd", "state": "inactive", "status": "static"}, "irqbalance.service": {"name": "irqbalance.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "kdump.service": {"name": "kdump.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "kmod-static-nodes.service": {"name": "kmod-static-nodes.service", "source": "systemd", "state": "stopped", "status": "static"}, "kvm_stat.service": {"name": "kvm_stat.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "ldconfig.service": {"name": "ldconfig.service", "source": "systemd", "state": "stopped", "status": "static"}, "logrotate.service": {"name": "logrotate.service", "source": "systemd", "state": "stopped", "status": "static"}, "man-db-cache-update.service": {"name": "man-db-cache-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "man-db-restart-cache-update.service": {"name": "man-db-restart-cache-update.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "microcode.service": {"name": "microcode.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "modprobe@.service": {"name": "modprobe@.service", "source": "systemd", "state": "unknown", "status": "static"}, "modprobe@configfs.service": {"name": "modprobe@configfs.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@drm.service": {"name": "modprobe@drm.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "modprobe@fuse.service": {"name": "modprobe@fuse.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "network.service": {"name": "network.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "nfs-blkmap.service": {"name": "nfs-blkmap.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "nfs-idmapd.service": {"name": "nfs-idmapd.service", "source": "systemd", "state": "stopped", "status": "static"}, "nfs-mountd.service": {"name": "nfs-mountd.service", "source": "systemd", "state": "stopped", "status": "static"}, "nfs-server.service": {"name": "nfs-server.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "nfs-utils.service": {"name": "nfs-utils.service", "source": "systemd", "state": "stopped", "status": "static"}, "nfsdcld.service": {"name": "nfsdcld.service", "source": "systemd", "state": "stopped", "status": "static"}, "nis-domainname.service": {"name": "nis-domainname.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "nm-priv-helper.service": {"name": "nm-priv-helper.service", "source": "systemd", "state": "inactive", "status": "static"}, "ntpd.service": {"name": "ntpd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ntpdate.service": {"name": "ntpdate.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "oddjobd.service": {"name": "oddjobd.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "packagekit-offline-update.service": {"name": "packagekit-offline-update.service", "source": "systemd", "state": "inactive", "status": "static"}, "packagekit.service": {"name": "packagekit.service", "source": "systemd", "state": "inactive", "status": "static"}, "pam_namespace.service": {"name": "pam_namespace.service", "source": "systemd", "state": "inactive", "status": "static"}, "plymouth-quit-wait.service": {"name": "plymouth-quit-wait.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "plymouth-start.service": {"name": "plymouth-start.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "polkit.service": {"name": "polkit.service", "source": "systemd", "state": "running", "status": "static"}, "power-profiles-daemon.service": {"name": "power-profiles-daemon.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "qemu-guest-agent.service": {"name": "qemu-guest-agent.service", "source": "systemd", "state": "running", "status": "enabled"}, "quotaon.service": {"name": "quotaon.service", "source": "systemd", "state": "inactive", "status": "static"}, "rc-local.service": {"name": "rc-local.service", "source": "systemd", "state": "stopped", "status": "static"}, "rdisc.service": {"name": "rdisc.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rescue.service": {"name": "rescue.service", "source": "systemd", "state": "stopped", "status": "static"}, "rhsm-facts.service": {"name": "rhsm-facts.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rhsm.service": {"name": "rhsm.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rhsmcertd.service": {"name": "rhsmcertd.service", "source": "systemd", "state": "running", "status": "enabled"}, "rpc-gssd.service": {"name": "rpc-gssd.service", "source": "systemd", "state": "stopped", "status": "static"}, "rpc-statd-notify.service": {"name": "rpc-statd-notify.service", "source": "systemd", "state": "stopped", "status": "static"}, "rpc-statd.service": {"name": "rpc-statd.service", "source": "systemd", "state": "stopped", "status": "static"}, "rpc-svcgssd.service": {"name": "rpc-svcgssd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "rpcbind.service": {"name": "rpcbind.service", "source": "systemd", "state": "running", "status": "enabled"}, "rpmdb-rebuild.service": {"name": "rpmdb-rebuild.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "rsyslog.service": {"name": "rsyslog.service", "source": "systemd", "state": "running", "status": "enabled"}, "selinux-autorelabel-mark.service": {"name": "selinux-autorelabel-mark.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "selinux-autorelabel.service": {"name": "selinux-autorelabel.service", "source": "systemd", "state": "inactive", "status": "static"}, "selinux-check-proper-disable.service": {"name": "selinux-check-proper-disable.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "serial-getty@.service": {"name": "serial-getty@.service", "source": "systemd", "state": "unknown", "status": "indirect"}, "serial-getty@ttyS0.service": {"name": "serial-getty@ttyS0.service", "source": "systemd", "state": "running", "status": "active"}, "setroubleshootd.service": {"name": "setroubleshootd.service", "source": "systemd", "state": "inactive", "status": "static"}, "snapd.seeded.service": {"name": "snapd.seeded.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sntp.service": {"name": "sntp.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd-keygen.service": {"name": "sshd-keygen.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "sshd-keygen@.service": {"name": "sshd-keygen@.service", "source": "systemd", "state": "unknown", "status": "disabled"}, "sshd-keygen@ecdsa.service": {"name": "sshd-keygen@ecdsa.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "sshd-keygen@ed25519.service": {"name": "sshd-keygen@ed25519.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "sshd-keygen@rsa.service": {"name": "sshd-keygen@rsa.service", "source": "systemd", "state": "stopped", "status": "inactive"}, "sshd.service": {"name": "sshd.service", "source": "systemd", "state": "running", "status": "enabled"}, "sshd@.service": {"name": "sshd@.service", "source": "systemd", "state": "unknown", "status": "static"}, "sssd-autofs.service": {"name": "sssd-autofs.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd-kcm.service": {"name": "sssd-kcm.service", "source": "systemd", "state": "stopped", "status": "indirect"}, "sssd-nss.service": {"name": "sssd-nss.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd-pac.service": {"name": "sssd-pac.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd-pam.service": {"name": "sssd-pam.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd-ssh.service": {"name": "sssd-ssh.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd-sudo.service": {"name": "sssd-sudo.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "sssd.service": {"name": "sssd.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "syslog.service": {"name": "syslog.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "system-update-cleanup.service": {"name": "system-update-cleanup.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-ask-password-console.service": {"name": "systemd-ask-password-console.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-ask-password-wall.service": {"name": "systemd-ask-password-wall.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-backlight@.service": {"name": "systemd-backlight@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-binfmt.service": {"name": "systemd-binfmt.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-bless-boot.service": {"name": "systemd-bless-boot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-boot-check-no-failures.service": {"name": "systemd-boot-check-no-failures.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-boot-random-seed.service": {"name": "systemd-boot-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-boot-update.service": {"name": "systemd-boot-update.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-coredump@.service": {"name": "systemd-coredump@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-exit.service": {"name": "systemd-exit.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-firstboot.service": {"name": "systemd-firstboot.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-fsck-root.service": {"name": "systemd-fsck-root.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-fsck@.service": {"name": "systemd-fsck@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-fsck@dev-disk-by\\x2duuid-7B77\\x2d95E7.service": {"name": "systemd-fsck@dev-disk-by\\x2duuid-7B77\\x2d95E7.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-fsck@dev-vda2.service": {"name": "systemd-fsck@dev-vda2.service", "source": "systemd", "state": "stopped", "status": "active"}, "systemd-growfs-root.service": {"name": "systemd-growfs-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-growfs@.service": {"name": "systemd-growfs@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-halt.service": {"name": "systemd-halt.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hibernate-resume@.service": {"name": "systemd-hibernate-resume@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-hibernate.service": {"name": "systemd-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hostnamed.service": {"name": "systemd-hostnamed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-hwdb-update.service": {"name": "systemd-hwdb-update.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-hybrid-sleep.service": {"name": "systemd-hybrid-sleep.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-initctl.service": {"name": "systemd-initctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-catalog-update.service": {"name": "systemd-journal-catalog-update.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journal-flush.service": {"name": "systemd-journal-flush.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-journald.service": {"name": "systemd-journald.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-journald@.service": {"name": "systemd-journald@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-kexec.service": {"name": "systemd-kexec.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-localed.service": {"name": "systemd-localed.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-logind.service": {"name": "systemd-logind.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-machine-id-commit.service": {"name": "systemd-machine-id-commit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-modules-load.service": {"name": "systemd-modules-load.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-network-generator.service": {"name": "systemd-network-generator.service", "source": "systemd", "state": "stopped", "status": "enabled"}, "systemd-networkd-wait-online.service": {"name": "systemd-networkd-wait-online.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-pcrfs-root.service": {"name": "systemd-pcrfs-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pcrfs@.service": {"name": "systemd-pcrfs@.service", "source": "systemd", "state": "unknown", "status": "static"}, "systemd-pcrmachine.service": {"name": "systemd-pcrmachine.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-pcrphase-initrd.service": {"name": "systemd-pcrphase-initrd.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-pcrphase-sysinit.service": {"name": "systemd-pcrphase-sysinit.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-pcrphase.service": {"name": "systemd-pcrphase.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-poweroff.service": {"name": "systemd-poweroff.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-pstore.service": {"name": "systemd-pstore.service", "source": "systemd", "state": "inactive", "status": "disabled"}, "systemd-quotacheck.service": {"name": "systemd-quotacheck.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-random-seed.service": {"name": "systemd-random-seed.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-reboot.service": {"name": "systemd-reboot.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-remount-fs.service": {"name": "systemd-remount-fs.service", "source": "systemd", "state": "stopped", "status": "enabled-runtime"}, "systemd-repart.service": {"name": "systemd-repart.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-rfkill.service": {"name": "systemd-rfkill.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-suspend-then-hibernate.service": {"name": "systemd-suspend-then-hibernate.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-suspend.service": {"name": "systemd-suspend.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-sysctl.service": {"name": "systemd-sysctl.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-sysext.service": {"name": "systemd-sysext.service", "source": "systemd", "state": "stopped", "status": "disabled"}, "systemd-sysupdate-reboot.service": {"name": "systemd-sysupdate-reboot.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "systemd-sysupdate.service": {"name": "systemd-sysupdate.service", "source": "systemd", "state": "inactive", "status": "indirect"}, "systemd-sysusers.service": {"name": "systemd-sysusers.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-timedated.service": {"name": "systemd-timedated.service", "source": "systemd", "state": "inactive", "status": "static"}, "systemd-timesyncd.service": {"name": "systemd-timesyncd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-tmpfiles-clean.service": {"name": "systemd-tmpfiles-clean.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup-dev.service": {"name": "systemd-tmpfiles-setup-dev.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles-setup.service": {"name": "systemd-tmpfiles-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-tmpfiles.service": {"name": "systemd-tmpfiles.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "systemd-udev-settle.service": {"name": "systemd-udev-settle.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udev-trigger.service": {"name": "systemd-udev-trigger.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-udevd.service": {"name": "systemd-udevd.service", "source": "systemd", "state": "running", "status": "static"}, "systemd-update-done.service": {"name": "systemd-update-done.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp-runlevel.service": {"name": "systemd-update-utmp-runlevel.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-update-utmp.service": {"name": "systemd-update-utmp.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-user-sessions.service": {"name": "systemd-user-sessions.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-vconsole-setup.service": {"name": "systemd-vconsole-setup.service", "source": "systemd", "state": "stopped", "status": "static"}, "systemd-volatile-root.service": {"name": "systemd-volatile-root.service", "source": "systemd", "state": "inactive", "status": "static"}, "teamd@.service": {"name": "teamd@.service", "source": "systemd", "state": "unknown", "status": "static"}, "tlp.service": {"name": "tlp.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "tuned.service": {"name": "tuned.service", "source": "systemd", "state": "running", "status": "enabled"}, "user-runtime-dir@.service": {"name": "user-runtime-dir@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user-runtime-dir@0.service": {"name": "user-runtime-dir@0.service", "source": "systemd", "state": "stopped", "status": "active"}, "user@.service": {"name": "user@.service", "source": "systemd", "state": "unknown", "status": "static"}, "user@0.service": {"name": "user@0.service", "source": "systemd", "state": "running", "status": "active"}, "ypbind.service": {"name": "ypbind.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "yppasswdd.service": {"name": "yppasswdd.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ypserv.service": {"name": "ypserv.service", "source": "systemd", "state": "stopped", "status": "not-found"}, "ypxfrd.service": {"name": "ypxfrd.service", "source": "systemd", "state": "stopped", "status": "not-found"}}}, "changed": false}[0m

TASK [ansible.automation_platform_installer.check_config_static : Check if fapolicyd is permissive] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_facts.services['fapolicyd.service'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : fail] ********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_facts.services['fapolicyd.service'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Detect pre-2.x inventory and offer a migration] ***
[0;32mok: [aap.example.com -> localhost] => {"changed": false, "msg": "Old style inventory not detected, continuing with install"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Detect unsupported HA inventory file] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "'primary' in groups or 'secondary' in groups", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Check that no instance groups are named automationcontroller] ***
[0;36mskipping: [aap.example.com] => (item=all)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.replace('instance_group_', '') == \"automationcontroller\"", "item": "all", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=ungrouped)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.replace('instance_group_', '') == \"automationcontroller\"", "item": "ungrouped", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=automationcontroller)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item != \"automationcontroller\"", "item": "automationcontroller", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=aap_valid_hosts)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.replace('instance_group_', '') == \"automationcontroller\"", "item": "aap_valid_hosts", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure only one database host exists] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['database'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure automationhub_pg related variables are defined if more than one component is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure automationedacontroller_pg related variables are defined if more than one component is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Fail if Automation Controller host is localhost] ***
[0;36mskipping: [aap.example.com] => (item=aap.example.com)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is match(\"127.*\") or item is match(\"localhost*\") or item == \"::1\"", "item": "aap.example.com", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Fail if Automation Hub host is localhost] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure only one Automation EDA Controller host exists] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Fail if Automation EDA Controller host is localhost] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure controller_hostname is set in condensed install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationhub', []) | union(groups.get('automationedacontroller', []))", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure hub_hostname is set in condensed install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationhub', [])", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure automationedacontroller_hostname is set in condensed install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationedacontroller', [])", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure when postgres host is defined that the port is defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "pg_host is defined and pg_port is not defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that when a database host is specified, that pg_host, automationhub_pg_host, or automationedacontroller_pg_host is defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['database'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that when a database host is specified, that pg_port, automationhub_pg_port, or automationedacontroller_pg_host is defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['database'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that pg_hashed_password is not set] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "pg_hashed_password is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that if we have web cert, we also have key (Controller)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(web_server_ssl_cert is defined and web_server_ssl_key is not defined) or (web_server_ssl_key is defined and web_server_ssl_cert is not defined)", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that if we have web cert, we also have key (Hub)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that a key is provided if a CA certificate file is also provided for the internally managed CA] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_ca_cert_file is defined and aap_ca_key_file is not defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Preflight check - verify aap_ca_server_hostname is one of the platform components] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_ca_server_hostname is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure Controller host exists for EDA] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure automationedacontroller_max_running_activations is a positive integer] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "automationedacontroller_max_running_activations | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure all items in EDA CSRF_TRUSTED_ORIGINS list have the required http/s schema] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.check_config_static : HA mode requires an external postgres database with pg_host defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationcontroller'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : HA mode requires an external postgres database with pg_port defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationcontroller'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Hub HA mode requires an external postgres database with automationhub_pg_host defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Hub HA mode requires an external postgres database with automationhub_pg_port defined] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Warn if automationhub_main_url is not set in Hub HA mode and using SSO] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Pause for warning] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure registry_username and registry_password are set for registry.redhat.io] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not registry_username | default('') | length or not registry_password | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure only one SSO host exists] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['sso'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure sso_host is not defined when setting up a new SSO node] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['sso'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure password is set for SSO] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['sso'] | default([]) | length or sso_host | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure sso_keystore_password is set when enabling SSL for SSO] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['sso'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that Automation Hub signing script and signing keys are provided when collection signing is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that Automation Hub signing script and signing keys are provided when container signing is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that Automation Hub collection signing is enabled when auto signing is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.check_config_static : Ensure that Automation Hub LDAP parameters are specified when LDAP backend is enabled] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.config_dynamic] *****

TASK [ansible.automation_platform_installer.config_dynamic : Set database to internal or external] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"config_dynamic_database": "internal"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Hub set database to internal or external] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"automationhub_config_dynamic_database": "internal"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Automation EDA Controller set database to internal or external] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"automationedacontroller_config_dynamic_database": "internal"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Controller database decision] ***
[0;32mok: [aap.example.com] => {[0m
[0;32m    "config_dynamic_database": "internal"[0m
[0;32m}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Hub database decision] ***
[0;32mok: [aap.example.com] => {[0m
[0;32m    "automationhub_config_dynamic_database": "internal"[0m
[0;32m}[0m

TASK [ansible.automation_platform_installer.config_dynamic : EDA Controller database decision] ***
[0;32mok: [aap.example.com] => {[0m
[0;32m    "automationedacontroller_config_dynamic_database": "internal"[0m
[0;32m}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Set postgres host and port to local if not set] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"pg_host": "127.0.0.1", "pg_port": "5432"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Set Automation EDA Controller postgres host and port to local if not set] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"automationedacontroller_pg_host": "127.0.0.1", "automationedacontroller_pg_port": "5432"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Ensure connectivity to hosts and gather facts] ***
[0;32mok: [aap.example.com][0m

TASK [ansible.automation_platform_installer.config_dynamic : Ensure user is root] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_effective_user_id != config_dynamic_user", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Check if node is registered with RHSM] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["subscription-manager", "identity"], "delta": "0:00:00.544317", "end": "2024-09-24 16:59:21.411907", "msg": "", "rc": 0, "start": "2024-09-24 16:59:20.867590", "stderr": "", "stderr_lines": [], "stdout": "system identity: f8397c6f-0c65-4716-9d5b-267a64fadb64\nname: aap.example.com\norg name: Default Organization\norg ID: Default_Organization\nenvironment name: Library", "stdout_lines": ["system identity: f8397c6f-0c65-4716-9d5b-267a64fadb64", "name: aap.example.com", "org name: Default Organization", "org ID: Default_Organization", "environment name: Library"]}[0m

TASK [ansible.automation_platform_installer.config_dynamic : set_fact] *********
[0;32mok: [aap.example.com] => {"ansible_facts": {"_rhsm_registered": true}, "changed": false}[0m

TASK [ansible.automation_platform_installer.config_dynamic : Collect ansible_hostname for localhost] ***
[0;32mok: [aap.example.com -> localhost][0m

TASK [ansible.automation_platform_installer.config_dynamic : Exclude ansible-core from package upgrade if control node] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_hostname == hostvars['localhost']['ansible_hostname']", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.automationhub] ******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationhub', [])", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.automationcontroller] ***

TASK [ansible.automation_platform_installer.automationcontroller : Set controller hostname] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_controller_hostname": "aap.example.com"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : set_fact] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(_nginx_disable_https | bool and _nginx_http_port | string != '80') or (not _nginx_disable_https | bool and _nginx_https_port | string != '443')", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : set_fact] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"controller_base_url": "https://aap.example.com"}, "changed": false}[0m

TASK [include_role : ansible.automation_platform_installer.automationedacontroller] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationedacontroller', [])", "skip_reason": "Conditional result was False"}[0m

PLAY [Group nodes by OS distribution] ******************************************

TASK [group hosts by distribution] *********************************************
[0;32mok: [aap.example.com] => {"add_group": "RedHat_9", "changed": false, "parent_groups": ["all"]}[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: RedHat_8[0m

PLAY [Group supported distributions] *******************************************

TASK [group hosts for supported distributions] *********************************
[0;32mok: [aap.example.com] => {"add_group": "supported", "changed": false, "parent_groups": ["all"]}[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: none[0m

PLAY [Group deprecated distributions] ******************************************
[0;36mskipping: no hosts matched[0m

PLAY [Ensure all node OS distributions are supported] **************************
[0;36mskipping: no hosts matched[0m
[1;35m[WARNING]: Could not match supplied host pattern, ignoring: deprecated[0m

PLAY [Check for deprecated platforms] ******************************************
[0;36mskipping: no hosts matched[0m

PLAY [Define role discovered variables, usable throughout the playbook] ********

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/tasks/vars.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.postgres : include_vars] ***********
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/../vars/RedHat-9.yml) => {"ansible_facts": {"existing_pg_dir": "/var/lib/pgsql/data", "pg_conf_bin": "/var/lib/pgsql/bin", "pg_conf_dir": "/var/lib/pgsql/data", "pg_conf_location": "{{ pg_conf_dir }}/postgresql.conf", "pg_hba_location": "{{ pg_conf_dir }}/pg_hba.conf", "pg_initdb_command": "/usr/bin/postgresql-setup initdb", "pg_systemd_name": "postgresql", "postgres_init_name": "postgresql"}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/RedHat-9.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/../vars/RedHat-9.yml"}[0m

TASK [Ensure all locales in system are in UTF-8] *******************************

TASK [ansible.automation_platform_installer.preflight : Load /etc/locale.conf] ***
[0;32mok: [aap.example.com] => {"changed": false, "content": "TEFORz1DLlVURi04Cg==", "encoding": "base64", "source": "/etc/locale.conf"}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => (item=LANG=C.UTF-8)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is not regex(\".*(utf8|UTF-8)\")", "item": "LANG=C.UTF-8", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.preflight : Get the LANG environment variable] ***
[0;32mok: [aap.example.com] => (item=LANG=C.UTF-8) => {"ansible_facts": {"_lang": "C.UTF-8"}, "ansible_loop_var": "item", "changed": false, "item": "LANG=C.UTF-8"}[0m

TASK [ansible.automation_platform_installer.preflight : Check if locale is properly installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "locale -a | grep -i '^C.UTF8$'", "delta": "0:00:00.005032", "end": "2024-09-24 16:59:23.217682", "failed_when_result": false, "msg": "", "rc": 0, "start": "2024-09-24 16:59:23.212650", "stderr": "", "stderr_lines": [], "stdout": "C.utf8", "stdout_lines": ["C.utf8"]}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_locale.rc != 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not postgres_exec_vars_only | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not postgres_exec_vars_only | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not postgres_exec_vars_only | bool", "skip_reason": "Conditional result was False"}[0m

PLAY [Sanity check] ************************************************************

TASK [include_role : ansible.automation_platform_installer.preflight] **********

TASK [ansible.automation_platform_installer.preflight : Preflight check - Fail if this machine lacks sufficient RAM.] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_memtotal_mb < required_ram|int", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Ensure all locales in system are in UTF-8] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/preflight/tasks/locale.yaml for aap.example.com[0m

TASK [ansible.automation_platform_installer.preflight : Load /etc/locale.conf] ***
[0;32mok: [aap.example.com] => {"changed": false, "content": "TEFORz1DLlVURi04Cg==", "encoding": "base64", "source": "/etc/locale.conf"}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => (item=LANG=C.UTF-8)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is not regex(\".*(utf8|UTF-8)\")", "item": "LANG=C.UTF-8", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.preflight : Get the LANG environment variable] ***
[0;32mok: [aap.example.com] => (item=LANG=C.UTF-8) => {"ansible_facts": {"_lang": "C.UTF-8"}, "ansible_loop_var": "item", "changed": false, "item": "LANG=C.UTF-8"}[0m

TASK [ansible.automation_platform_installer.preflight : Check if locale is properly installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "locale -a | grep -i '^C.UTF8$'", "delta": "0:00:00.004815", "end": "2024-09-24 16:59:24.369621", "failed_when_result": false, "msg": "", "rc": 0, "start": "2024-09-24 16:59:24.364806", "stderr": "", "stderr_lines": [], "stdout": "C.utf8", "stdout_lines": ["C.utf8"]}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_locale.rc != 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Get /var/log permissions] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"atime": 1727208628.049657, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "binary", "ctime": 1727209540.41, "dev": 64516, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 8403114, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "inode/directory", "mode": "0755", "mtime": 1727208517.8988554, "nlink": 10, "path": "/var/log", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "3820356789", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Does /var/log have appropriate permissions?] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not vl_st.stat.roth", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight - Fail if Automation Hub hostname is not FQDN or IP address] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationhub', [])", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight - Fail if Automation Hub hostname is not FQDN or IP address] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups.get('automationhub', [])", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Read in controller version] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"changed": false, "msg": "file not found: /var/lib/awx/.tower_version"}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Passwords must be defined for a fresh install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(pg_password|default('') == '') or (admin_password|default('') == '')", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Automation hub passwords must be defined for a fresh install (if hub is enabled)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Automation EDA controller database password must be defined for a fresh install (if eda is enabled)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Find mount options for /var, /var/tmp, and /tmp] ***
[0;32mok: [aap.example.com] => (item=/var) => {"ansible_loop_var": "item", "backup": "", "changed": false, "found": 0, "item": "/var", "msg": ""}[0m
[0;32mok: [aap.example.com] => (item=/var/tmp) => {"ansible_loop_var": "item", "backup": "", "changed": false, "found": 0, "item": "/var/tmp", "msg": ""}[0m
[0;32mok: [aap.example.com] => (item=/tmp) => {"ansible_loop_var": "item", "backup": "", "changed": false, "found": 0, "item": "/tmp", "msg": ""}[0m

TASK [ansible.automation_platform_installer.preflight : Fail if the filesystem is mounted with noexec] ***
[0;36mskipping: [aap.example.com] => (item={'changed': False, 'found': 0, 'msg': '', 'backup': '', 'diff': [{'before': '', 'after': '', 'before_header': '/proc/mounts (content)', 'after_header': '/proc/mounts (content)'}, {'before_header': '/proc/mounts (file attributes)', 'after_header': '/proc/mounts (file attributes)'}], 'invocation': {'module_args': {'name': '/proc/mounts', 'regexp': ' /var .*noexec', 'state': 'absent', 'path': '/proc/mounts', 'backrefs': False, 'create': False, 'backup': False, 'firstmatch': False, 'unsafe_writes': False, 'search_string': None, 'line': None, 'insertafter': None, 'insertbefore': None, 'validate': None, 'mode': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': '/var', 'ansible_loop_var': 'item'})  => {"ansible_loop_var": "item", "changed": false, "false_condition": "((item is changed) or (item is failed))", "item": {"ansible_loop_var": "item", "backup": "", "changed": false, "diff": [{"after": "", "after_header": "/proc/mounts (content)", "before": "", "before_header": "/proc/mounts (content)"}, {"after_header": "/proc/mounts (file attributes)", "before_header": "/proc/mounts (file attributes)"}], "failed": false, "found": 0, "invocation": {"module_args": {"attributes": null, "backrefs": false, "backup": false, "create": false, "firstmatch": false, "group": null, "insertafter": null, "insertbefore": null, "line": null, "mode": null, "name": "/proc/mounts", "owner": null, "path": "/proc/mounts", "regexp": " /var .*noexec", "search_string": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "state": "absent", "unsafe_writes": false, "validate": null}}, "item": "/var", "msg": ""}, "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item={'changed': False, 'found': 0, 'msg': '', 'backup': '', 'diff': [{'before': '', 'after': '', 'before_header': '/proc/mounts (content)', 'after_header': '/proc/mounts (content)'}, {'before_header': '/proc/mounts (file attributes)', 'after_header': '/proc/mounts (file attributes)'}], 'invocation': {'module_args': {'name': '/proc/mounts', 'regexp': ' /var/tmp .*noexec', 'state': 'absent', 'path': '/proc/mounts', 'backrefs': False, 'create': False, 'backup': False, 'firstmatch': False, 'unsafe_writes': False, 'search_string': None, 'line': None, 'insertafter': None, 'insertbefore': None, 'validate': None, 'mode': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': '/var/tmp', 'ansible_loop_var': 'item'})  => {"ansible_loop_var": "item", "changed": false, "false_condition": "((item is changed) or (item is failed))", "item": {"ansible_loop_var": "item", "backup": "", "changed": false, "diff": [{"after": "", "after_header": "/proc/mounts (content)", "before": "", "before_header": "/proc/mounts (content)"}, {"after_header": "/proc/mounts (file attributes)", "before_header": "/proc/mounts (file attributes)"}], "failed": false, "found": 0, "invocation": {"module_args": {"attributes": null, "backrefs": false, "backup": false, "create": false, "firstmatch": false, "group": null, "insertafter": null, "insertbefore": null, "line": null, "mode": null, "name": "/proc/mounts", "owner": null, "path": "/proc/mounts", "regexp": " /var/tmp .*noexec", "search_string": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "state": "absent", "unsafe_writes": false, "validate": null}}, "item": "/var/tmp", "msg": ""}, "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item={'changed': False, 'found': 0, 'msg': '', 'backup': '', 'diff': [{'before': '', 'after': '', 'before_header': '/proc/mounts (content)', 'after_header': '/proc/mounts (content)'}, {'before_header': '/proc/mounts (file attributes)', 'after_header': '/proc/mounts (file attributes)'}], 'invocation': {'module_args': {'name': '/proc/mounts', 'regexp': ' /tmp .*noexec', 'state': 'absent', 'path': '/proc/mounts', 'backrefs': False, 'create': False, 'backup': False, 'firstmatch': False, 'unsafe_writes': False, 'search_string': None, 'line': None, 'insertafter': None, 'insertbefore': None, 'validate': None, 'mode': None, 'owner': None, 'group': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': '/tmp', 'ansible_loop_var': 'item'})  => {"ansible_loop_var": "item", "changed": false, "false_condition": "((item is changed) or (item is failed))", "item": {"ansible_loop_var": "item", "backup": "", "changed": false, "diff": [{"after": "", "after_header": "/proc/mounts (content)", "before": "", "before_header": "/proc/mounts (content)"}, {"after_header": "/proc/mounts (file attributes)", "before_header": "/proc/mounts (file attributes)"}], "failed": false, "found": 0, "invocation": {"module_args": {"attributes": null, "backrefs": false, "backup": false, "create": false, "firstmatch": false, "group": null, "insertafter": null, "insertbefore": null, "line": null, "mode": null, "name": "/proc/mounts", "owner": null, "path": "/proc/mounts", "regexp": " /tmp .*noexec", "search_string": null, "selevel": null, "serole": null, "setype": null, "seuser": null, "state": "absent", "unsafe_writes": false, "validate": null}}, "item": "/tmp", "msg": ""}, "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.preflight : Ensure hostname on nodes with receptor installed is not localhost] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_hostname is match('localhost*')", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - User must be on AAP 1.2.x to upgrade] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - check for custom virtual environments] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - check for custom virtual environment path setting] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - warn if custom virtual environments present] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - pause if warning] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Detect partial installation or upgrade] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - check license type] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - check license type (detailed)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - check license validity for upgrades] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "result.content is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Ensure that psycopg2 python library is installed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : set_fact] **************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Copy cacert when pg sslmode is verify_full] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Ensure User-Provided Postgres Instance is at Version 12 or Higher] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : set_fact] **************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : assert] ****************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Ensure User-Provided Postgres Instance is UTF-8] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - remove temporary cacert for pg sslmode verify_full] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : set_fact] **************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : assert] ****************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "config_dynamic_database == \"external\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Check if /var/lib/pulp exists for Hub HA mode] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - /var/lib/pulp must exist for Hub HA mode] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length > 1", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Obtain package list] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Obtain automation-hub version] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Ensure hub token option is set on upgrade from 2.0 or prior] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Do not generate a new hub token if re-install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Preflight check - Generate a hub token if fresh install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.preflight : Check the architecture for ee-29 container image] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_ee_29_enabled | bool", "skip_reason": "Conditional result was False"}[0m

PLAY [Receptor Sanity check] ***************************************************

TASK [set_fact] ****************************************************************
[0;32mok: [aap.example.com] => {"ansible_facts": {"receptor_host_identifier": "aap.example.com"}, "changed": false}[0m

TASK [include_role : ansible.automation_platform_installer.receptor] ***********

TASK [ansible.automation_platform_installer.receptor : Include calculate_mesh] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/calculate_mesh.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Calculate Mesh Topology] ***
[0;32mok: [aap.example.com] => {"changed": false, "deprovision_mesh": {}, "mesh": {"aap.example.com": {"node_state": "active", "node_type": "hybrid", "peers": [], "receptor_control_filename": "receptor.sock", "receptor_control_service_name": "control", "receptor_listener": false, "receptor_listener_port": 27199, "receptor_listener_protocol": "tcp", "receptor_log_level": "info"}}, "mesh_groups": {"RedHat_9": ["aap.example.com"], "aap_valid_hosts": ["aap.example.com"], "all": ["aap.example.com"], "automationcontroller": ["aap.example.com"], "supported": ["aap.example.com"]}}[0m

TASK [ansible.automation_platform_installer.receptor : Review Mesh dot graph topology] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "generate_dot_file | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Store Receptor Mesh metadata] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"mesh": {"aap.example.com": {"node_state": "active", "node_type": "hybrid", "peers": [], "receptor_control_filename": "receptor.sock", "receptor_control_service_name": "control", "receptor_listener": false, "receptor_listener_port": 27199, "receptor_listener_protocol": "tcp", "receptor_log_level": "info"}}, "mesh_groups": {"RedHat_9": ["aap.example.com"], "aap_valid_hosts": ["aap.example.com"], "all": ["aap.example.com"], "automationcontroller": ["aap.example.com"], "supported": ["aap.example.com"]}}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Store Receptor Deprovision Mesh metadata] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"deprovision_mesh": {}, "deprovision_nodes": []}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Define receptor mesh facts] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"control_filename": "receptor.sock", "control_service_name": "control", "listener": false, "listener_port": "27199", "listener_protocol": "tcp", "log_level": "info", "node_state": "active", "node_type": "hybrid", "receptor_socket_dir": "/var/run/awx-receptor", "run_receptor_as": "awx"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Define receptor deprovision mesh facts] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "deprovision_mesh.keys() | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Include DNS asserts] ****
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/assert_dns.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Validate if receptor peer name is DNS resolvable] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.receptor : Report error when a receptor node cannot resolve a connected peer name] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.receptor : Include SSL asserts] ****
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/assert_ssl.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Ensure custom SSL Certificate Authority files were provided] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_ca_certfile is defined or mesh_ca_keyfile is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Verify custom node SSL private key] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Verify custom node SSL x509 key] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure custom SSL pair matches] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_ca_certfile is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure custom node SSL files are valid when provided] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_node_certfile is defined or mesh_node_keyfile is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Verify custom node SSL private key] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Verify custom node SSL x509 key] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure custom SSL pair matches] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_node_certfile is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure x509 certificate was signed by the expected Certificate Authority] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_node_certfile is defined", "skip_reason": "Conditional result was False"}[0m

PLAY [Deactivate and uninstall desired nodes] **********************************

TASK [set_fact] ****************************************************************
[0;32mok: [aap.example.com] => {"ansible_facts": {"receptor_host_identifier": "aap.example.com"}, "changed": false}[0m

TASK [Deprovision nodes] *******************************************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_state == 'deprovision'", "skip_reason": "Conditional result was False"}[0m

TASK [Prepare former isolated_nodes for upgrade path] **************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_state == 'iso_migrate'", "skip_reason": "Conditional result was False"}[0m

PLAY [Prep Tower node(s)] ******************************************************

PLAY [Initialize Ansible Automation Platform internal CA server and service variables] ***

TASK [Build aap_ca_server group] ***********************************************

TASK [ansible.automation_platform_installer.certificate_authority : Find an existing certificate authority] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"atime": 1727209580.2348318, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "6370e66a6e1bd4088fb09968f40acc764922469b", "ctime": 1727209579.4258265, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 16922640, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1727209579.4258265, "nlink": 1, "path": "/etc/ansible-automation-platform/ca/ansible-automation-platform-managed-ca-key.key", "pw_name": "root", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 3243, "uid": 0, "version": "2739844063", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Generate a list of existing certificate authority results] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_ca_server_hosts": ["aap.example.com"]}, "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Build list of eligible hosts if CA does not exist] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not aap_ca_server_hosts | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Select the first eliglible host for CA group] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_ca_server_hostname": "aap.example.com"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Add CA server host to inventory group] ***
[0;33mchanged: [aap.example.com] => {"add_host": {"groups": ["aap_ca_server"], "host_name": "aap.example.com", "host_vars": {}}, "changed": true}[0m

PLAY [Install Ansible Automation Platform internal CA] *************************

TASK [Configure internal CA] ***************************************************

TASK [ansible.automation_platform_installer.certificate_authority : include_tasks] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/certificate_authority/tasks/init.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.certificate_authority : Ensure python cryptography libraries are installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Ensure python3-pyOpenSSL libraries are installed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Create CA directory] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/etc/ansible-automation-platform/ca", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 115, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Set cipher if needed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_ca_pass is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Copy user-provided CA key file, if provided] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_ca_key_file | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Copy user-provided CA certificate file, if provided] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_ca_cert_file | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Generate root CA key] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Create CSR for CA certificate] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Create AAP CA certificate] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Get CA certificate SKI for Signing] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/certificate_authority/tasks/get_cacert.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.certificate_authority : Get AAP CA certificate info] ***
[0;32mok: [aap.example.com] => {"authority_cert_issuer": null, "authority_cert_serial_number": null, "authority_key_identifier": null, "basic_constraints": ["CA:TRUE"], "basic_constraints_critical": true, "changed": false, "expired": false, "extended_key_usage": null, "extended_key_usage_critical": false, "extensions_by_oid": {"2.5.29.14": {"critical": false, "value": "BBQLwxFFMafe6mwdsCO/+MbWhoGj2A=="}, "2.5.29.15": {"critical": true, "value": "AwICBA=="}, "2.5.29.19": {"critical": true, "value": "MAMBAf8="}}, "fingerprints": {"blake2b": "2a:90:dc:28:b3:84:84:12:62:3a:79:8d:7b:c6:e4:50:7f:1e:01:fe:f7:4d:53:4d:ac:73:03:f9:2b:5e:e0:d3:5d:c0:27:ac:07:35:7d:fc:23:78:b8:18:72:80:cd:40:ac:f6:a3:c4:aa:ee:a6:d7:04:57:90:ad:79:4d:f7:11", "blake2s": "55:85:2d:92:23:4d:c9:4b:4a:e2:69:5a:03:b9:74:2c:52:44:af:90:e5:91:84:9d:3b:0f:4b:53:ae:f0:ef:de", "md5": "9c:c1:96:bc:17:33:b2:f1:7e:83:0b:ad:3d:1e:ad:19", "sha1": "0d:12:a2:ef:c2:ba:36:8a:5a:49:5b:64:a3:29:cb:70:04:bc:05:35", "sha224": "ba:61:04:04:a6:5d:e5:0b:f3:ab:77:78:0f:89:ad:9a:e3:19:d5:46:34:f5:d4:83:ab:28:51:fc", "sha256": "8f:a9:0a:a2:78:1b:e9:0b:f3:a0:ac:ae:92:63:d6:34:bd:49:a2:43:f8:3c:9e:e8:b6:3d:ff:33:4f:48:f9:83", "sha384": "39:8b:3b:98:ec:de:fc:38:77:00:f5:79:50:fe:f6:ac:40:f6:e7:a0:bd:ba:a1:c6:57:a8:de:a7:d0:c6:fa:a6:7f:c8:60:d6:37:9f:6d:93:55:a6:18:02:15:c3:3c:02", "sha3_224": "e2:d9:08:ad:36:a5:56:37:08:cb:b2:bb:f7:7b:2a:9d:e0:87:3a:91:f6:2a:c7:6a:ad:e7:8d:8f", "sha3_256": "5e:9a:0a:eb:b5:ce:1b:87:26:45:72:8e:d5:54:c0:e2:93:20:35:06:10:be:86:a6:c0:e8:76:2b:37:c3:ae:09", "sha3_384": "0e:33:e7:c2:86:cd:42:77:87:80:f7:25:3c:69:c5:e3:65:28:e4:1c:c1:53:c8:c7:77:b6:30:1f:08:93:f1:e8:83:e0:66:41:0b:33:12:ac:01:49:05:0f:e9:63:80:dd", "sha3_512": "e3:f5:b1:e0:48:5b:2c:b4:50:b0:1b:d1:30:c4:02:f8:87:23:b9:24:48:ad:b3:37:67:38:24:33:8c:27:18:57:24:a7:6a:19:6f:39:fb:54:a4:0f:1d:f1:d3:e6:ef:2e:70:d0:1d:1e:dc:97:3d:c2:52:20:f6:f3:21:3c:f3:89", "sha512": "04:cf:53:38:61:5a:f6:36:f6:8a:62:04:1b:79:61:2a:bd:fd:61:5a:d8:6a:bc:65:19:d4:33:95:3c:60:58:93:5c:9a:7e:77:da:bb:ea:ee:b0:1c:90:3a:9f:a5:8a:64:4a:90:91:cb:6c:4b:14:0e:b3:e3:f3:32:90:9b:28:b7", "shake_128": "24:ea:a2:0e:7d:1c:83:10:42:12:0f:17:53:59:7f:f4:c2:13:99:21:ef:68:21:30:3b:d9:14:d6:35:f0:9b:9c", "shake_256": "7b:f5:f8:6f:b4:99:ec:2b:28:64:5c:4d:a7:b0:3f:c2:b3:27:12:f3:13:56:7d:9b:b7:c0:e0:1d:2c:a6:1a:d5"}, "issuer": {"commonName": "Ansible Automation Platform", "countryName": "US", "organizationName": "Ansible Automation Platform by Red Hat"}, "issuer_ordered": [["countryName", "US"], ["organizationName", "Ansible Automation Platform by Red Hat"], ["commonName", "Ansible Automation Platform"]], "issuer_uri": null, "key_usage": ["Certificate Sign"], "key_usage_critical": true, "not_after": "20340922202621Z", "not_before": "20240924202621Z", "ocsp_must_staple": null, "ocsp_must_staple_critical": false, "ocsp_uri": null, "public_key": "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEApaMI3dnhoO60QzXHoRpU\n6u+2Wbw5pjIy8BSIOWH4WGI5T1gke27Q7bsVSisJuAPz88sSV5pUNSpkmbw8cuui\nJzls68p+6Q42t2apMXgwZrq9X77n+RJhiMZSI6rS4dC+0scYQ6A8xsjDdDcvas12\nx/IyD03JnfeU40FlllXSmqYlzsngWNcRAJoHIyAqAsY5NJLGoNsPBB6YOP8YjRka\n0GeXAnzA3VeGYZlWeEzZw3gKCzflNWMFcE8ArOWaO9N9YjmHIVkNHvSeHtsbYYIt\nvKpjkNCrCq4oqbKyqqA/o3tFBrTqjJdqWaTkZYSmT1qraon7Uy4aRKWbxJpcKctU\nlaEZ2Sfiw5H8DfwMKJVJOC2O9V5v6HlQa2m1vL53Lj1JBNPQtSGWCPi//nEE7UDn\nyqNPbFrTpvHKr43oVO7sskLykxVm/6YPs8L3Uk4b72RRmwGyBYx59+xdCUoVpbfD\nOQ+tgXPGiLYhBoktUEzeiEBmQoHGBZ87CJ6IFKHjZGddes7aO/OiDgJriirQO4qr\nJbuEmxrtDVCyp2nD3XPHpJAvVoYAdc+BPEi/wIPf72UGKPARrlT1Ab+43UczM97q\nwSJf5bO8bUZ7Tj8uRgp3my0Y6vGk2oWMFACeroY2XXyxd4wGyQty4AryPHp0vIbS\nzNWPWkWkHcoUbB79D0TLKJUCAwEAAQ==\n-----END PUBLIC KEY-----\n", "public_key_data": {"exponent": 65537, "modulus": 675739409044767587130038275973426659467916001449763230376864899227648055570546185996053450209213147758170843428694963203759573266930026605170647342109947849338949735190326404198275272116699469749517192846563594690395768865333048635268177769343406973056724315659386536668088569649859855961055879788267980282615801071380862408835720618932471140207960888372582631523202910736312084397094875621699914243335600147808344610641025445880465426969274134723168270873570592211854602527873592197127212720767803397015105574574443644178899614401754850030878914187096432850886491329629479924624291454028186458530785718414633455277169113406924315927788729311195787258999093919001309714699896022193482869512915543397563319769050786697669431972187812788383924378736948774532114951298857614609405206651383408278232731666014333963416584395815338162980501975930996001004123202580054480736717172632282052238565506690213521098122370371675538195025971548180543098551176855758831094279184054433648013302130740013269249431099657665628540145707731214552583529030236390764210980743078255276175983923102611924241004927036373722549432033092928672675336971582539679932070312189257240503285194817248665256525698633226474534414846661553388044375150842573440728901781, "size": 4096}, "public_key_fingerprints": {"blake2b": "6a:c6:7e:b7:43:a6:fd:4a:0b:24:ab:93:e8:b2:50:4a:e7:93:6d:ae:ce:27:0b:99:e7:51:ec:f3:64:e5:5a:2a:f4:9b:da:6a:67:ae:7c:b5:5a:f8:bd:cc:7c:9a:03:74:09:e8:04:0c:95:ee:aa:35:ba:1b:0b:12:12:f9:81:f6", "blake2s": "50:b2:81:6d:6f:ed:e8:f1:c1:82:d2:18:00:17:78:55:00:1a:25:3d:15:10:9b:53:8e:f7:ee:27:09:46:0b:e9", "md5": "b1:1d:c0:e5:07:0c:c5:3e:2f:af:f1:09:96:e2:5d:ce", "sha1": "dc:40:c4:1b:76:c7:1e:83:5d:c1:f3:fa:15:be:5b:08:e3:e2:1a:71", "sha224": "8a:cd:25:08:23:f9:d4:11:e8:20:49:34:9e:7e:33:e1:84:bc:01:8f:2f:73:39:4c:b5:6a:db:0d", "sha256": "a0:55:e4:54:0d:63:48:c6:e4:25:dc:e7:0b:ca:47:fd:78:d1:f8:33:00:1e:a5:db:39:a9:56:fe:0f:61:b4:2e", "sha384": "f3:de:fc:1f:cc:a6:11:df:83:16:a1:d2:e1:20:6b:2a:4d:2e:24:08:0d:a0:5e:e7:ae:68:be:ab:1c:33:c4:46:6b:1d:c7:61:f7:d8:f8:88:16:f0:54:cc:b4:4c:3a:03", "sha3_224": "41:aa:5f:11:82:f2:0e:fc:ac:0a:7e:61:96:69:34:dd:85:5a:e0:eb:00:72:06:47:f0:76:67:71", "sha3_256": "41:63:57:6f:ef:b0:91:2c:f3:07:8f:61:0c:4a:22:95:3b:50:6b:33:cb:63:d5:ff:ab:38:6a:48:b8:7b:3d:72", "sha3_384": "ec:8e:d4:dc:b3:61:d1:57:db:ee:3a:03:44:74:78:3c:30:13:61:3f:03:7b:40:93:08:45:d8:f1:d3:c6:a8:b3:2a:d1:63:e3:76:17:be:a6:e3:7c:3b:c1:8a:ba:fc:a7", "sha3_512": "d3:b6:b9:f4:61:79:30:d8:fa:67:6c:62:1e:00:1f:e4:6c:80:b3:07:c6:b5:ee:45:35:03:8b:f6:82:ee:6d:88:54:d3:e5:14:c4:10:29:40:59:c6:77:24:7b:16:90:39:31:07:03:a9:5f:8b:2c:d2:a4:ba:b1:bf:41:4f:55:31", "sha512": "e2:2f:60:bf:15:f6:af:d6:a1:9e:9f:26:c0:6b:15:5e:b4:21:b7:06:fa:10:fd:d4:20:31:76:fb:ca:95:fe:86:1e:3b:34:33:de:81:78:90:0e:6b:99:7f:51:d2:6f:76:92:37:f8:9b:51:e9:aa:c0:d7:c4:76:fc:3c:c2:43:db", "shake_128": "53:86:ba:63:73:a5:ec:38:f6:ad:5b:98:47:cf:d0:93:65:c3:db:39:b4:9b:ce:55:41:75:34:7b:05:99:14:11", "shake_256": "f0:9b:2c:26:ab:b9:cc:04:3d:d6:b9:a1:f7:13:39:8f:60:20:95:8d:83:c8:72:11:fd:08:6c:80:36:42:31:83"}, "public_key_type": "RSA", "serial_number": 6429664772985745705634333590463038473548474733, "signature_algorithm": "sha256WithRSAEncryption", "subject": {"commonName": "Ansible Automation Platform", "countryName": "US", "organizationName": "Ansible Automation Platform by Red Hat"}, "subject_alt_name": null, "subject_alt_name_critical": false, "subject_key_identifier": "0b:c3:11:45:31:a7:de:ea:6c:1d:b0:23:bf:f8:c6:d6:86:81:a3:d8", "subject_ordered": [["countryName", "US"], ["organizationName", "Ansible Automation Platform by Red Hat"], ["commonName", "Ansible Automation Platform"]], "valid_at": {}, "version": 3}[0m

TASK [ansible.automation_platform_installer.certificate_authority : set_fact] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_ca_cert_ski": "0b:c3:11:45:31:a7:de:ea:6c:1d:b0:23:bf:f8:c6:d6:86:81:a3:d8"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Slurp AAP CA certificate] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

PLAY [Install postgres database node] ******************************************

TASK [set_fact] ****************************************************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(groups['automationhub'] | default([]) | length) or (groups['automationedacontroller'] | default([]) | length)", "skip_reason": "Conditional result was False"}[0m

TASK [set_fact] ****************************************************************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_do_run_db_install": true}, "changed": false}[0m

TASK [Add internal CA certificate to trust store] ******************************

TASK [ansible.automation_platform_installer.certificate_authority : Ensure ca-certificates is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Copy custom CA cert] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "custom_ca_cert is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Place AAP CA certificate] ***
[0;32mok: [aap.example.com] => {"changed": false, "checksum": "575ad0088d18dbf49580995f9d1c0dd6e970c92e", "dest": "/etc/pki/ca-trust/source/anchors/ansible-automation-platform-managed-ca-cert.crt", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/pki/ca-trust/source/anchors/ansible-automation-platform-managed-ca-cert.crt", "secontext": "system_u:object_r:cert_t:s0", "size": 2000, "state": "file", "uid": 0}[0m

TASK [Run repo_management (setup)] *********************************************

TASK [ansible.automation_platform_installer.repo_management : include_vars] ****
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/../vars/RedHat.yml) => {"ansible_facts": {"redhat_automation_platform_rhsm_repo": "ansible-automation-platform-{{ automation_platform_version }}-for-rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}-rpms", "yum_repo_keys": ["RPM-GPG-KEY-redhat-release"]}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/RedHat.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/../vars/RedHat.yml"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install yum repo keys] ***
[0;32mok: [aap.example.com] => (item=RPM-GPG-KEY-redhat-release) => {"ansible_loop_var": "item", "changed": false, "checksum": "379962dabeaa7fd9e3b57d3669198151279fe525", "dest": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release", "gid": 0, "group": "root", "item": "RPM-GPG-KEY-redhat-release", "mode": "0644", "owner": "root", "path": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release", "secontext": "system_u:object_r:cert_t:s0", "size": 1854, "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.repo_management : Install subscription-manager-rhsm-certificates] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.repo_management : Determine if rhsm repository exists] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"atime": 1727211571.137661, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 16, "charset": "us-ascii", "checksum": "6fd0f3df0e8566babba23b5af9a3023a4093ea01", "ctime": 1727211570.9856598, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 9304056, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0644", "mtime": 1727211570.9856598, "nlink": 1, "path": "/etc/yum.repos.d/redhat.repo", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4843, "uid": 0, "version": "2758014338", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable Automation Platform rhsm repository] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["subscription-manager", "repos", "--enable", "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"], "delta": "0:00:02.677575", "end": "2024-09-24 16:59:45.585008", "msg": "", "rc": 0, "start": "2024-09-24 16:59:42.907433", "stderr": "", "stderr_lines": [], "stdout": "Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is enabled for this system.", "stdout_lines": ["Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is enabled for this system."]}[0m

TASK [ansible.automation_platform_installer.repo_management : Explain Automation Platform rhsm repository failure] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_rhsm_repo_enable.failed | default(false)", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable module hotfixes flag] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["dnf", "config-manager", "--setopt=ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms.module_hotfixes=1", "--save"], "delta": "0:00:00.376314", "end": "2024-09-24 16:59:46.438012", "msg": "", "rc": 0, "start": "2024-09-24 16:59:46.061698", "stderr": "", "stderr_lines": [], "stdout": "Updating Subscription Management repositories.", "stdout_lines": ["Updating Subscription Management repositories."]}[0m

TASK [ansible.automation_platform_installer.repo_management : Set AAP repo for update] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_repo_for_update": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.repo_management : Ensure rsync is installed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Copy bundle packages to repo source directory] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install the Automation Platform bundle repository] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Remove legacy ansible-tower repository] ***
[0;32mok: [aap.example.com] => {"changed": false, "path": "/etc/yum.repos.d/ansible-tower.repo", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install the Automation Platform yum repository.] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aw_repo_url is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Set repo list for bundle install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Set repo list for online install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "yum_repo is not skipped", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable Ansible Automation Platform repo] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "extra_repos is defined", "skip_reason": "Conditional result was False"}[0m

TASK [Run packages_el] *********************************************************

TASK [ansible.automation_platform_installer.packages_el : include packages_el variables] ***
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/../vars/default.yml) => {"ansible_facts": {"dnf_modules": ["python39"], "dnf_modules_disable": ["php"], "el_dependencies": ["python3-psycopg2", "python3-setuptools", "python3-libselinux", "python3-setools", "python3-cryptography", "dnf-utils", "sudo", "acl"], "existing_pg_dir": "/var/lib/pgsql/data", "upgrade_postgres": false}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/default.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/../vars/default.yml"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/tasks/install_deps.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.packages_el : Install playbook dependencies] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: python3-psycopg2-2.9.3-3.el9ap.x86_64", "Installed: libpq-13.11-1.el9.x86_64"]}[0m

TASK [ansible.automation_platform_installer.packages_el : Disable required dnf modules] ***
[0;36mskipping: [aap.example.com] => (item=php)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "item": "php", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.packages_el : Enable required dnf modules] ***
[0;36mskipping: [aap.example.com] => (item=python39)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "item": "python39", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "packages_el_install_tower | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "packages_el_install_tower | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Uninstall nginx-all-modules] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": ["nginx-mod* is not installed"]}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/tasks/install_postgres.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.packages_el : Check for old PostgreSQL data] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.packages_el : Read PG_VERSION file contents] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "old_pg_version_file.stat.exists", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Check if PostgreSQL has already been upgraded] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.packages_el : Check if PostgreSQL has already been upgraded] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.packages_el : Determine if PostgreSQL 10 is present] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"upgrade_from_postgres_10": false}, "changed": false}[0m

TASK [ansible.automation_platform_installer.packages_el : Determine if we should upgrade PostgreSQL] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"upgrade_postgres": false}, "changed": false}[0m

TASK [ansible.automation_platform_installer.packages_el : Uninstall PostgreSQL 12 Client] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Enable PostgreSQL 13 dnf modules] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Install PostgreSQL] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Install PostgreSQL] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: perl-IO-Socket-IP-0.41-5.el9.noarch", "Installed: perl-libnet-3.13-4.el9.noarch", "Installed: perl-Exporter-5.74-461.el9.noarch", "Installed: perl-File-Temp-1:0.231.100-4.el9.noarch", "Installed: perl-Getopt-Long-1:2.52-4.el9.noarch", "Installed: libxslt-1.1.34-9.el9.x86_64", "Installed: perl-Pod-Usage-4:2.01-4.el9.noarch", "Installed: perl-Scalar-List-Utils-4:1.56-461.el9.x86_64", "Installed: perl-Socket-4:2.031-4.el9.x86_64", "Installed: perl-AutoLoader-5.74-481.el9.noarch", "Installed: perl-Fcntl-1.13-481.el9.x86_64", "Installed: perl-Term-ANSIColor-5.01-461.el9.noarch", "Installed: perl-MIME-Base64-3.16-4.el9.x86_64", "Installed: perl-SelectSaver-1.02-481.el9.noarch", "Installed: perl-Text-ParseWords-3.30-460.el9.noarch", "Installed: uuid-1.6.2-55.el9.x86_64", "Installed: perl-URI-5.09-3.el9.noarch", "Installed: perl-B-1.80-481.el9.x86_64", "Installed: perl-Text-Tabs+Wrap-2013.0523-460.el9.noarch", "Installed: perl-if-0.60.800-481.el9.noarch", "Installed: perl-overloading-0.02-481.el9.noarch", "Installed: perl-Class-Struct-0.66-481.el9.noarch", "Installed: perl-subs-1.03-481.el9.noarch", "Installed: perl-constant-1.33-461.el9.noarch", "Installed: perl-Net-SSLeay-1.92-2.el9.x86_64", "Installed: perl-Errno-1.30-481.el9.x86_64", "Installed: perl-File-Basename-2.85-481.el9.noarch", "Installed: perl-File-stat-1.09-481.el9.noarch", "Installed: perl-parent-1:0.238-460.el9.noarch", "Installed: perl-FileHandle-2.03-481.el9.noarch", "Installed: perl-Getopt-Std-1.12-481.el9.noarch", "Installed: perl-HTTP-Tiny-0.076-462.el9.noarch", "Installed: perl-IO-1.43-481.el9.x86_64", "Installed: perl-IPC-Open3-1.21-481.el9.noarch", "Installed: perl-NDBM_File-1.15-481.el9.x86_64", "Installed: perl-POSIX-1.94-481.el9.x86_64", "Installed: perl-Symbol-1.08-481.el9.noarch", "Installed: perl-Pod-Escapes-1:1.07-460.el9.noarch", "Installed: perl-Data-Dumper-2.174-462.el9.x86_64", "Installed: perl-Storable-1:3.21-460.el9.x86_64", "Installed: perl-Carp-1.50-460.el9.noarch", "Installed: perl-Digest-MD5-2.58-4.el9.x86_64", "Installed: perl-Encode-4:3.08-462.el9.x86_64", "Installed: perl-base-2.27-481.el9.noarch", "Installed: perl-PathTools-3.78-461.el9.x86_64", "Installed: perl-interpreter-4:5.32.1-481.el9.x86_64", "Installed: perl-libs-4:5.32.1-481.el9.x86_64", "Installed: perl-IO-Socket-SSL-2.073-1.el9.noarch", "Installed: perl-podlators-1:4.14-460.el9.noarch", "Installed: perl-mro-1.23-481.el9.x86_64", "Installed: perl-overload-1.31-481.el9.noarch", "Installed: postgresql-13.16-1.el9_4.x86_64", "Installed: postgresql-contrib-13.16-1.el9_4.x86_64", "Installed: perl-vars-1.05-481.el9.noarch", "Installed: perl-Mozilla-CA-20200520-6.el9.noarch", "Installed: postgresql-private-libs-13.16-1.el9_4.x86_64", "Installed: postgresql-server-13.16-1.el9_4.x86_64", "Installed: perl-Pod-Simple-1:3.42-4.el9.noarch", "Installed: perl-Term-Cap-1.17-460.el9.noarch", "Installed: perl-Time-Local-2:1.300-7.el9.noarch", "Installed: perl-Digest-1.19-4.el9.noarch", "Installed: perl-Pod-Perldoc-3.28.01-461.el9.noarch", "Installed: perl-File-Path-2.18-4.el9.noarch"]}[0m

TASK [ansible.automation_platform_installer.packages_el : Upgrade PostgreSQL data from 10 --> 12] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "upgrade_from_postgres_10 | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Upgrade PostgreSQL] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "upgrade_postgres | bool", "skip_reason": "Conditional result was False"}[0m

TASK [meta] ********************************************************************

TASK [include_role : ansible.automation_platform_installer.postgres] ***********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(config_dynamic_database == 'external') or (automationhub_config_dynamic_database == 'external') or (automationedacontroller_config_dynamic_database == 'external')", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.postgres] ***********

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/tasks/vars.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.postgres : include_vars] ***********
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/../vars/RedHat-9.yml) => {"ansible_facts": {"existing_pg_dir": "/var/lib/pgsql/data", "pg_conf_bin": "/var/lib/pgsql/bin", "pg_conf_dir": "/var/lib/pgsql/data", "pg_conf_location": "{{ pg_conf_dir }}/postgresql.conf", "pg_hba_location": "{{ pg_conf_dir }}/pg_hba.conf", "pg_initdb_command": "/usr/bin/postgresql-setup initdb", "pg_systemd_name": "postgresql", "postgres_init_name": "postgresql"}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/RedHat-9.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/vars/../vars/RedHat-9.yml"}[0m

TASK [Ensure all locales in system are in UTF-8] *******************************

TASK [ansible.automation_platform_installer.preflight : Load /etc/locale.conf] ***
[0;32mok: [aap.example.com] => {"changed": false, "content": "TEFORz1DLlVURi04Cg==", "encoding": "base64", "source": "/etc/locale.conf"}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => (item=LANG=C.UTF-8)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is not regex(\".*(utf8|UTF-8)\")", "item": "LANG=C.UTF-8", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.preflight : Get the LANG environment variable] ***
[0;32mok: [aap.example.com] => (item=LANG=C.UTF-8) => {"ansible_facts": {"_lang": "C.UTF-8"}, "ansible_loop_var": "item", "changed": false, "item": "LANG=C.UTF-8"}[0m

TASK [ansible.automation_platform_installer.preflight : Check if locale is properly installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "locale -a | grep -i '^C.UTF8$'", "delta": "0:00:00.004922", "end": "2024-09-24 17:00:12.616545", "failed_when_result": false, "msg": "", "rc": 0, "start": "2024-09-24 17:00:12.611623", "stderr": "", "stderr_lines": [], "stdout": "C.utf8", "stdout_lines": ["C.utf8"]}[0m

TASK [ansible.automation_platform_installer.preflight : fail] ******************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_locale.rc != 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/tasks/preflight.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.postgres : Preflight check - Ensure that the Postgres data dir is not a mount point] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": ["mountpoint", "-q", "/var/lib/pgsql/data"], "delta": "0:00:00.003588", "end": "2024-09-24 17:00:13.069576", "failed_when_result": false, "msg": "non-zero return code", "rc": 32, "start": "2024-09-24 17:00:13.065988", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.postgres : Fail if the data dir is a mount point] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "is_pg_data_mount.rc  | int == 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/tasks/init.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.postgres : init postgresql] ********
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["/usr/bin/postgresql-setup", "initdb"], "delta": "0:00:01.143694", "end": "2024-09-24 17:00:14.682105", "msg": "", "rc": 0, "start": "2024-09-24 17:00:13.538411", "stderr": "WARNING: using obsoleted argument syntax, try --help\nWARNING: arguments transformed to: postgresql-setup --initdb --unit postgresql\n * Initializing database in '/var/lib/pgsql/data'\n * Initialized, logs are in /var/lib/pgsql/initdb_postgresql.log", "stderr_lines": ["WARNING: using obsoleted argument syntax, try --help", "WARNING: arguments transformed to: postgresql-setup --initdb --unit postgresql", " * Initializing database in '/var/lib/pgsql/data'", " * Initialized, logs are in /var/lib/pgsql/initdb_postgresql.log"], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.postgres : Make sure PostgreSQL is started] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "postgresql", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "systemd-journald.socket system.slice basic.target network.target sysinit.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "PostgreSQL database server", "DevicePolicy": "auto", "DynamicUser": "no", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "FreezerState": "running", "GID": "[not set]", "Group": "postgres", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "postgresql.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "2", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "postgresql.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "-1000", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "2", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "infinity", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "infinity", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "postgres", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [ansible.automation_platform_installer.postgres : Wait for PostgreSQL to start if it wasnt] ***
[0;32mok: [aap.example.com] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 5432, "search_regex": null, "state": "started"}[0m

TASK [ansible.automation_platform_installer.postgres : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/postgres/tasks/conf.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.postgres : Update postgresql authentication settings] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "f55a86579e0e9a123b6c93f8317b83de1dc20d1a", "dest": "/var/lib/pgsql/data/pg_hba.conf", "gid": 26, "group": "postgres", "md5sum": "ec56982139414a104c26adf3a82d7a04", "mode": "0600", "owner": "postgres", "secontext": "unconfined_u:object_r:postgresql_db_t:s0", "size": 487, "src": "/root/.ansible/tmp/ansible-tmp-1727211616.2658267-3142681-89355080669352/source", "state": "file", "uid": 26}[0m

TASK [ansible.automation_platform_installer.postgres : Apply postgresql general settings] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "2bd51538ceb0e7d3ceb52cad944c86e9b8f70080", "dest": "/var/lib/pgsql/data/postgresql.conf", "gid": 26, "group": "postgres", "md5sum": "ba533fc1c124a73482db534e73d4ede1", "mode": "0600", "owner": "postgres", "secontext": "unconfined_u:object_r:postgresql_db_t:s0", "size": 3894, "src": "/root/.ansible/tmp/ansible-tmp-1727211617.1337845-3142699-120240149235168/source", "state": "file", "uid": 26}[0m

TASK [ansible.automation_platform_installer.postgres : Copy server SSL certificate] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_postgres_use_ssl | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : Copy server SSL private key] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_postgres_use_ssl | bool", "skip_reason": "Conditional result was False"}[0m

TASK [Use internal CA for internal database] ***********************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_postgres_use_ssl | bool", "skip_reason": "Conditional result was False"}[0m

TASK [Use internal CA for external database] ***********************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_postgres_use_ssl | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : Trigger postgres notifier for internally managed certificate changes] ***
[0;36mskipping: [aap.example.com] => {"false_condition": "aap_service_restart | default(false)"}[0m

TASK [ansible.automation_platform_installer.postgres : Create unix socket directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 26, "group": "postgres", "mode": "02775", "owner": "postgres", "path": "/var/run/postgresql", "secontext": "system_u:object_r:postgresql_var_run_t:s0", "size": 80, "state": "directory", "uid": 26}[0m

TASK [ansible.automation_platform_installer.postgres : Configure postgresql tmpfiles.d] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "241b3dff32ef1ee86c424ac3e1bf8a10217a55d5", "dest": "/usr/lib/tmpfiles.d/postgresql.conf", "gid": 0, "group": "root", "md5sum": "dcbe09731b1a6d92683f02966abfeed3", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:lib_t:s0", "size": 47, "src": "/root/.ansible/tmp/ansible-tmp-1727211618.4366574-3142738-262460244712037/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.postgres : restart postgresql when authentication settings changed] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "postgresql", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:00:15 EDT", "ActiveEnterTimestampMonotonic": "2079673678", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "sysinit.target basic.target systemd-journald.socket network.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:00:15 EDT", "AssertTimestampMonotonic": "2079493063", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "29134000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:00:15 EDT", "ConditionTimestampMonotonic": "2079493062", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/postgresql.service", "ControlGroupId": "4878", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "PostgreSQL database server", "DevicePolicy": "auto", "DynamicUser": "no", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "14852", "ExecMainStartTimestamp": "Tue 2024-09-24 17:00:15 EDT", "ExecMainStartTimestampMonotonic": "2079505879", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:00:15 EDT] ; stop_time=[n/a] ; pid=14852 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[Tue 2024-09-24 17:00:15 EDT] ; stop_time=[n/a] ; pid=14852 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:00:15 EDT] ; stop_time=[Tue 2024-09-24 17:00:15 EDT] ; pid=14850 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[Tue 2024-09-24 17:00:15 EDT] ; stop_time=[Tue 2024-09-24 17:00:15 EDT] ; pid=14850 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "FreezerState": "running", "GID": "26", "Group": "postgres", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "postgresql.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Tue 2024-09-24 17:00:15 EDT", "InactiveExitTimestampMonotonic": "2079497082", "InvocationID": "ef88d5a24e084e2a89c05f692aaf9eab", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "2", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "14852", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "17354752", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "postgresql.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "-1000", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "2", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:00:15 EDT", "StateChangeTimestampMonotonic": "2079673678", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "8", "TasksMax": "48684", "TimeoutAbortUSec": "infinity", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "infinity", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "26", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "postgres", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

TASK [ansible.automation_platform_installer.postgres : wait for postgresql restart] ***
[0;32mok: [aap.example.com] => {"changed": false, "elapsed": 0, "match_groupdict": {}, "match_groups": [], "path": null, "port": 5432, "search_regex": null, "state": "started"}[0m

TASK [ansible.automation_platform_installer.postgres : configure postgresql to start automatically] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "postgresql", "status": {"AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ActiveEnterTimestampMonotonic": "2083971246", "ActiveExitTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ActiveExitTimestampMonotonic": "2083696891", "ActiveState": "active", "After": "sysinit.target basic.target systemd-journald.socket network.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:00:19 EDT", "AssertTimestampMonotonic": "2083797320", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "41829000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ConditionTimestampMonotonic": "2083797318", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/postgresql.service", "ControlGroupId": "4923", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "PostgreSQL database server", "DevicePolicy": "auto", "DynamicUser": "no", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "15779", "ExecMainStartTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ExecMainStartTimestampMonotonic": "2083806861", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:00:19 EDT] ; stop_time=[n/a] ; pid=15779 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[Tue 2024-09-24 17:00:19 EDT] ; stop_time=[n/a] ; pid=15779 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:00:19 EDT] ; stop_time=[Tue 2024-09-24 17:00:19 EDT] ; pid=15777 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[Tue 2024-09-24 17:00:19 EDT] ; stop_time=[Tue 2024-09-24 17:00:19 EDT] ; pid=15777 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "FreezerState": "running", "GID": "26", "Group": "postgres", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "postgresql.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:00:19 EDT", "InactiveEnterTimestampMonotonic": "2083796963", "InactiveExitTimestamp": "Tue 2024-09-24 17:00:19 EDT", "InactiveExitTimestampMonotonic": "2083800115", "InvocationID": "0a48983c539d4300a7c8be46e9f08b5b", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "2", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "15779", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "47464448", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "postgresql.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "-1000", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "2", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:00:19 EDT", "StateChangeTimestampMonotonic": "2083971246", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "8", "TasksMax": "48684", "TimeoutAbortUSec": "infinity", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "infinity", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "26", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "postgres", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

TASK [ansible.automation_platform_installer.postgres : create the awx postgres user] ***
[1;35m[WARNING]: Module remote_tmp /var/lib/pgsql/.ansible/tmp did not exist and was[0m
[1;35mcreated with a mode of 0700, this may cause issues when running as another[0m
[1;35muser. To avoid this, create the remote_tmp dir with the correct permissions[0m
[1;35mmanually[0m
[0;33mchanged: [aap.example.com] => {"changed": true, "queries": ["CREATE USER \"awx\" WITH ENCRYPTED PASSWORD %(password)s "], "user": "awx"}[0m

TASK [ansible.automation_platform_installer.postgres : create the postgresql database for awx] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "db": "awx", "executed_commands": ["CREATE DATABASE \"awx\" OWNER \"awx\""]}[0m

TASK [ansible.automation_platform_installer.postgres : create the automationhub postgres user] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : create the postgresql database for automationhub] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : enable the postgresql hstore extension] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : create the automationedacontroller postgres user] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.postgres : create the postgresql database for automationedacontroller] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationedacontroller'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.firewall] ***********

TASK [ansible.automation_platform_installer.firewall : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/firewall/tasks/discover.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.firewall : Determine if firewalld is running] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "firewall-cmd --state", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'firewall-cmd'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.firewall : Determine if firewalld is enabled] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"changed": false, "cmd": ["systemctl", "list-unit-files", "firewalld.service"], "delta": "0:00:00.008278", "end": "2024-09-24 17:00:23.805399", "msg": "non-zero return code", "rc": 1, "start": "2024-09-24 17:00:23.797121", "stderr": "", "stderr_lines": [], "stdout": "UNIT FILE STATE PRESET\n\n0 unit files listed.", "stdout_lines": ["UNIT FILE STATE PRESET", "", "0 unit files listed."]}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.firewall : Determine if iptables is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "iptables --version", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'iptables'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.firewall : Determine if iptables service is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.firewall : Check to see if there is an iptables config file] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "iptables_installed.rc == 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.firewall : Select firewalld] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "firewalld_running.rc == 0 or systemctl_unit_files.stdout_lines | select('match','firewalld.service\\s+enabled') | list | length == 1\n", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.firewall : Select iptables] ********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "iptables_installed.rc == 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.firewall : Include no tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "firewalld_running.rc == 0 or systemctl_unit_files.stdout_lines | select('match','firewalld.service\\s+enabled') | list | length == 1 or ( iptables_installed.rc == 0 and iptables_exists.stat.exists and iptables_service.stat.exists )\n", "skip_reason": "Conditional result was False"}[0m

TASK [Run repo_management (teardown)] ******************************************

TASK [ansible.automation_platform_installer.repo_management : Disable Automation Platform repository] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "extra_repos is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Disable Automation Platform RHSM repository] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["subscription-manager", "repos", "--disable", "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"], "delta": "0:00:01.803667", "end": "2024-09-24 17:00:27.028539", "msg": "", "rc": 0, "start": "2024-09-24 17:00:25.224872", "stderr": "", "stderr_lines": [], "stdout": "Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is disabled for this system.", "stdout_lines": ["Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is disabled for this system."]}[0m

PLAY [Install Automation Controller and Execution nodes] ***********************

TASK [set_fact] ****************************************************************
[0;32mok: [aap.example.com] => {"ansible_facts": {"cluster_host": "aap.example.com", "receptor_host_identifier": "aap.example.com"}, "changed": false}[0m

TASK [Add internal CA certificate to trust store] ******************************

TASK [ansible.automation_platform_installer.certificate_authority : Ensure ca-certificates is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Copy custom CA cert] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "custom_ca_cert is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Place AAP CA certificate] ***
[0;32mok: [aap.example.com] => {"changed": false, "checksum": "575ad0088d18dbf49580995f9d1c0dd6e970c92e", "dest": "/etc/pki/ca-trust/source/anchors/ansible-automation-platform-managed-ca-cert.crt", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/etc/pki/ca-trust/source/anchors/ansible-automation-platform-managed-ca-cert.crt", "secontext": "system_u:object_r:cert_t:s0", "size": 2000, "state": "file", "uid": 0}[0m

TASK [Flush handlers] **********************************************************

TASK [Run repo_management (setup)] *********************************************

TASK [ansible.automation_platform_installer.repo_management : include_vars] ****
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/../vars/RedHat.yml) => {"ansible_facts": {"redhat_automation_platform_rhsm_repo": "ansible-automation-platform-{{ automation_platform_version }}-for-rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}-rpms", "yum_repo_keys": ["RPM-GPG-KEY-redhat-release"]}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/RedHat.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/repo_management/vars/../vars/RedHat.yml"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install yum repo keys] ***
[0;32mok: [aap.example.com] => (item=RPM-GPG-KEY-redhat-release) => {"ansible_loop_var": "item", "changed": false, "checksum": "379962dabeaa7fd9e3b57d3669198151279fe525", "dest": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release", "gid": 0, "group": "root", "item": "RPM-GPG-KEY-redhat-release", "mode": "0644", "owner": "root", "path": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release", "secontext": "system_u:object_r:cert_t:s0", "size": 1854, "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.repo_management : Install subscription-manager-rhsm-certificates] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.repo_management : Determine if rhsm repository exists] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"atime": 1727211626.3360062, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 16, "charset": "us-ascii", "checksum": "d34b7daee1290c27042401681f1c8e7597a22167", "ctime": 1727211626.282006, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 9304056, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0644", "mtime": 1727211626.282006, "nlink": 1, "path": "/etc/yum.repos.d/redhat.repo", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4863, "uid": 0, "version": "2758014338", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable Automation Platform rhsm repository] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["subscription-manager", "repos", "--enable", "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"], "delta": "0:00:01.600660", "end": "2024-09-24 17:00:34.949219", "msg": "", "rc": 0, "start": "2024-09-24 17:00:33.348559", "stderr": "", "stderr_lines": [], "stdout": "Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is enabled for this system.", "stdout_lines": ["Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is enabled for this system."]}[0m

TASK [ansible.automation_platform_installer.repo_management : Explain Automation Platform rhsm repository failure] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aap_rhsm_repo_enable.failed | default(false)", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable module hotfixes flag] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["dnf", "config-manager", "--setopt=ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms.module_hotfixes=1", "--save"], "delta": "0:00:00.369756", "end": "2024-09-24 17:00:35.720066", "msg": "", "rc": 0, "start": "2024-09-24 17:00:35.350310", "stderr": "", "stderr_lines": [], "stdout": "Updating Subscription Management repositories.", "stdout_lines": ["Updating Subscription Management repositories."]}[0m

TASK [ansible.automation_platform_installer.repo_management : Set AAP repo for update] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_repo_for_update": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.repo_management : Ensure rsync is installed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Copy bundle packages to repo source directory] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install the Automation Platform bundle repository] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Remove legacy ansible-tower repository] ***
[0;32mok: [aap.example.com] => {"changed": false, "path": "/etc/yum.repos.d/ansible-tower.repo", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.repo_management : Install the Automation Platform yum repository.] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "aw_repo_url is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Set repo list for bundle install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "bundle_install | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Set repo list for online install] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "yum_repo is not skipped", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Enable Ansible Automation Platform repo] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "extra_repos is defined", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.redis] **************

TASK [ansible.automation_platform_installer.redis : include_tasks] *************
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/tasks/vars.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.redis : include_vars] **************
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/vars/../vars/RedHat-9.yml) => {"ansible_facts": {"redis_conf_dir": "/var/lib/redis", "redis_conf_location": "/etc/redis/redis.conf", "redis_conf_logfile": "/var/log/redis/redis.log", "redis_init_name": "redis"}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/vars/RedHat-9.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/vars/../vars/RedHat-9.yml"}[0m

TASK [ansible.automation_platform_installer.redis : include_tasks] *************
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/tasks/module.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.redis : Disable Redis module] ******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version | int == 8", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.redis : Enable Redis module] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version | int == 8", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.redis : include_tasks] *************
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/redis/tasks/tasks.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.redis : Ensure redis package is installed] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: redis-6.2.7-1.el9.x86_64"]}[0m

TASK [ansible.automation_platform_installer.redis : Ensure redis socket directory exists] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 987, "group": "redis", "mode": "0750", "owner": "redis", "path": "/var/run/redis", "secontext": "unconfined_u:object_r:var_run_t:s0", "size": 40, "state": "directory", "uid": 987}[0m

TASK [ansible.automation_platform_installer.redis : Ensure Redis socket directory has the correct SELinux context] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "restorecon -R /var/run/redis", "delta": "0:00:00.007001", "end": "2024-09-24 17:00:43.696611", "msg": "", "rc": 0, "start": "2024-09-24 17:00:43.689610", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.redis : Create tmpfiles.d entry for redis socket directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "c5d7385e785eaabd7bbafec54648dcbd472f8f13", "dest": "/etc/tmpfiles.d/redis.conf", "gid": 0, "group": "root", "md5sum": "065d29a09102fe6bc9ec2104d179ab7b", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 36, "src": "/root/.ansible/tmp/ansible-tmp-1727211643.82894-3143162-202483220931480/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.redis : Install redis.conf] ********
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "a0c0c5df443f4bb292ab97a5a8baca28b6ddfd01", "dest": "/etc/redis/redis.conf", "gid": 0, "group": "root", "md5sum": "b63b32e7507837efe83c3f2a73015f7c", "mode": "0640", "owner": "redis", "secontext": "system_u:object_r:redis_conf_t:s0", "size": 85335, "src": "/root/.ansible/tmp/ansible-tmp-1727211644.557725-3143177-272187380180527/source", "state": "file", "uid": 987}[0m

TASK [ansible.automation_platform_installer.redis : start redis and configure to startup automatically] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "redis", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:redis_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "system.slice systemd-journald.socket -.mount basic.target sysinit.target network-online.target network.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanClean": "runtime", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Redis persistent key-value database", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/redis.service.d/limit.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/redis-server ; argv[]=/usr/bin/redis-server /etc/redis/redis.conf --daemonize no --supervised systemd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/redis-server ; argv[]=/usr/bin/redis-server /etc/redis/redis.conf --daemonize no --supervised systemd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStop": "{ path=/usr/libexec/redis-shutdown ; argv[]=/usr/libexec/redis-shutdown ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStopEx": "{ path=/usr/libexec/redis-shutdown ; argv[]=/usr/libexec/redis-shutdown ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/redis.service", "FreezerState": "running", "GID": "[not set]", "Group": "redis", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "redis.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "10240", "LimitNOFILESoft": "10240", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "redis.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target -.mount system.slice", "RequiresMountsFor": "/run/redis", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectory": "redis", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "redis", "UtmpMode": "init", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [include_role : ansible.automation_platform_installer.nginx] **************

TASK [ansible.automation_platform_installer.nginx : include_tasks] *************
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/nginx/tasks/module.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.nginx : Disable Nginx module] ******
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["dnf", "module", "-y", "reset", "nginx"], "delta": "0:00:01.012281", "end": "2024-09-24 17:00:47.486672", "msg": "", "rc": 0, "start": "2024-09-24 17:00:46.474391", "stderr": "", "stderr_lines": [], "stdout": "Updating Subscription Management repositories.\nRed Hat Enterprise Linux 9 for x86_64 - BaseOS  191 kB/s | 4.1 kB     00:00    \nRed Hat Enterprise Linux 9 for x86_64 - AppStre 224 kB/s | 4.5 kB     00:00    \nRed Hat Satellite Client 6 for RHEL 9 x86_64 (R 186 kB/s | 3.8 kB     00:00    \nRed Hat Ansible Automation Platform 2.4 for RHE 197 kB/s | 4.0 kB     00:00    \nDependencies resolved.\nNothing to do.\nComplete!", "stdout_lines": ["Updating Subscription Management repositories.", "Red Hat Enterprise Linux 9 for x86_64 - BaseOS  191 kB/s | 4.1 kB     00:00    ", "Red Hat Enterprise Linux 9 for x86_64 - AppStre 224 kB/s | 4.5 kB     00:00    ", "Red Hat Satellite Client 6 for RHEL 9 x86_64 (R 186 kB/s | 3.8 kB     00:00    ", "Red Hat Ansible Automation Platform 2.4 for RHE 197 kB/s | 4.0 kB     00:00    ", "Dependencies resolved.", "Nothing to do.", "Complete!"]}[0m

TASK [ansible.automation_platform_installer.nginx : Enable Nginx 1.22] *********
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["dnf", "module", "-y", "enable", "nginx:1.22"], "delta": "0:00:01.643838", "end": "2024-09-24 17:00:49.567615", "msg": "", "rc": 0, "start": "2024-09-24 17:00:47.923777", "stderr": "", "stderr_lines": [], "stdout": "Updating Subscription Management repositories.\nLast metadata expiration check: 0:00:01 ago on Tue Sep 24 17:00:47 2024.\nDependencies resolved.\n================================================================================\n Package           Architecture     Version             Repository         Size\n================================================================================\nEnabling module streams:\n nginx                              1.22                                       \n\nTransaction Summary\n================================================================================\n\nComplete!", "stdout_lines": ["Updating Subscription Management repositories.", "Last metadata expiration check: 0:00:01 ago on Tue Sep 24 17:00:47 2024.", "Dependencies resolved.", "================================================================================", " Package           Architecture     Version             Repository         Size", "================================================================================", "Enabling module streams:", " nginx                              1.22                                       ", "", "Transaction Summary", "================================================================================", "", "Complete!"]}[0m

TASK [ansible.automation_platform_installer.nginx : include_tasks] *************
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/nginx/tasks/tasks.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.nginx : Install nginx] *************
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: redhat-logos-httpd-90.4-2.el9.noarch", "Installed: nginx-core-1:1.22.1-5.module+el9.4.0+21951+1a8059c8.1.x86_64", "Installed: nginx-filesystem-1:1.22.1-5.module+el9.4.0+21951+1a8059c8.1.noarch", "Installed: nginx-1:1.22.1-5.module+el9.4.0+21951+1a8059c8.1.x86_64"]}[0m

TASK [ansible.automation_platform_installer.nginx : Ensure libsemanage-python is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.nginx : Open up permissions on nginx.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "httpd_can_network_connect", "persistent": true, "state": true}[0m

TASK [ansible.automation_platform_installer.nginx : Install nginx.conf] ********
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "de2c595e8934e0950931642bc9b746957dfef970", "dest": "/etc/nginx/nginx.conf", "gid": 0, "group": "root", "md5sum": "d6fc7f33d330fbd21a08d35f32020cb9", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:httpd_config_t:s0", "size": 1176, "src": "/root/.ansible/tmp/ansible-tmp-1727211658.5186596-3143381-38040686907441/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.nginx : Start nginx and configure to startup automatically] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "nginx", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:httpd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "-.mount remote-fs.target systemd-tmpfiles-setup.service sysinit.target system.slice systemd-journald.socket network-online.target basic.target nss-lookup.target tmp.mount", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The nginx HTTP and reverse proxy server", "DevicePolicy": "auto", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/nginx.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "nginx.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "3", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "nginx.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PIDFile": "/run/nginx.pid", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice -.mount", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "3", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "5s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "5s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [Run packages_el] *********************************************************

TASK [ansible.automation_platform_installer.packages_el : include packages_el variables] ***
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/../vars/default.yml) => {"ansible_facts": {"dnf_modules": ["python39"], "dnf_modules_disable": ["php"], "el_dependencies": ["python3-psycopg2", "python3-setuptools", "python3-libselinux", "python3-setools", "python3-cryptography", "dnf-utils", "sudo", "acl"], "existing_pg_dir": "/var/lib/pgsql/data", "upgrade_postgres": false}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/default.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/vars/../vars/default.yml"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/tasks/install_deps.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.packages_el : Install playbook dependencies] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.packages_el : Disable required dnf modules] ***
[0;36mskipping: [aap.example.com] => (item=php)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "item": "php", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.packages_el : Enable required dnf modules] ***
[0;36mskipping: [aap.example.com] => (item=python39)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "item": "python39", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/packages_el/tasks/install_controller.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.packages_el : Clean Yum Cache for the Automation Platform Repo] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["yum", "clean", "all"], "delta": "0:00:00.421035", "end": "2024-09-24 17:01:02.949349", "msg": "", "rc": 0, "start": "2024-09-24 17:01:02.528314", "stderr": "", "stderr_lines": [], "stdout": "Updating Subscription Management repositories.\n33 files removed", "stdout_lines": ["Updating Subscription Management repositories.", "33 files removed"]}[0m

TASK [ansible.automation_platform_installer.packages_el : Install the Automation Controller RPM.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: libserf-1.3.9-27.el9.x86_64", "Installed: xmlsec1-1.2.29-9.el9.x86_64", "Installed: subversion-libs-1.14.1-5.el9_0.x86_64", "Installed: sshpass-1.09-5.el9ap.x86_64", "Installed: git-lfs-3.4.1-3.el9_4.x86_64", "Installed: supervisor-4.2.4-1.el9ap.noarch", "Installed: yajl-2.1.0-22.el9.x86_64", "Installed: libnet-1.2-6.el9.x86_64", "Installed: automation-controller-4.5.11-1.el9ap.x86_64", "Installed: apr-1.7.0-12.el9_3.x86_64", "Installed: automation-controller-server-4.5.11-1.el9ap.noarch", "Installed: automation-controller-ui-4.5.11-1.el9ap.noarch", "Installed: automation-controller-venv-tower-4.5.11-1.el9ap.x86_64", "Installed: libtool-ltdl-2.4.6-45.el9.x86_64", "Installed: criu-libs-3.19-1.el9.x86_64", "Installed: crun-1.14.3-1.el9.x86_64", "Installed: xmlsec1-openssl-1.2.29-9.el9.x86_64", "Installed: protobuf-c-1.3.3-13.el9.x86_64", "Installed: apr-util-openssl-1.6.1-23.el9.x86_64", "Installed: apr-util-1.6.1-23.el9.x86_64", "Installed: apr-util-bdb-1.6.1-23.el9.x86_64", "Installed: utf8proc-2.6.1-4.el9.x86_64", "Installed: ansible-automation-platform-common-2.4-1.el9ap.noarch", "Installed: criu-3.19-1.el9.x86_64", "Installed: ansible-automation-platform-selinux-0.2-3.el9ap.x86_64", "Installed: git-core-2.43.5-1.el9_4.x86_64", "Installed: subversion-1.14.1-5.el9_0.x86_64"]}[0m

TASK [ansible.automation_platform_installer.packages_el : Install fapolicyd rules for Automation Controller if applicable] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "'fapolicyd.service' in ansible_facts.services", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.packages_el : Remove stale packages] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Removed: grub2-tools-extra-1:2.06-82.el9_4.x86_64", "Removed: harfbuzz-2.7.4-10.el9.x86_64", "Removed: graphite2-1.3.14-9.el9.x86_64", "Removed: freetype-2.10.4-9.el9.x86_64", "Removed: grub2-tools-efi-1:2.06-82.el9_4.x86_64"]}[0m

TASK [Update existing dependent packages] **************************************

TASK [ansible.automation_platform_installer.repo_management : Ensure AAP repo for update is set] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not aap_repo_for_update | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Generate a list of AAP packages with an update] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "", "results": [{"arch": "noarch", "envra": "0:python3-attrs-21.4.0-2.el9pc.noarch", "epoch": "0", "name": "python3-attrs", "nevra": "0:python3-attrs-21.4.0-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "21.4.0", "yumstate": "available"}, {"arch": "x86_64", "envra": "0:python3-cffi-1.15.0-3.el9ap.x86_64", "epoch": "0", "name": "python3-cffi", "nevra": "0:python3-cffi-1.15.0-3.el9ap.x86_64", "release": "3.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.15.0", "yumstate": "available"}, {"arch": "x86_64", "envra": "0:python3-cryptography-38.0.4-2.el9ap.x86_64", "epoch": "0", "name": "python3-cryptography", "nevra": "0:python3-cryptography-38.0.4-2.el9ap.x86_64", "release": "2.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "38.0.4", "yumstate": "available"}, {"arch": "x86_64", "envra": "0:python3-cryptography-38.0.4-1.el9ap.x86_64", "epoch": "0", "name": "python3-cryptography", "nevra": "0:python3-cryptography-38.0.4-1.el9ap.x86_64", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "38.0.4", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-distro-1.6.0-3.el9pc.noarch", "epoch": "0", "name": "python3-distro", "nevra": "0:python3-distro-1.6.0-3.el9pc.noarch", "release": "3.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.6.0", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-idna-3.3-2.el9pc.noarch", "epoch": "0", "name": "python3-idna", "nevra": "0:python3-idna-3.3-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "3.3", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-jinja2-3.1.2-1.el9ap.noarch", "epoch": "0", "name": "python3-jinja2", "nevra": "0:python3-jinja2-3.1.2-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "3.1.2", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-jsonschema-4.16.0-1.el9ap.noarch", "epoch": "0", "name": "python3-jsonschema", "nevra": "0:python3-jsonschema-4.16.0-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "4.16.0", "yumstate": "available"}, {"arch": "x86_64", "envra": "0:python3-markupsafe-2.1.0-3.el9ap.x86_64", "epoch": "0", "name": "python3-markupsafe", "nevra": "0:python3-markupsafe-2.1.0-3.el9ap.x86_64", "release": "3.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2.1.0", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-pycparser-2.21-2.el9pc.noarch", "epoch": "0", "name": "python3-pycparser", "nevra": "0:python3-pycparser-2.21-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2.21", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-pytz-2021.3-2.el9pc.noarch", "epoch": "0", "name": "python3-pytz", "nevra": "0:python3-pytz-2021.3-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2021.3", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-requests-2.28.2-1.el9ap.noarch", "epoch": "0", "name": "python3-requests", "nevra": "0:python3-requests-2.28.2-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2.28.2", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-requests-2.31.0-1.el9ap.noarch", "epoch": "0", "name": "python3-requests", "nevra": "0:python3-requests-2.31.0-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2.31.0", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-six-1.16.0-2.el9pc.noarch", "epoch": "0", "name": "python3-six", "nevra": "0:python3-six-1.16.0-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.16.0", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-urllib3-1.26.18-1.el9ap.noarch", "epoch": "0", "name": "python3-urllib3", "nevra": "0:python3-urllib3-1.26.18-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.26.18", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-urllib3-1.26.8-2.el9pc.noarch", "epoch": "0", "name": "python3-urllib3", "nevra": "0:python3-urllib3-1.26.8-2.el9pc.noarch", "release": "2.el9pc", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.26.8", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-jinja2-3.1.3-1.el9ap.noarch", "epoch": "0", "name": "python3-jinja2", "nevra": "0:python3-jinja2-3.1.3-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "3.1.3", "yumstate": "available"}, {"arch": "x86_64", "envra": "0:python3-cryptography-42.0.5-1.el9ap.x86_64", "epoch": "0", "name": "python3-cryptography", "nevra": "0:python3-cryptography-42.0.5-1.el9ap.x86_64", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "42.0.5", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-idna-3.7-1.el9ap.noarch", "epoch": "0", "name": "python3-idna", "nevra": "0:python3-idna-3.7-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "3.7", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-jinja2-3.1.4-1.el9ap.noarch", "epoch": "0", "name": "python3-jinja2", "nevra": "0:python3-jinja2-3.1.4-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "3.1.4", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-requests-2.32.2-1.el9ap.noarch", "epoch": "0", "name": "python3-requests", "nevra": "0:python3-requests-2.32.2-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "2.32.2", "yumstate": "available"}, {"arch": "noarch", "envra": "0:python3-urllib3-1.26.20-1.el9ap.noarch", "epoch": "0", "name": "python3-urllib3", "nevra": "0:python3-urllib3-1.26.20-1.el9ap.noarch", "release": "1.el9ap", "repo": "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms", "version": "1.26.20", "yumstate": "available"}]}[0m

TASK [ansible.automation_platform_installer.repo_management : Set AAP packages to update] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_packages_to_update": ["python3-attrs", "python3-cffi", "python3-cryptography", "python3-cryptography", "python3-distro", "python3-idna", "python3-jinja2", "python3-jsonschema", "python3-markupsafe", "python3-pycparser", "python3-pytz", "python3-requests", "python3-requests", "python3-six", "python3-urllib3", "python3-urllib3", "python3-jinja2", "python3-cryptography", "python3-idna", "python3-jinja2", "python3-requests", "python3-urllib3"]}, "changed": false}[0m

TASK [ansible.automation_platform_installer.repo_management : Update packages] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: python3-pycparser-2.21-2.el9pc.noarch", "Installed: python3-markupsafe-2.1.0-3.el9ap.x86_64", "Installed: python3-cryptography-42.0.5-1.el9ap.x86_64", "Installed: python3-distro-1.6.0-3.el9pc.noarch", "Installed: python3-idna-3.7-1.el9ap.noarch", "Installed: python3-jinja2-3.1.4-1.el9ap.noarch", "Installed: python3-attrs-21.4.0-2.el9pc.noarch", "Installed: python3-pytz-2021.3-2.el9pc.noarch", "Installed: python3-requests-2.32.2-1.el9ap.noarch", "Installed: python3-urllib3-1.26.20-1.el9ap.noarch", "Installed: python3-certifi-2022.12.7-1.el9ap.noarch", "Installed: python3-cffi-1.15.0-3.el9ap.x86_64", "Installed: python3-charset-normalizer-2.0.11-4.el9pc.noarch", "Installed: python3-six-1.16.0-2.el9pc.noarch", "Installed: python3-jsonschema-4.16.0-1.el9ap.noarch", "Removed: python3-distro-1.5.0-7.el9.noarch", "Removed: python3-pycparser-2.20-6.el9.noarch", "Removed: python3-pytz-2021.1-5.el9.noarch", "Removed: python3-idna-2.10-7.el9_4.1.noarch", "Removed: python3-markupsafe-1.1.1-12.el9.x86_64", "Removed: python3-requests-2.25.1-8.el9.noarch", "Removed: python3-jinja2-2.11.3-5.el9.noarch", "Removed: python3-jsonschema-3.2.0-13.el9.noarch", "Removed: python3-six-1.15.0-9.el9.noarch", "Removed: python3-urllib3-1.26.5-5.el9_4.1.noarch", "Removed: python3-attrs-20.3.0-7.el9.noarch", "Removed: python3-cffi-1.14.5-5.el9.x86_64", "Removed: python3-cryptography-36.0.1-4.el9.x86_64"]}[0m

TASK [ansible.automation_platform_installer.packages_el : Uninstall nginx-all-modules] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": ["nginx-mod* is not installed"]}[0m

TASK [ansible.automation_platform_installer.packages_el : include_tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "packages_el_install_postgres | bool", "skip_reason": "Conditional result was False"}[0m

TASK [meta] ********************************************************************

RUNNING HANDLER [ansible.automation_platform_installer.redis : restart redis] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "redis", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:redis_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:00:45 EDT", "ActiveEnterTimestampMonotonic": "2110078512", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "systemd-journald.socket sysinit.target basic.target network-online.target -.mount system.slice network.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:00:45 EDT", "AssertTimestampMonotonic": "2110064666", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "61829000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanClean": "runtime", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:00:45 EDT", "ConditionTimestampMonotonic": "2110064665", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/redis.service", "ControlGroupId": "5058", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Redis persistent key-value database", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/redis.service.d/limit.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "19229", "ExecMainStartTimestamp": "Tue 2024-09-24 17:00:45 EDT", "ExecMainStartTimestampMonotonic": "2110068921", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/redis-server ; argv[]=/usr/bin/redis-server /etc/redis/redis.conf --daemonize no --supervised systemd ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/redis-server ; argv[]=/usr/bin/redis-server /etc/redis/redis.conf --daemonize no --supervised systemd ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStop": "{ path=/usr/libexec/redis-shutdown ; argv[]=/usr/libexec/redis-shutdown ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStopEx": "{ path=/usr/libexec/redis-shutdown ; argv[]=/usr/libexec/redis-shutdown ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/redis.service", "FreezerState": "running", "GID": "987", "Group": "redis", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "redis.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Tue 2024-09-24 17:00:45 EDT", "InactiveExitTimestampMonotonic": "2110069155", "InvocationID": "e2908efc2aa5415bab75e093fefe8ed6", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "10240", "LimitNOFILESoft": "10240", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "19229", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "7647232", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "redis.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice -.mount sysinit.target", "RequiresMountsFor": "/run/redis", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectory": "redis", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:00:45 EDT", "StateChangeTimestampMonotonic": "2110078512", "StateDirectoryMode": "0755", "StatusErrno": "0", "StatusText": "Ready to accept connections", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "5", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "987", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "redis", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.nginx : restart nginx] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "nginx", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:httpd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:00:59 EDT", "ActiveEnterTimestampMonotonic": "2124093930", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "systemd-journald.socket sysinit.target network-online.target -.mount nss-lookup.target remote-fs.target system.slice basic.target systemd-tmpfiles-setup.service tmp.mount", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:00:59 EDT", "AssertTimestampMonotonic": "2124062250", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "20761000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:00:59 EDT", "ConditionTimestampMonotonic": "2124062249", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/nginx.service", "ControlGroupId": "5193", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The nginx HTTP and reverse proxy server", "DevicePolicy": "auto", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "20431", "ExecMainStartTimestamp": "Tue 2024-09-24 17:00:59 EDT", "ExecMainStartTimestampMonotonic": "2124093913", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/nginx.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "nginx.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Tue 2024-09-24 17:00:59 EDT", "InactiveExitTimestampMonotonic": "2124069977", "InvocationID": "79289aedbf114ea0b1123bb46d236391", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "3", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "20431", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "2039808", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "nginx.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PIDFile": "/run/nginx.pid", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "-.mount sysinit.target system.slice", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "3", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:00:59 EDT", "StateChangeTimestampMonotonic": "2124093930", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "48684", "TimeoutAbortUSec": "5s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "5s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.packages_el : start PostgreSQL] ***
[0;32mok: [aap.example.com] => {"changed": false, "name": "postgresql", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:postgresql_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ActiveEnterTimestampMonotonic": "2083971246", "ActiveExitTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ActiveExitTimestampMonotonic": "2083696891", "ActiveState": "active", "After": "systemd-journald.socket basic.target network.target sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:00:19 EDT", "AssertTimestampMonotonic": "2083797320", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "118636000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ConditionTimestampMonotonic": "2083797318", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/postgresql.service", "ControlGroupId": "4923", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "PostgreSQL database server", "DevicePolicy": "auto", "DynamicUser": "no", "Environment": "PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj PG_OOM_ADJUST_VALUE=0 PGDATA=/var/lib/pgsql/data", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "15779", "ExecMainStartTimestamp": "Tue 2024-09-24 17:00:19 EDT", "ExecMainStartTimestampMonotonic": "2083806861", "ExecMainStatus": "0", "ExecReload": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/postmaster ; argv[]=/usr/bin/postmaster -D ${PGDATA} ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/usr/libexec/postgresql-check-db-dir ; argv[]=/usr/libexec/postgresql-check-db-dir postgresql ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/postgresql.service", "FreezerState": "running", "GID": "26", "Group": "postgres", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "postgresql.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:00:19 EDT", "InactiveEnterTimestampMonotonic": "2083796963", "InactiveExitTimestamp": "Tue 2024-09-24 17:00:19 EDT", "InactiveExitTimestampMonotonic": "2083800115", "InvocationID": "0a48983c539d4300a7c8be46e9f08b5b", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "2", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "15779", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "57663488", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "postgresql.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "main", "OOMPolicy": "stop", "OOMScoreAdjust": "-1000", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "2", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:00:19 EDT", "StateChangeTimestampMonotonic": "2083971246", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "8", "TasksMax": "48684", "TimeoutAbortUSec": "infinity", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "infinity", "TimerSlackNSec": "50000", "Transient": "no", "Type": "notify", "UID": "26", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "postgres", "UtmpMode": "init", "WantedBy": "multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.packages_el : restart supervisor] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "system.slice systemd-journald.socket sysinit.target basic.target rc-local.service", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [include_role : ansible.automation_platform_installer.rsyslog] ************

TASK [ansible.automation_platform_installer.rsyslog : Configure the Rsyslog socket directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/run/awx-rsyslog", "secontext": "unconfined_u:object_r:var_run_t:s0", "size": 40, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.rsyslog : Create tmpfiles.d entry for rsyslog socket directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "3f6540ba0855064c82cc2f8eea298d57da22b1e7", "dest": "/etc/tmpfiles.d/rsyslog.conf", "gid": 0, "group": "root", "md5sum": "345a0b049e66872c49a3274ab037a1b8", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 38, "src": "/root/.ansible/tmp/ansible-tmp-1727211752.3796704-3143956-109888457389286/source", "state": "file", "uid": 0}[0m

TASK [include_role : ansible.automation_platform_installer.automationcontroller] ***

TASK [ansible.automation_platform_installer.automationcontroller : include_tasks] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/automationcontroller/tasks/tasks.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.automationcontroller : add awx to the redis group so it can access the socket] ***
[0;33mchanged: [aap.example.com] => {"append": true, "changed": true, "comment": "", "group": 985, "groups": "redis", "home": "/var/lib/awx", "move_home": false, "name": "awx", "shell": "/bin/bash", "state": "present", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the settings directory.] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "group": "awx", "mode": "0755", "owner": "root", "path": "/etc/tower", "secontext": "system_u:object_r:etc_t:s0", "size": 24, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the socket directory.] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 986, "group": "nginx", "mode": "02775", "owner": "nginx", "path": "/var/run/tower", "secontext": "system_u:object_r:httpd_var_run_t:s0", "size": 40, "state": "directory", "uid": 986}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the socket directory for tmpfiles.d] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "253caabec97cc797f3e2a99db6869636f747e0b1", "dest": "/etc/tmpfiles.d/tower.conf", "gid": 0, "group": "root", "md5sum": "c17f9680a626839ec3457ebadf976885", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 36, "src": "/root/.ansible/tmp/ansible-tmp-1727211754.7639017-3144014-228961981932736/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the system user's home directory.] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "group": "awx", "mode": "0755", "owner": "awx", "path": "/var/lib/awx", "secontext": "system_u:object_r:var_lib_t:s0", "size": 51, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the system user's .ssh directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0700", "owner": "awx", "path": "/var/lib/awx/.ssh", "secontext": "unconfined_u:object_r:ssh_home_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the projects directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/lib/awx/projects", "secontext": "unconfined_u:object_r:var_lib_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the job output directory.] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/lib/awx/job_status", "secontext": "system_u:object_r:public_content_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the static directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0755", "owner": "root", "path": "/var/lib/awx/public/static", "secontext": "unconfined_u:object_r:var_lib_t:s0", "size": 6, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Add `conf.d` directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "root", "path": "/etc/tower/conf.d", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the log directory.] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/log/tower", "secontext": "system_u:object_r:var_log_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update awx_supervisord logrotate config file] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "dc7cfd23d6436f9eda727e4c610b9bf3c7a8978a", "dest": "/etc/logrotate.d/awx_supervisord", "gid": 0, "group": "root", "md5sum": "8bd4fe46a0ce01beb68ea77796f86d91", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 534, "src": "/root/.ansible/tmp/ansible-tmp-1727211758.2287335-3144113-57941238766231/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update hourly cron logrotate invocation] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "e6ebba94d8b62b1d7d2e4fdacc74a129b24fe208", "dest": "/etc/cron.hourly/logrotate", "gid": 0, "group": "root", "md5sum": "51d8e0f92da9b5c46437bb7c31c961ff", "mode": "0744", "owner": "root", "secontext": "system_u:object_r:bin_t:s0", "size": 189, "src": "/root/.ansible/tmp/ansible-tmp-1727211758.878592-3144128-91626316700877/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update automation-controller-service configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "5e600389a1eaebb611a89d396564c7239d6d9f07", "dest": "/etc/sysconfig/automation-controller", "gid": 0, "group": "root", "md5sum": "5f7e8efd624204eab58237f1b2f50bac", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 220, "src": "/root/.ansible/tmp/ansible-tmp-1727211759.599786-3144143-82443991666693/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update automation-controller service configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "ae417a20dc03bdea2f34c849ddb05dab6d1bd23b", "dest": "/etc/systemd/system/automation-controller.service", "gid": 0, "group": "root", "md5sum": "380761e9538f397d7763ad8a195e5841", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 347, "src": "/lib/systemd/system/automation-controller.service", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update automation-controller service configuration (postgresql)] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "", "rc": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update dependent service configuration] ***
[0;32mok: [aap.example.com] => (item=nginx) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "nginx", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/nginx.service.d", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 6, "state": "directory", "uid": 0}[0m
[0;33mchanged: [aap.example.com] => (item=supervisord) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "supervisord", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/supervisord.service.d", "secontext": "unconfined_u:object_r:systemd_unit_file_t:s0", "size": 6, "state": "directory", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item=redis) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "root", "item": "redis", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/redis.service.d", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 24, "state": "directory", "uid": 0}[0m
[0;33mchanged: [aap.example.com] => (item=postgresql) => {"ansible_loop_var": "item", "changed": true, "gid": 0, "group": "root", "item": "postgresql", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/postgresql.service.d", "secontext": "unconfined_u:object_r:systemd_unit_file_t:s0", "size": 6, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update dependent service configuration] ***
[0;33mchanged: [aap.example.com] => (item=nginx) => {"ansible_loop_var": "item", "changed": true, "checksum": "d5188da854852b491d914b108d56cd8adf30ee0c", "dest": "/etc/systemd/system/nginx.service.d/override.conf", "gid": 0, "group": "root", "item": "nginx", "md5sum": "70ba22e2b0d3e284eab590105a7275b8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:httpd_unit_file_t:s0", "size": 44, "src": "/root/.ansible/tmp/ansible-tmp-1727211762.8734586-3144245-214609679352239/source", "state": "file", "uid": 0}[0m
[0;33mchanged: [aap.example.com] => (item=supervisord) => {"ansible_loop_var": "item", "changed": true, "checksum": "d5188da854852b491d914b108d56cd8adf30ee0c", "dest": "/etc/systemd/system/supervisord.service.d/override.conf", "gid": 0, "group": "root", "item": "supervisord", "md5sum": "70ba22e2b0d3e284eab590105a7275b8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 44, "src": "/root/.ansible/tmp/ansible-tmp-1727211763.5077646-3144245-93820086121593/source", "state": "file", "uid": 0}[0m
[0;33mchanged: [aap.example.com] => (item=redis) => {"ansible_loop_var": "item", "changed": true, "checksum": "d5188da854852b491d914b108d56cd8adf30ee0c", "dest": "/etc/systemd/system/redis.service.d/override.conf", "gid": 0, "group": "root", "item": "redis", "md5sum": "70ba22e2b0d3e284eab590105a7275b8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:redis_unit_file_t:s0", "size": 44, "src": "/root/.ansible/tmp/ansible-tmp-1727211764.214577-3144245-136388064866813/source", "state": "file", "uid": 0}[0m
[0;33mchanged: [aap.example.com] => (item=postgresql) => {"ansible_loop_var": "item", "changed": true, "checksum": "d5188da854852b491d914b108d56cd8adf30ee0c", "dest": "/etc/systemd/system/postgresql.service.d/override.conf", "gid": 0, "group": "root", "item": "postgresql", "md5sum": "70ba22e2b0d3e284eab590105a7275b8", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:postgresql_unit_file_t:s0", "size": 44, "src": "/root/.ansible/tmp/ansible-tmp-1727211764.9248347-3144245-131788390383010/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Reload systemd configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["systemctl", "daemon-reload"], "delta": "0:00:00.219348", "end": "2024-09-24 17:02:46.072237", "msg": "", "rc": 0, "start": "2024-09-24 17:02:45.852889", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Enable the automation-controller service] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "automation-controller", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "systemd-journald.socket nginx.service receptor.service supervisord.service network.target redis.service postgresql.service sysinit.target system.slice basic.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ConsistsOf": "redis.service supervisord.service postgresql.service nginx.service", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Automation Controller service", "DevicePolicy": "auto", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/bin/true ; argv[]=/bin/true ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/bin/true ; argv[]=/bin/true ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/automation-controller.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "automation-controller.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "automation-controller.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "yes", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestampMonotonic": "0", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "oneshot", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "Wants": "postgresql.service nginx.service redis.service supervisord.service receptor.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Check if this is a fresh installation] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Replace the secret key if secret_key_override is defined and installation is new] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Fetch the secret key from the primary node.] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Fail play when grabbing SECRET_KEY fails] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "hostvars[groups['automationcontroller'][0]]['secret_key'].content is not defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Place the secret key on secondary nodes.] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Get database settings] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Ingest database settings] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set database vars] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set database vars] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure database settings.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "58798b0f0850e957938b911d0ccdf5cc4e3cee3a", "dest": "/etc/tower/conf.d/postgres.py", "gid": 985, "group": "awx", "md5sum": "9a35804d451d7e66e6278c293bb0820e", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 425, "src": "/root/.ansible/tmp/ansible-tmp-1727211768.6747546-3144488-2188053800779/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Check for existance of /etc/tower/conf.d/channels.py] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Generate broadcast websocket secret when /etc/tower/conf.d/channels.py is not present] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Deploy /etc/tower/conf.d/channels.py] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "68d2f19d2fd067a7ef92f09fca3ffd0f4071b254", "dest": "/etc/tower/conf.d/channels.py", "gid": 985, "group": "awx", "md5sum": "2effe51cc5aebbb93e695ad28969f451", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 204, "src": "/root/.ansible/tmp/ansible-tmp-1727211769.8387234-3144513-171460480525810/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Slurp /etc/tower/conf.d/channels.py] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Sync /etc/tower/conf.d/channels.py to all '[automationcontroller]' nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname != groups['automationcontroller'][0]", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure the Insights URL] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "86553cdbd2721e0df3b0840f29c6ff40a0185eb0", "dest": "/etc/tower/conf.d/insights.py", "gid": 985, "group": "awx", "md5sum": "24c7b3d4dde4cf2560c123c264a388ec", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 309, "src": "/root/.ansible/tmp/ansible-tmp-1727211771.0338225-3144538-273842416838614/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure Subscription usage model] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "abb51f79c1f644bee84d8d911fd57b7baa6b288c", "dest": "/etc/tower/conf.d/subscription_usage_model.py", "gid": 985, "group": "awx", "md5sum": "bf4cc5670f758c09341a057895a99844", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 50, "src": "/root/.ansible/tmp/ansible-tmp-1727211771.681777-3144553-165525667116489/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Initialize instance groups for host] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"awx_instance_groups": []}, "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Determine instance groups for host] ***
[0;36mskipping: [aap.example.com] => (item=RedHat_9)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is match(\"(^automationcontroller|^instance_group_.+)$\")", "item": "RedHat_9", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=aap_ca_server)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is match(\"(^automationcontroller|^instance_group_.+)$\")", "item": "aap_ca_server", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=aap_valid_hosts)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is match(\"(^automationcontroller|^instance_group_.+)$\")", "item": "aap_valid_hosts", "skip_reason": "Conditional result was False"}[0m
[0;32mok: [aap.example.com] => (item=automationcontroller) => {"ansible_facts": {"awx_instance_groups": "[] + [ 'automationcontroller' ]"}, "ansible_loop_var": "item", "changed": false, "item": "automationcontroller"}[0m
[0;36mskipping: [aap.example.com] => (item=supported)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item is match(\"(^automationcontroller|^instance_group_.+)$\")", "item": "supported", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure CLUSTER_HOST_ID setting] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "a3edc20935309adfd58725914294dd751b079c12", "dest": "/etc/tower/conf.d/cluster_host_id.py", "gid": 985, "group": "awx", "md5sum": "f660235d53e8302d1e47ccf9ee0e2cb0", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 223, "src": "/root/.ansible/tmp/ansible-tmp-1727211772.448683-3144580-240685147698217/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Remove memcached settings] ***
[0;32mok: [aap.example.com] => {"changed": false, "path": "/etc/tower/conf.d/caching.py", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Install settings file if it does not already exist.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "b4eccdc5c76eff70e3565c160c1754372c0344cf", "dest": "/etc/tower/settings.py", "gid": 985, "group": "awx", "md5sum": "d507ae571c61be83aec5e991e8a8dcdb", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1486, "src": "/root/.ansible/tmp/ansible-tmp-1727211773.592657-3144621-157364597933524/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Configure callback receiver workers] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_processor_vcpus > 4", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Check for pending migrations] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "awx-manage showmigrations | grep -v '[X]' | grep '[ ]' | wc -l", "delta": "0:00:02.493783", "end": "2024-09-24 17:02:57.009881", "msg": "", "rc": 0, "start": "2024-09-24 17:02:54.516098", "stderr": "", "stderr_lines": [], "stdout": "237", "stdout_lines": ["237"]}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Stop supervisor due to database schema upgrade] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "stopped", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ActiveEnterTimestampMonotonic": "2215911836", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "system.slice basic.target rc-local.service sysinit.target systemd-journald.socket", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:02:31 EDT", "AssertTimestampMonotonic": "2215777203", "Before": "automation-controller.service shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "124300000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ConditionTimestampMonotonic": "2215777201", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/supervisord.service", "ControlGroupId": "5508", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "22697", "ExecMainStartTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ExecMainStartTimestampMonotonic": "2215911807", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Tue 2024-09-24 17:02:31 EDT", "InactiveExitTimestampMonotonic": "2215781899", "InvocationID": "d212c646d3d746e0905cf652044a2cbc", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "22697", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "18075648", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:02:31 EDT", "StateChangeTimestampMonotonic": "2215911836", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "1", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "WantedBy": "automation-controller.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Wait for supervisor to stop.] ***
[0;32mok: [aap.example.com] => {"attempts": 1, "changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Migrate the database schema (may take awhile when upgrading).] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["awx-manage", "migrate", "--noinput"], "delta": "0:01:48.570327", "end": "2024-09-24 17:04:47.290342", "msg": "", "rc": 0, "start": "2024-09-24 17:02:58.720015", "stderr": "", "stderr_lines": [], "stdout": "Operations to perform:\n  Apply all migrations: auth, conf, contenttypes, main, oauth2_provider, sessions, sites, social_django, sso\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0001_initial... OK\n  Applying main.0001_initial... OK\n  Applying main.0002_squashed_v300_release... OK\n  Applying main.0003_squashed_v300_v303_updates... OK\n  Applying main.0004_squashed_v310_release... OK\n  Applying conf.0001_initial... OK\n  Applying conf.0002_v310_copy_tower_settings... OK\n  Applying main.0005_squashed_v310_v313_updates... OK\n  Applying main.0006_v320_release... OK\n  Applying main.0007_v320_data_migrations... OK\n  Applying main.0008_v320_drop_v1_credential_fields... OK\n  Applying main.0009_v322_add_setting_field_for_activity_stream... OK\n  Applying main.0010_v322_add_ovirt4_tower_inventory... OK\n  Applying main.0011_v322_encrypt_survey_passwords... OK\n  Applying main.0012_v322_update_cred_types... OK\n  Applying main.0013_v330_multi_credential... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying auth.0012_alter_user_first_name_max_length... OK\n  Applying conf.0003_v310_JSONField_changes... OK\n  Applying conf.0004_v320_reencrypt... OK\n  Applying conf.0005_v330_rename_two_session_settings... OK\n  Applying conf.0006_v331_ldap_group_type... OK\n  Applying conf.0007_v380_rename_more_settings... OK\n  Applying conf.0008_subscriptions... OK\n  Applying conf.0009_rename_proot_settings... OK\n  Applying conf.0010_change_to_JSONField... OK\n  Applying sessions.0001_initial... OK\n  Applying main.0014_v330_saved_launchtime_configs... OK\n  Applying main.0015_v330_blank_start_args... OK\n  Applying main.0016_v330_non_blank_workflow... OK\n  Applying main.0017_v330_move_deprecated_stdout... OK\n  Applying main.0018_v330_add_additional_stdout_events... OK\n  Applying main.0019_v330_custom_virtualenv... OK\n  Applying main.0020_v330_instancegroup_policies... OK\n  Applying main.0021_v330_declare_new_rbac_roles... OK\n  Applying main.0022_v330_create_new_rbac_roles... OK\n  Applying main.0023_v330_inventory_multicred... OK\n  Applying main.0024_v330_create_user_session_membership... OK\n  Applying main.0025_v330_add_oauth_activity_stream_registrar... OK\n  Applying oauth2_provider.0001_initial... OK\n  Applying oauth2_provider.0002_auto_20190406_1805... OK\n  Applying oauth2_provider.0003_auto_20201211_1314... OK\n  Applying oauth2_provider.0004_auto_20200902_2022... OK\n  Applying oauth2_provider.0005_auto_20211222_2352... OK\n  Applying main.0026_v330_delete_authtoken... OK\n  Applying main.0027_v330_emitted_events... OK\n  Applying main.0028_v330_add_tower_verify... OK\n  Applying main.0030_v330_modify_application... OK\n  Applying main.0031_v330_encrypt_oauth2_secret... OK\n  Applying main.0032_v330_polymorphic_delete... OK\n  Applying main.0033_v330_oauth_help_text... OK\n  Applying main.0034_v330_delete_user_role... OK\n  Applying main.0035_v330_more_oauth2_help_text... OK\n  Applying main.0036_v330_credtype_remove_become_methods... OK\n  Applying main.0037_v330_remove_legacy_fact_cleanup... OK\n  Applying main.0038_v330_add_deleted_activitystream_actor... OK\n  Applying main.0039_v330_custom_venv_help_text... OK\n  Applying main.0040_v330_unifiedjob_controller_node... OK\n  Applying main.0041_v330_update_oauth_refreshtoken... OK\n  Applying main.0042_v330_org_member_role_deparent... OK\n  Applying main.0043_v330_oauth2accesstoken_modified... OK\n  Applying main.0044_v330_add_inventory_update_inventory... OK\n  Applying main.0045_v330_instance_managed_by_policy... OK\n  Applying main.0046_v330_remove_client_credentials_grant... OK\n  Applying main.0047_v330_activitystream_instance... OK\n  Applying main.0048_v330_django_created_modified_by_model_name... OK\n  Applying main.0049_v330_validate_instance_capacity_adjustment... OK\n  Applying main.0050_v340_drop_celery_tables... OK\n  Applying main.0051_v340_job_slicing... OK\n  Applying main.0052_v340_remove_project_scm_delete_on_next_update... OK\n  Applying main.0053_v340_workflow_inventory... OK\n  Applying main.0054_v340_workflow_convergence... OK\n  Applying main.0055_v340_add_grafana_notification... OK\n  Applying main.0056_v350_custom_venv_history... OK\n  Applying main.0057_v350_remove_become_method_type... OK\n  Applying main.0058_v350_remove_limit_limit... OK\n  Applying main.0059_v350_remove_adhoc_limit... OK\n  Applying main.0060_v350_update_schedule_uniqueness_constraint... OK\n  Applying main.0061_v350_track_native_credentialtype_source... OK\n  Applying main.0062_v350_new_playbook_stats... OK\n  Applying main.0063_v350_org_host_limits... OK\n  Applying main.0064_v350_analytics_state... OK\n  Applying main.0065_v350_index_job_status... OK\n  Applying main.0066_v350_inventorysource_custom_virtualenv... OK\n  Applying main.0067_v350_credential_plugins... OK\n  Applying main.0068_v350_index_event_created... OK\n  Applying main.0069_v350_generate_unique_install_uuid... OK\n  Applying main.0070_v350_gce_instance_id... OK\n  Applying main.0071_v350_remove_system_tracking... OK\n  Applying main.0072_v350_deprecate_fields... OK\n  Applying main.0073_v360_create_instance_group_m2m... OK\n  Applying main.0074_v360_migrate_instance_group_relations... OK\n  Applying main.0075_v360_remove_old_instance_group_relations... OK\n  Applying main.0076_v360_add_new_instance_group_relations... OK\n  Applying main.0077_v360_add_default_orderings... OK\n  Applying main.0078_v360_clear_sessions_tokens_jt... OK\n  Applying main.0079_v360_rm_implicit_oauth2_apps... OK\n  Applying main.0080_v360_replace_job_origin... OK\n  Applying main.0081_v360_notify_on_start... OK\n  Applying main.0082_v360_webhook_http_method... OK\n  Applying main.0083_v360_job_branch_override... OK\n  Applying main.0084_v360_token_description... OK\n  Applying main.0085_v360_add_notificationtemplate_messages... OK\n  Applying main.0086_v360_workflow_approval... OK\n  Applying main.0087_v360_update_credential_injector_help_text... OK\n  Applying main.0088_v360_dashboard_optimizations... OK\n  Applying main.0089_v360_new_job_event_types... OK\n  Applying main.0090_v360_WFJT_prompts... OK\n  Applying main.0091_v360_approval_node_notifications... OK\n  Applying main.0092_v360_webhook_mixin... OK\n  Applying main.0093_v360_personal_access_tokens... OK\n  Applying main.0094_v360_webhook_mixin2... OK\n  Applying main.0095_v360_increase_instance_version_length... OK\n  Applying main.0096_v360_container_groups... OK\n  Applying main.0097_v360_workflowapproval_approved_or_denied_by... OK\n  Applying main.0098_v360_rename_cyberark_aim_credential_type... OK\n  Applying main.0099_v361_license_cleanup... OK\n  Applying main.0100_v370_projectupdate_job_tags... OK\n  Applying main.0101_v370_generate_new_uuids_for_iso_nodes... OK\n  Applying main.0102_v370_unifiedjob_canceled... OK\n  Applying main.0103_v370_remove_computed_fields... OK\n  Applying main.0104_v370_cleanup_old_scan_jts... OK\n  Applying main.0105_v370_remove_jobevent_parent_and_hosts... OK\n  Applying main.0106_v370_remove_inventory_groups_with_active_failures... OK\n  Applying main.0107_v370_workflow_convergence_api_toggle... OK\n  Applying main.0108_v370_unifiedjob_dependencies_processed... OK\n  Applying main.0109_v370_job_template_organization_field... OK\n  Applying main.0110_v370_instance_ip_address... OK\n  Applying main.0111_v370_delete_channelgroup... OK\n  Applying main.0112_v370_workflow_node_identifier... OK\n  Applying main.0113_v370_event_bigint... OK\n  Applying main.0114_v370_remove_deprecated_manual_inventory_sources... OK\n  Applying main.0115_v370_schedule_set_null... OK\n  Applying main.0116_v400_remove_hipchat_notifications... OK\n  Applying main.0117_v400_remove_cloudforms_inventory... OK\n  Applying main.0118_add_remote_archive_scm_type... OK\n  Applying main.0119_inventory_plugins... OK\n  Applying main.0120_galaxy_credentials... OK\n  Applying main.0121_delete_toweranalyticsstate... OK\n  Applying main.0122_really_remove_cloudforms_inventory... OK\n  Applying main.0123_drop_hg_support... OK\n  Applying main.0124_execution_environments... OK\n  Applying main.0125_more_ee_modeling_changes... OK\n  Applying main.0126_executionenvironment_container_options... OK\n  Applying main.0127_reset_pod_spec_override... OK\n  Applying main.0128_organiaztion_read_roles_ee_admin... OK\n  Applying main.0129_unifiedjob_installed_collections... OK\n  Applying main.0130_ee_polymorphic_set_null... OK\n  Applying main.0131_undo_org_polymorphic_ee... OK\n  Applying main.0132_instancegroup_is_container_group... OK\n  Applying main.0133_centrify_vault_credtype... OK\n  Applying main.0134_unifiedjob_ansible_version... OK\n  Applying main.0135_schedule_sort_fallback_to_id... OK\n  Applying main.0136_scm_track_submodules... OK\n  Applying main.0137_custom_inventory_scripts_removal_data... OK\n  Applying main.0138_custom_inventory_scripts_removal... OK\n  Applying main.0139_isolated_removal... OK\n  Applying main.0140_rename... OK\n  Applying main.0141_remove_isolated_instances... OK\n  Applying main.0142_update_ee_image_field_description... OK\n  Applying main.0143_hostmetric... OK\n  Applying main.0144_event_partitions... OK\n  Applying main.0145_deregister_managed_ee_objs... OK\n  Applying main.0146_add_insights_inventory... OK\n  Applying main.0147_validate_ee_image_field... OK\n  Applying main.0148_unifiedjob_receptor_unit_id... OK\n  Applying main.0149_remove_inventory_insights_credential... OK\n  Applying main.0150_rename_inv_sources_inv_updates... OK\n  Applying main.0151_rename_managed_by_tower... OK\n  Applying main.0152_instance_node_type... OK\n  Applying main.0153_instance_last_seen... OK\n  Applying main.0154_set_default_uuid... OK\n  Applying main.0155_improved_health_check... OK\n  Applying main.0156_capture_mesh_topology... OK\n  Applying main.0157_inventory_labels... OK\n  Applying main.0158_make_instance_cpu_decimal... OK\n  Applying main.0159_deprecate_inventory_source_UoPU_field... OK\n  Applying main.0160_alter_schedule_rrule... OK\n  Applying main.0161_unifiedjob_host_status_counts... OK\n  Applying main.0162_alter_unifiedjob_dependent_jobs... OK\n  Applying main.0163_convert_job_tags_to_textfield... OK\n  Applying main.0164_remove_inventorysource_update_on_project_update... OK\n  Applying main.0165_task_manager_refactor... OK\n  Applying main.0166_alter_jobevent_host... OK\n  Applying main.0167_project_signature_validation_credential... OK\n  Applying main.0168_inventoryupdate_scm_revision... OK\n  Applying main.0169_jt_prompt_everything_on_launch... OK\n  Applying main.0170_node_and_link_state... OK\n  Applying main.0171_add_health_check_started... OK\n  Applying main.0172_prevent_instance_fallback... OK\n  Applying main.0173_instancegroup_max_limits... OK\n  Applying main.0174_ensure_org_ee_admin_roles... OK\n  Applying main.0175_workflowjob_is_bulk_job... OK\n  Applying main.0176_inventorysource_scm_branch... OK\n  Applying main.0177_instance_group_role_addition... OK\n  Applying main.0178_instance_group_admin_migration... OK\n  Applying main.0179_change_cyberark_plugin_names... OK\n  Applying main.0180_add_hostmetric_fields... OK\n  Applying main.0181_hostmetricsummarymonthly... OK\n  Applying main.0182_constructed_inventory... OK\n  Applying main.0183_pre_django_upgrade... OK\n  Applying main.0184_django_indexes... OK\n  Applying main.0185_move_JSONBlob_to_JSONField... OK\n  Applying main.0186_drop_django_taggit... OK\n  Applying main.0187_hop_nodes... OK\n  Applying sites.0001_initial... OK\n  Applying sites.0002_alter_domain_unique... OK\n  Applying social_django.0001_initial... OK\n  Applying social_django.0002_add_related_name... OK\n  Applying social_django.0003_alter_email_max_length... OK\n  Applying social_django.0004_auto_20160423_0400... OK\n  Applying social_django.0005_auto_20160727_2333... OK\n  Applying social_django.0006_partial... OK\n  Applying social_django.0007_code_timestamp... OK\n  Applying social_django.0008_partial_timestamp... OK\n  Applying social_django.0009_auto_20191118_0520... OK\n  Applying social_django.0010_uid_db_index... OK\n  Applying social_django.0011_alter_id_fields... OK\n  Applying social_django.0012_usersocialauth_extra_data_new... OK\n  Applying social_django.0013_migrate_extra_data... OK\n  Applying social_django.0014_remove_usersocialauth_extra_data... OK\n  Applying social_django.0015_rename_extra_data_new_usersocialauth_extra_data... OK\n  Applying social_django.0016_alter_usersocialauth_extra_data... OK\n  Applying sso.0001_initial... OK\n  Applying sso.0002_expand_provider_options... OK\n  Applying sso.0003_convert_saml_string_to_list... OK", "stdout_lines": ["Operations to perform:", "  Apply all migrations: auth, conf, contenttypes, main, oauth2_provider, sessions, sites, social_django, sso", "Running migrations:", "  Applying contenttypes.0001_initial... OK", "  Applying contenttypes.0002_remove_content_type_name... OK", "  Applying auth.0001_initial... OK", "  Applying main.0001_initial... OK", "  Applying main.0002_squashed_v300_release... OK", "  Applying main.0003_squashed_v300_v303_updates... OK", "  Applying main.0004_squashed_v310_release... OK", "  Applying conf.0001_initial... OK", "  Applying conf.0002_v310_copy_tower_settings... OK", "  Applying main.0005_squashed_v310_v313_updates... OK", "  Applying main.0006_v320_release... OK", "  Applying main.0007_v320_data_migrations... OK", "  Applying main.0008_v320_drop_v1_credential_fields... OK", "  Applying main.0009_v322_add_setting_field_for_activity_stream... OK", "  Applying main.0010_v322_add_ovirt4_tower_inventory... OK", "  Applying main.0011_v322_encrypt_survey_passwords... OK", "  Applying main.0012_v322_update_cred_types... OK", "  Applying main.0013_v330_multi_credential... OK", "  Applying auth.0002_alter_permission_name_max_length... OK", "  Applying auth.0003_alter_user_email_max_length... OK", "  Applying auth.0004_alter_user_username_opts... OK", "  Applying auth.0005_alter_user_last_login_null... OK", "  Applying auth.0006_require_contenttypes_0002... OK", "  Applying auth.0007_alter_validators_add_error_messages... OK", "  Applying auth.0008_alter_user_username_max_length... OK", "  Applying auth.0009_alter_user_last_name_max_length... OK", "  Applying auth.0010_alter_group_name_max_length... OK", "  Applying auth.0011_update_proxy_permissions... OK", "  Applying auth.0012_alter_user_first_name_max_length... OK", "  Applying conf.0003_v310_JSONField_changes... OK", "  Applying conf.0004_v320_reencrypt... OK", "  Applying conf.0005_v330_rename_two_session_settings... OK", "  Applying conf.0006_v331_ldap_group_type... OK", "  Applying conf.0007_v380_rename_more_settings... OK", "  Applying conf.0008_subscriptions... OK", "  Applying conf.0009_rename_proot_settings... OK", "  Applying conf.0010_change_to_JSONField... OK", "  Applying sessions.0001_initial... OK", "  Applying main.0014_v330_saved_launchtime_configs... OK", "  Applying main.0015_v330_blank_start_args... OK", "  Applying main.0016_v330_non_blank_workflow... OK", "  Applying main.0017_v330_move_deprecated_stdout... OK", "  Applying main.0018_v330_add_additional_stdout_events... OK", "  Applying main.0019_v330_custom_virtualenv... OK", "  Applying main.0020_v330_instancegroup_policies... OK", "  Applying main.0021_v330_declare_new_rbac_roles... OK", "  Applying main.0022_v330_create_new_rbac_roles... OK", "  Applying main.0023_v330_inventory_multicred... OK", "  Applying main.0024_v330_create_user_session_membership... OK", "  Applying main.0025_v330_add_oauth_activity_stream_registrar... OK", "  Applying oauth2_provider.0001_initial... OK", "  Applying oauth2_provider.0002_auto_20190406_1805... OK", "  Applying oauth2_provider.0003_auto_20201211_1314... OK", "  Applying oauth2_provider.0004_auto_20200902_2022... OK", "  Applying oauth2_provider.0005_auto_20211222_2352... OK", "  Applying main.0026_v330_delete_authtoken... OK", "  Applying main.0027_v330_emitted_events... OK", "  Applying main.0028_v330_add_tower_verify... OK", "  Applying main.0030_v330_modify_application... OK", "  Applying main.0031_v330_encrypt_oauth2_secret... OK", "  Applying main.0032_v330_polymorphic_delete... OK", "  Applying main.0033_v330_oauth_help_text... OK", "  Applying main.0034_v330_delete_user_role... OK", "  Applying main.0035_v330_more_oauth2_help_text... OK", "  Applying main.0036_v330_credtype_remove_become_methods... OK", "  Applying main.0037_v330_remove_legacy_fact_cleanup... OK", "  Applying main.0038_v330_add_deleted_activitystream_actor... OK", "  Applying main.0039_v330_custom_venv_help_text... OK", "  Applying main.0040_v330_unifiedjob_controller_node... OK", "  Applying main.0041_v330_update_oauth_refreshtoken... OK", "  Applying main.0042_v330_org_member_role_deparent... OK", "  Applying main.0043_v330_oauth2accesstoken_modified... OK", "  Applying main.0044_v330_add_inventory_update_inventory... OK", "  Applying main.0045_v330_instance_managed_by_policy... OK", "  Applying main.0046_v330_remove_client_credentials_grant... OK", "  Applying main.0047_v330_activitystream_instance... OK", "  Applying main.0048_v330_django_created_modified_by_model_name... OK", "  Applying main.0049_v330_validate_instance_capacity_adjustment... OK", "  Applying main.0050_v340_drop_celery_tables... OK", "  Applying main.0051_v340_job_slicing... OK", "  Applying main.0052_v340_remove_project_scm_delete_on_next_update... OK", "  Applying main.0053_v340_workflow_inventory... OK", "  Applying main.0054_v340_workflow_convergence... OK", "  Applying main.0055_v340_add_grafana_notification... OK", "  Applying main.0056_v350_custom_venv_history... OK", "  Applying main.0057_v350_remove_become_method_type... OK", "  Applying main.0058_v350_remove_limit_limit... OK", "  Applying main.0059_v350_remove_adhoc_limit... OK", "  Applying main.0060_v350_update_schedule_uniqueness_constraint... OK", "  Applying main.0061_v350_track_native_credentialtype_source... OK", "  Applying main.0062_v350_new_playbook_stats... OK", "  Applying main.0063_v350_org_host_limits... OK", "  Applying main.0064_v350_analytics_state... OK", "  Applying main.0065_v350_index_job_status... OK", "  Applying main.0066_v350_inventorysource_custom_virtualenv... OK", "  Applying main.0067_v350_credential_plugins... OK", "  Applying main.0068_v350_index_event_created... OK", "  Applying main.0069_v350_generate_unique_install_uuid... OK", "  Applying main.0070_v350_gce_instance_id... OK", "  Applying main.0071_v350_remove_system_tracking... OK", "  Applying main.0072_v350_deprecate_fields... OK", "  Applying main.0073_v360_create_instance_group_m2m... OK", "  Applying main.0074_v360_migrate_instance_group_relations... OK", "  Applying main.0075_v360_remove_old_instance_group_relations... OK", "  Applying main.0076_v360_add_new_instance_group_relations... OK", "  Applying main.0077_v360_add_default_orderings... OK", "  Applying main.0078_v360_clear_sessions_tokens_jt... OK", "  Applying main.0079_v360_rm_implicit_oauth2_apps... OK", "  Applying main.0080_v360_replace_job_origin... OK", "  Applying main.0081_v360_notify_on_start... OK", "  Applying main.0082_v360_webhook_http_method... OK", "  Applying main.0083_v360_job_branch_override... OK", "  Applying main.0084_v360_token_description... OK", "  Applying main.0085_v360_add_notificationtemplate_messages... OK", "  Applying main.0086_v360_workflow_approval... OK", "  Applying main.0087_v360_update_credential_injector_help_text... OK", "  Applying main.0088_v360_dashboard_optimizations... OK", "  Applying main.0089_v360_new_job_event_types... OK", "  Applying main.0090_v360_WFJT_prompts... OK", "  Applying main.0091_v360_approval_node_notifications... OK", "  Applying main.0092_v360_webhook_mixin... OK", "  Applying main.0093_v360_personal_access_tokens... OK", "  Applying main.0094_v360_webhook_mixin2... OK", "  Applying main.0095_v360_increase_instance_version_length... OK", "  Applying main.0096_v360_container_groups... OK", "  Applying main.0097_v360_workflowapproval_approved_or_denied_by... OK", "  Applying main.0098_v360_rename_cyberark_aim_credential_type... OK", "  Applying main.0099_v361_license_cleanup... OK", "  Applying main.0100_v370_projectupdate_job_tags... OK", "  Applying main.0101_v370_generate_new_uuids_for_iso_nodes... OK", "  Applying main.0102_v370_unifiedjob_canceled... OK", "  Applying main.0103_v370_remove_computed_fields... OK", "  Applying main.0104_v370_cleanup_old_scan_jts... OK", "  Applying main.0105_v370_remove_jobevent_parent_and_hosts... OK", "  Applying main.0106_v370_remove_inventory_groups_with_active_failures... OK", "  Applying main.0107_v370_workflow_convergence_api_toggle... OK", "  Applying main.0108_v370_unifiedjob_dependencies_processed... OK", "  Applying main.0109_v370_job_template_organization_field... OK", "  Applying main.0110_v370_instance_ip_address... OK", "  Applying main.0111_v370_delete_channelgroup... OK", "  Applying main.0112_v370_workflow_node_identifier... OK", "  Applying main.0113_v370_event_bigint... OK", "  Applying main.0114_v370_remove_deprecated_manual_inventory_sources... OK", "  Applying main.0115_v370_schedule_set_null... OK", "  Applying main.0116_v400_remove_hipchat_notifications... OK", "  Applying main.0117_v400_remove_cloudforms_inventory... OK", "  Applying main.0118_add_remote_archive_scm_type... OK", "  Applying main.0119_inventory_plugins... OK", "  Applying main.0120_galaxy_credentials... OK", "  Applying main.0121_delete_toweranalyticsstate... OK", "  Applying main.0122_really_remove_cloudforms_inventory... OK", "  Applying main.0123_drop_hg_support... OK", "  Applying main.0124_execution_environments... OK", "  Applying main.0125_more_ee_modeling_changes... OK", "  Applying main.0126_executionenvironment_container_options... OK", "  Applying main.0127_reset_pod_spec_override... OK", "  Applying main.0128_organiaztion_read_roles_ee_admin... OK", "  Applying main.0129_unifiedjob_installed_collections... OK", "  Applying main.0130_ee_polymorphic_set_null... OK", "  Applying main.0131_undo_org_polymorphic_ee... OK", "  Applying main.0132_instancegroup_is_container_group... OK", "  Applying main.0133_centrify_vault_credtype... OK", "  Applying main.0134_unifiedjob_ansible_version... OK", "  Applying main.0135_schedule_sort_fallback_to_id... OK", "  Applying main.0136_scm_track_submodules... OK", "  Applying main.0137_custom_inventory_scripts_removal_data... OK", "  Applying main.0138_custom_inventory_scripts_removal... OK", "  Applying main.0139_isolated_removal... OK", "  Applying main.0140_rename... OK", "  Applying main.0141_remove_isolated_instances... OK", "  Applying main.0142_update_ee_image_field_description... OK", "  Applying main.0143_hostmetric... OK", "  Applying main.0144_event_partitions... OK", "  Applying main.0145_deregister_managed_ee_objs... OK", "  Applying main.0146_add_insights_inventory... OK", "  Applying main.0147_validate_ee_image_field... OK", "  Applying main.0148_unifiedjob_receptor_unit_id... OK", "  Applying main.0149_remove_inventory_insights_credential... OK", "  Applying main.0150_rename_inv_sources_inv_updates... OK", "  Applying main.0151_rename_managed_by_tower... OK", "  Applying main.0152_instance_node_type... OK", "  Applying main.0153_instance_last_seen... OK", "  Applying main.0154_set_default_uuid... OK", "  Applying main.0155_improved_health_check... OK", "  Applying main.0156_capture_mesh_topology... OK", "  Applying main.0157_inventory_labels... OK", "  Applying main.0158_make_instance_cpu_decimal... OK", "  Applying main.0159_deprecate_inventory_source_UoPU_field... OK", "  Applying main.0160_alter_schedule_rrule... OK", "  Applying main.0161_unifiedjob_host_status_counts... OK", "  Applying main.0162_alter_unifiedjob_dependent_jobs... OK", "  Applying main.0163_convert_job_tags_to_textfield... OK", "  Applying main.0164_remove_inventorysource_update_on_project_update... OK", "  Applying main.0165_task_manager_refactor... OK", "  Applying main.0166_alter_jobevent_host... OK", "  Applying main.0167_project_signature_validation_credential... OK", "  Applying main.0168_inventoryupdate_scm_revision... OK", "  Applying main.0169_jt_prompt_everything_on_launch... OK", "  Applying main.0170_node_and_link_state... OK", "  Applying main.0171_add_health_check_started... OK", "  Applying main.0172_prevent_instance_fallback... OK", "  Applying main.0173_instancegroup_max_limits... OK", "  Applying main.0174_ensure_org_ee_admin_roles... OK", "  Applying main.0175_workflowjob_is_bulk_job... OK", "  Applying main.0176_inventorysource_scm_branch... OK", "  Applying main.0177_instance_group_role_addition... OK", "  Applying main.0178_instance_group_admin_migration... OK", "  Applying main.0179_change_cyberark_plugin_names... OK", "  Applying main.0180_add_hostmetric_fields... OK", "  Applying main.0181_hostmetricsummarymonthly... OK", "  Applying main.0182_constructed_inventory... OK", "  Applying main.0183_pre_django_upgrade... OK", "  Applying main.0184_django_indexes... OK", "  Applying main.0185_move_JSONBlob_to_JSONField... OK", "  Applying main.0186_drop_django_taggit... OK", "  Applying main.0187_hop_nodes... OK", "  Applying sites.0001_initial... OK", "  Applying sites.0002_alter_domain_unique... OK", "  Applying social_django.0001_initial... OK", "  Applying social_django.0002_add_related_name... OK", "  Applying social_django.0003_alter_email_max_length... OK", "  Applying social_django.0004_auto_20160423_0400... OK", "  Applying social_django.0005_auto_20160727_2333... OK", "  Applying social_django.0006_partial... OK", "  Applying social_django.0007_code_timestamp... OK", "  Applying social_django.0008_partial_timestamp... OK", "  Applying social_django.0009_auto_20191118_0520... OK", "  Applying social_django.0010_uid_db_index... OK", "  Applying social_django.0011_alter_id_fields... OK", "  Applying social_django.0012_usersocialauth_extra_data_new... OK", "  Applying social_django.0013_migrate_extra_data... OK", "  Applying social_django.0014_remove_usersocialauth_extra_data... OK", "  Applying social_django.0015_rename_extra_data_new_usersocialauth_extra_data... OK", "  Applying social_django.0016_alter_usersocialauth_extra_data... OK", "  Applying sso.0001_initial... OK", "  Applying sso.0002_expand_provider_options... OK", "  Applying sso.0003_convert_saml_string_to_list... OK"]}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Checking for RBAC migration log] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Moving RBAC migration log] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "rbac_log.stat.exists", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Get the controller version] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage version", "delta": "0:00:00.539241", "end": "2024-09-24 17:04:48.737844", "msg": "", "rc": 0, "start": "2024-09-24 17:04:48.198603", "stderr": "", "stderr_lines": [], "stdout": "4.5.11", "stdout_lines": ["4.5.11"]}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Store the controller version] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "9fb6c9d6f2a620e9711fb8841aa4a4777bcc01ea", "dest": "/var/lib/awx/.tower_version", "gid": 0, "group": "root", "md5sum": "d0a9e834602ef95fb333aecb42ab3809", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:var_lib_t:s0", "size": 6, "src": "/root/.ansible/tmp/ansible-tmp-1727211888.872577-3145228-63705726644765/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Get configuration files to set permissions on] ***
[0;32mok: [aap.example.com] => {"changed": false, "examined": 8, "files": [{"atime": 1727211774.7078876, "ctime": 1727211774.103884, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691446, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211773.8618827, "nlink": 1, "path": "/etc/tower/settings.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 1486, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211774.7078876, "ctime": 1727211769.242856, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 17022040, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211768.9998546, "nlink": 1, "path": "/etc/tower/conf.d/postgres.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 425, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211770.8528652, "ctime": 1727211770.438863, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691444, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211770.1568613, "nlink": 1, "path": "/etc/tower/conf.d/channels.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 204, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211774.7088876, "ctime": 1727211771.5438693, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 117849, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211771.3008678, "nlink": 1, "path": "/etc/tower/conf.d/insights.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 309, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211774.7088876, "ctime": 1727211772.2378733, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691445, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211771.9558716, "nlink": 1, "path": "/etc/tower/conf.d/subscription_usage_model.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 50, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211774.7088876, "ctime": 1727211773.041878, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 17022041, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211772.7618763, "nlink": 1, "path": "/etc/tower/conf.d/cluster_host_id.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 223, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 6, "msg": "All paths examined", "skipped_paths": {}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Clean up any poorly-permissioned configuration files on upgrade] ***
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/settings.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 1486, 'inode': 25691446, 'dev': 64516, 'nlink': 1, 'atime': 1727211774.7078876, 'mtime': 1727211773.8618827, 'ctime': 1727211774.103884, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211774.7078876, "ctime": 1727211774.103884, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691446, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211773.8618827, "nlink": 1, "path": "/etc/tower/settings.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 1486, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/settings.py", "secontext": "system_u:object_r:etc_t:s0", "size": 1486, "state": "file", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/conf.d/postgres.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 425, 'inode': 17022040, 'dev': 64516, 'nlink': 1, 'atime': 1727211774.7078876, 'mtime': 1727211768.9998546, 'ctime': 1727211769.242856, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211774.7078876, "ctime": 1727211769.242856, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 17022040, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211768.9998546, "nlink": 1, "path": "/etc/tower/conf.d/postgres.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 425, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/conf.d/postgres.py", "secontext": "system_u:object_r:etc_t:s0", "size": 425, "state": "file", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/conf.d/channels.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 204, 'inode': 25691444, 'dev': 64516, 'nlink': 1, 'atime': 1727211770.8528652, 'mtime': 1727211770.1568613, 'ctime': 1727211770.438863, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211770.8528652, "ctime": 1727211770.438863, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691444, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211770.1568613, "nlink": 1, "path": "/etc/tower/conf.d/channels.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 204, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/conf.d/channels.py", "secontext": "system_u:object_r:etc_t:s0", "size": 204, "state": "file", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/conf.d/insights.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 309, 'inode': 117849, 'dev': 64516, 'nlink': 1, 'atime': 1727211774.7088876, 'mtime': 1727211771.3008678, 'ctime': 1727211771.5438693, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211774.7088876, "ctime": 1727211771.5438693, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 117849, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211771.3008678, "nlink": 1, "path": "/etc/tower/conf.d/insights.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 309, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/conf.d/insights.py", "secontext": "system_u:object_r:etc_t:s0", "size": 309, "state": "file", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/conf.d/subscription_usage_model.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 50, 'inode': 25691445, 'dev': 64516, 'nlink': 1, 'atime': 1727211774.7088876, 'mtime': 1727211771.9558716, 'ctime': 1727211772.2378733, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211774.7088876, "ctime": 1727211772.2378733, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 25691445, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211771.9558716, "nlink": 1, "path": "/etc/tower/conf.d/subscription_usage_model.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 50, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/conf.d/subscription_usage_model.py", "secontext": "system_u:object_r:etc_t:s0", "size": 50, "state": "file", "uid": 0}[0m
[0;32mok: [aap.example.com] => (item={'path': '/etc/tower/conf.d/cluster_host_id.py', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 0, 'gid': 985, 'size': 223, 'inode': 17022041, 'dev': 64516, 'nlink': 1, 'atime': 1727211774.7088876, 'mtime': 1727211772.7618763, 'ctime': 1727211773.041878, 'gr_name': 'awx', 'pw_name': 'root', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": false, "gid": 985, "group": "awx", "item": {"atime": 1727211774.7088876, "ctime": 1727211773.041878, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 17022041, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727211772.7618763, "nlink": 1, "path": "/etc/tower/conf.d/cluster_host_id.py", "pw_name": "root", "rgrp": true, "roth": false, "rusr": true, "size": 223, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "mode": "0640", "owner": "root", "path": "/etc/tower/conf.d/cluster_host_id.py", "secontext": "system_u:object_r:etc_t:s0", "size": 223, "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set ACL rule for awx user to access rhsm.conf] ***
[0;33mchanged: [aap.example.com] => {"acl": ["user::rw-", "user:awx:r--", "group::r--", "mask::r--", "other::r--"], "changed": true, "msg": "user:awx:r is present"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Check for super users] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"changed": true, "cmd": "echo \"from django.contrib.auth.models import User; nsu = User.objects.filter(is_superuser=True).count(); exit(0 if nsu > 0 else 1)\" | awx-manage shell", "delta": "0:00:01.260806", "end": "2024-09-24 17:04:54.743140", "msg": "non-zero return code", "rc": 1, "start": "2024-09-24 17:04:53.482334", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.automationcontroller : create django super user if it does not exist] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.automationcontroller : update django super user password] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Collect static files.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "umask 022 && awx-manage collectstatic --noinput --clear -v0", "delta": "0:00:01.415247", "end": "2024-09-24 17:05:01.379681", "msg": "", "rc": 0, "start": "2024-09-24 17:04:59.964434", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Fixup log directory permissions post-migration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/log/tower", "secontext": "system_u:object_r:var_log_t:s0", "size": 4096, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Copy Candlepin RHSM Certificate] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "e967f044d2c6d15e596d1ecec675827ced05c25f", "dest": "/etc/tower/candlepin-redhat-ca.crt", "gid": 985, "group": "awx", "md5sum": "6c90f0d13dd608f03313b5f8affac086", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 2472, "src": "/root/.ansible/tmp/ansible-tmp-1727211901.984661-3145470-138797865413382/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Copy EULA] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "b864cddee462529c12d844d41d00e9e81fa10ffa", "dest": "/var/lib/awx/venv/awx/lib/python3.9/site-packages/awx/api/templates/eula.md", "gid": 985, "group": "awx", "md5sum": "ddb2fce5d9c73130701c3e836de2a218", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:var_lib_t:s0", "size": 8466, "src": "/root/.ansible/tmp/ansible-tmp-1727211902.6219597-3145502-232677750335834/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : include_tasks] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/automationcontroller/tasks/nginx.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.automationcontroller : Ensure awx is in the nginx group] ***
[0;33mchanged: [aap.example.com] => {"append": true, "changed": true, "comment": "", "group": 985, "groups": "nginx", "home": "/var/lib/awx", "move_home": false, "name": "awx", "shell": "/bin/bash", "state": "present", "uid": 985}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Determine default_server and server_name] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_default_server": "default_server", "_server_name": "_"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Get static root] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": ["awx-manage", "print_settings", "STATIC_ROOT", "--format=value"], "delta": "0:00:01.612341", "end": "2024-09-24 17:05:05.744881", "msg": "", "rc": 0, "start": "2024-09-24 17:05:04.132540", "stderr": "", "stderr_lines": [], "stdout": "/var/lib/awx/public/static", "stdout_lines": ["/var/lib/awx/public/static"]}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Find custom error pages] ***
[0;32mok: [aap.example.com] => {"changed": false, "examined": 17, "files": [{"atime": 1727211901.1586168, "ctime": 1727211901.1586168, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 12435, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1727211901.1586168, "nlink": 1, "path": "/var/lib/awx/public/static/custom_404.html", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 150, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211901.1586168, "ctime": 1727211901.1586168, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 12436, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1727211901.1586168, "nlink": 1, "path": "/var/lib/awx/public/static/custom_502.html", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 692, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, {"atime": 1727211901.1586168, "ctime": 1727211901.1586168, "dev": 64516, "gid": 985, "gr_name": "awx", "inode": 11516, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0644", "mtime": 1727211901.1586168, "nlink": 1, "path": "/var/lib/awx/public/static/custom_504.html", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 691, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 3, "msg": "All paths examined", "skipped_paths": {}}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set custom error pages] ***
[0;32mok: [aap.example.com] => (item=/var/lib/awx/public/static/custom_404.html) => {"ansible_facts": {"custom_error_pages": [{"error_code": "404", "web_path": "/static/custom_404.html"}]}, "ansible_loop_var": "item", "changed": false, "item": "/var/lib/awx/public/static/custom_404.html"}[0m
[0;32mok: [aap.example.com] => (item=/var/lib/awx/public/static/custom_502.html) => {"ansible_facts": {"custom_error_pages": [{"error_code": "404", "web_path": "/static/custom_404.html"}, {"error_code": "502", "web_path": "/static/custom_502.html"}]}, "ansible_loop_var": "item", "changed": false, "item": "/var/lib/awx/public/static/custom_502.html"}[0m
[0;32mok: [aap.example.com] => (item=/var/lib/awx/public/static/custom_504.html) => {"ansible_facts": {"custom_error_pages": [{"error_code": "404", "web_path": "/static/custom_404.html"}, {"error_code": "502", "web_path": "/static/custom_502.html"}, {"error_code": "504", "web_path": "/static/custom_504.html"}]}, "ansible_loop_var": "item", "changed": false, "item": "/var/lib/awx/public/static/custom_504.html"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Add automation controller nginx configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "0acf8152800a1b0062494922079a6ec9e32daf0e", "dest": "/etc/nginx/conf.d/automation-controller.nginx.conf", "gid": 0, "group": "root", "md5sum": "0cc7b9bde1bdd9dd2d021c7e3b397dc5", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:httpd_config_t:s0", "size": 4071, "src": "/root/.ansible/tmp/ansible-tmp-1727211906.3530054-3145574-53714151323929/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Copy SSL certificate] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "web_server_ssl_cert is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Copy SSL private key] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "web_server_ssl_cert is defined", "skip_reason": "Conditional result was False"}[0m

TASK [Use internal CA] *********************************************************

TASK [ansible.automation_platform_installer.certificate_authority : include_tasks] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/certificate_authority/tasks/init.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.certificate_authority : Ensure python cryptography libraries are installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Ensure python3-pyOpenSSL libraries are installed] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "ansible_distribution_major_version == \"8\"", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Create automationcontroller private key] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.certificate_authority : set_fact] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_service_cert_fullpath": "/etc/tower/tower.cert"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Check if automationcontroller public key exists] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Check contents of automationcontroller public key] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "certificate_stat.stat.exists | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : set_fact] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "certificate_stat.stat.exists | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Create CSR for automationcontroller node/s] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Sign automationcontroller public key] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Write public key to automationcontroller node/s] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "674ecf033d75bf72e6f762d951e2e179fc3d91cb", "dest": "/etc/tower/tower.cert", "gid": 985, "group": "awx", "md5sum": "e15e659e6a63d47ab76922ff47adce4e", "mode": "0600", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 1984, "src": "/root/.ansible/tmp/ansible-tmp-1727211912.969922-3145672-127156271780983/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.certificate_authority : Signal restart if certificate pair changes] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"aap_service_restart": true}, "changed": false}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Trigger nginx notifier for internally managed certificate changes] ***
[0;36mskipping: [aap.example.com] => {"false_condition": "aap_service_webserver_restart | default(False)"}[0m

TASK [include_role : ansible.automation_platform_installer.supervisor] *********

TASK [ansible.automation_platform_installer.supervisor : include_tasks] ********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/supervisor/tasks/vars.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.supervisor : include supervisor variables] ***
[0;32mok: [aap.example.com] => (item=/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/supervisor/vars/../vars/default.yml) => {"ansible_facts": {"uwsgi_bash": "bash -c"}, "ansible_included_var_files": ["/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/supervisor/vars/default.yml"], "ansible_loop_var": "item", "changed": false, "item": "/home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/supervisor/vars/../vars/default.yml"}[0m

TASK [ansible.automation_platform_installer.supervisor : include_tasks] ********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/supervisor/tasks/tasks.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.supervisor : check current somaxconn value] ***
[0;32mok: [aap.example.com] => {"changed": false, "content": "NDA5Ngo=", "encoding": "base64", "source": "/proc/sys/net/core/somaxconn"}[0m

TASK [ansible.automation_platform_installer.supervisor : check current net.ipv4.tcp_max_syn_backlog value] ***
[0;32mok: [aap.example.com] => {"changed": false, "content": "NTEyCg==", "encoding": "base64", "source": "/proc/sys/net/ipv4/tcp_max_syn_backlog"}[0m

TASK [ansible.automation_platform_installer.supervisor : Set somaxconn to value greater than or equal to uwsgi_listen_queue_size in supervisor config] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(uwsgi_listen_queue_size|int) > (somaxconn['content'] | b64decode | int)", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.supervisor : Set tcp_max_syn_backlog to value greater than or equal to uwsgi_listen_queue_size in supervisor config] ***
[0;33mchanged: [aap.example.com] => {"changed": true}[0m

TASK [ansible.automation_platform_installer.supervisor : Enforce libffi shared memory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "dest": "/etc/sysconfig/libffi-force-shared-memory-check-first", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 0, "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.supervisor : install supervisor config] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "4b194bf507d7cb598bf6acd8e5fe09825d24dd9e", "dest": "/etc/supervisord.d/tower.ini", "gid": 0, "group": "root", "md5sum": "1bcb3f0dcca88681fe42c8795f9a50ff", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 3893, "src": "/root/.ansible/tmp/ansible-tmp-1727211915.598871-3145762-252857052968680/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.supervisor : Override supervisord logrotate rules] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "33e908d778c655e468e9bf19091a54e8b1b06e0d", "dest": "/etc/logrotate.d/supervisor", "gid": 0, "group": "root", "md5sum": "f706cb71b1947b97a8deb3f33ff2835e", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 101, "src": "/root/.ansible/tmp/ansible-tmp-1727211916.3094707-3145782-247440597651714/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.supervisor : Recreate systemd tmp files] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["systemd-tmpfiles", "--create"], "delta": "0:00:00.042043", "end": "2024-09-24 17:05:17.319262", "msg": "", "rc": 0, "start": "2024-09-24 17:05:17.277219", "stderr": "/usr/lib/tmpfiles.d/postgresql.conf:1: Line references path below legacy directory /var/run/, updating /var/run/postgresql → /run/postgresql; please update the tmpfiles.d/ drop-in file accordingly.\n/etc/tmpfiles.d/redis.conf:1: Line references path below legacy directory /var/run/, updating /var/run/redis → /run/redis; please update the tmpfiles.d/ drop-in file accordingly.\n/etc/tmpfiles.d/rsyslog.conf:1: Line references path below legacy directory /var/run/, updating /var/run/awx-rsyslog → /run/awx-rsyslog; please update the tmpfiles.d/ drop-in file accordingly.\n/usr/lib/tmpfiles.d/supervisor.conf:1: Line references path below legacy directory /var/run/, updating /var/run/supervisor → /run/supervisor; please update the tmpfiles.d/ drop-in file accordingly.\n/etc/tmpfiles.d/tower.conf:1: Line references path below legacy directory /var/run/, updating /var/run/tower → /run/tower; please update the tmpfiles.d/ drop-in file accordingly.", "stderr_lines": ["/usr/lib/tmpfiles.d/postgresql.conf:1: Line references path below legacy directory /var/run/, updating /var/run/postgresql → /run/postgresql; please update the tmpfiles.d/ drop-in file accordingly.", "/etc/tmpfiles.d/redis.conf:1: Line references path below legacy directory /var/run/, updating /var/run/redis → /run/redis; please update the tmpfiles.d/ drop-in file accordingly.", "/etc/tmpfiles.d/rsyslog.conf:1: Line references path below legacy directory /var/run/, updating /var/run/awx-rsyslog → /run/awx-rsyslog; please update the tmpfiles.d/ drop-in file accordingly.", "/usr/lib/tmpfiles.d/supervisor.conf:1: Line references path below legacy directory /var/run/, updating /var/run/supervisor → /run/supervisor; please update the tmpfiles.d/ drop-in file accordingly.", "/etc/tmpfiles.d/tower.conf:1: Line references path below legacy directory /var/run/, updating /var/run/tower → /run/tower; please update the tmpfiles.d/ drop-in file accordingly."], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.supervisor : start/enable supervisord process] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "supervisord", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ActiveEnterTimestampMonotonic": "2215911836", "ActiveExitTimestamp": "Tue 2024-09-24 17:02:57 EDT", "ActiveExitTimestampMonotonic": "2241687663", "ActiveState": "inactive", "After": "system.slice basic.target rc-local.service sysinit.target systemd-journald.socket", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:02:31 EDT", "AssertTimestampMonotonic": "2215777203", "Before": "automation-controller.service shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "137082000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ConditionTimestampMonotonic": "2215777201", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "5508", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "1", "ExecMainExitTimestamp": "Tue 2024-09-24 17:02:57 EDT", "ExecMainExitTimestampMonotonic": "2241958280", "ExecMainPID": "22697", "ExecMainStartTimestamp": "Tue 2024-09-24 17:02:31 EDT", "ExecMainStartTimestampMonotonic": "2215911807", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:02:57 EDT", "InactiveEnterTimestampMonotonic": "2241958401", "InactiveExitTimestamp": "Tue 2024-09-24 17:02:31 EDT", "InactiveExitTimestampMonotonic": "2215781899", "InvocationID": "d212c646d3d746e0905cf652044a2cbc", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "sysinit.target system.slice", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:02:57 EDT", "StateChangeTimestampMonotonic": "2241958401", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "UtmpMode": "init", "WantedBy": "automation-controller.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

TASK [ansible.automation_platform_installer.supervisor : Wait for the supervisor socket] ***
[0;32mok: [aap.example.com] => {"changed": false, "elapsed": 0, "gid": 985, "group": "awx", "match_groupdict": {}, "match_groups": [], "mode": "0700", "owner": "awx", "path": "/var/run/supervisor/supervisor.sock", "port": null, "search_regex": null, "secontext": "system_u:object_r:var_run_t:s0", "size": 0, "state": "file", "uid": 985}[0m

TASK [include_role : ansible.automation_platform_installer.misc] ***************

TASK [ansible.automation_platform_installer.misc : Remove the old celeryd.py config file (if it exists)] ***
[0;32mok: [aap.example.com] => {"changed": false, "path": "/etc/tower/conf.d/celeryd.py", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.misc : Check if /etc/tower/conf.d/ha.py exists] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.misc : If Ansible does not provide a system UUID, get a random one.] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "echo 'import uuid; print(uuid.uuid4())' | awx-python", "delta": "0:00:00.057725", "end": "2024-09-24 17:05:20.235622", "msg": "", "rc": 0, "start": "2024-09-24 17:05:20.177897", "stderr": "", "stderr_lines": [], "stdout": "e744c09f-9996-426b-be8f-48256f7d5421", "stdout_lines": ["e744c09f-9996-426b-be8f-48256f7d5421"]}[0m

TASK [ansible.automation_platform_installer.misc : Register the uuid from the command line] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.misc : Read the uuid from /etc/tower/conf.d/ha.py] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.misc : Store uuid from /etc/tower/conf.d/ha.py] ***
[0;36mskipping: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.misc : Write a ha.conf file to /etc/tower that contains the system UUID.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "a3df6d62ade4c355f4f726b1d84b9c03e325233d", "dest": "/etc/tower/conf.d/ha.py", "gid": 985, "group": "awx", "md5sum": "a486e1850c9bec89e8ac789862efab61", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 97, "src": "/root/.ansible/tmp/ansible-tmp-1727211920.5404134-3145874-72478946404612/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.misc : Check if tower queue is present] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "awx-manage list_instances | grep '^\\[tower capacity=[0-9]*\\]'", "delta": "0:00:03.214358", "end": "2024-09-24 17:05:25.141818", "failed_when_result": false, "msg": "non-zero return code", "rc": 1, "start": "2024-09-24 17:05:21.927460", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.misc : Unregister tower queue] *****
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "'[tower capacity=' in register_tower.stdout", "skip_reason": "Conditional result was False"}[0m

TASK [Ensure ansible-automation-platform-common exists on Execution Nodes] *****
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['execution_nodes'] | default([])", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.receptor] ***********

TASK [ansible.automation_platform_installer.receptor : Assert Receptor Network Mesh data] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh is not defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Install receptor] *******
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: receptor-1.4.8-1.1.el9ap.x86_64", "Installed: receptorctl-1.4.8-1.1.el9ap.noarch", "Installed: python3-click-8.1.3-1.el9ap.noarch"]}[0m

TASK [ansible.automation_platform_installer.receptor : Install receptor dependencies] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Installed: aardvark-dns-2:1.10.0-3.el9_4.x86_64", "Installed: conmon-2:2.1.10-1.el9.x86_64", "Installed: libnftnl-1.2.6-4.el9_4.x86_64", "Installed: container-selinux-3:2.229.0-1.el9_3.noarch", "Installed: fuse3-libs-3.10.2-8.el9.x86_64", "Installed: podman-4:4.9.4-10.el9_4.x86_64", "Installed: fuse-overlayfs-1.13-1.el9.x86_64", "Installed: fuse3-3.10.2-8.el9.x86_64", "Installed: iptables-nft-1.8.10-4.el9_4.x86_64", "Installed: netavark-2:1.10.3-1.el9.x86_64", "Installed: containers-common-2:1-91.el9_4.x86_64", "Installed: nftables-1:1.0.9-1.el9.x86_64", "Installed: libslirp-4.4.0-7.el9.x86_64", "Installed: slirp4netns-1.2.3-1.el9.x86_64", "Installed: shadow-utils-subid-2:4.9-8.el9.x86_64", "Installed: fuse-common-3.10.2-8.el9.x86_64"]}[0m

TASK [ansible.automation_platform_installer.receptor : Install ansible-runner for execution plane] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_type == \"execution\"", "skip_reason": "Conditional result was False"}[0m

TASK [Update existing dependent packages] **************************************

TASK [ansible.automation_platform_installer.repo_management : Ensure AAP repo for update is set] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "not aap_repo_for_update | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Generate a list of AAP packages with an update] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "", "results": []}[0m

TASK [ansible.automation_platform_installer.repo_management : Set AAP packages to update] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_packages_to_update": []}, "changed": false}[0m

TASK [ansible.automation_platform_installer.repo_management : Update packages] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_packages_to_update | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Reconfigure Receptor CA (forced)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "(receptor_tls_reconfigure | bool) or (mesh_ca_certfile | default('') | length) or (mesh_ca_keyfile | default('') | length)", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Create Receptor CA directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 984, "group": "receptor", "mode": "0750", "owner": "receptor", "path": "/etc/receptor/tls/ca", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 6, "state": "directory", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Configure Receptor Certificate Authority] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/tls_ca.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Copy custom SSL Certificate Authority files] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_ca_certfile | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Verify if Receptor Mesh CA exists] ***
[0;31mfailed: [aap.example.com] (item=/etc/receptor/tls/ca/mesh-CA.crt) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": true, "item": "/etc/receptor/tls/ca/mesh-CA.crt", "stat": {"exists": false}}[0m
[0;31mfailed: [aap.example.com] (item=/etc/receptor/tls/ca/mesh-CA.key) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": true, "item": "/etc/receptor/tls/ca/mesh-CA.key", "stat": {"exists": false}}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.receptor : Create Receptor Mesh CA] ***
[1;35m[WARNING]: Module remote_tmp /var/lib/receptor/.ansible/tmp did not exist and[0m
[1;35mwas created with a mode of 0700, this may cause issues when running as another[0m
[1;35muser. To avoid this, create the remote_tmp dir with the correct permissions[0m
[1;35mmanually[0m
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "receptor --cert-init commonname=\"Ansible Automation Controller Nodes Mesh ROOT CA\" bits=\"4096\" outcert=\"/etc/receptor/tls/ca/mesh-CA.crt\" outkey=\"/etc/receptor/tls/ca/mesh-CA.key\"\n", "delta": "0:00:00.529960", "end": "2024-09-24 17:06:32.362101", "msg": "", "rc": 0, "start": "2024-09-24 17:06:31.832141", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.receptor : Gather Receptor Mesh CA Metadata] ***
[0;32mok: [aap.example.com] => {"authority_cert_issuer": null, "authority_cert_serial_number": null, "authority_key_identifier": null, "basic_constraints": ["CA:TRUE"], "basic_constraints_critical": true, "changed": false, "expired": false, "extended_key_usage": ["TLS Web Client Authentication", "TLS Web Server Authentication"], "extended_key_usage_critical": false, "extensions_by_oid": {"2.5.29.14": {"critical": false, "value": "BBSdiBu2kOSnCEugGhvQXFWqQEUhCg=="}, "2.5.29.15": {"critical": true, "value": "AwIChA=="}, "2.5.29.19": {"critical": true, "value": "MAMBAf8="}, "2.5.29.37": {"critical": false, "value": "MBQGCCsGAQUFBwMCBggrBgEFBQcDAQ=="}}, "fingerprints": {"blake2b": "87:6a:3d:7f:15:13:ed:e1:b1:7e:f9:84:0c:28:5b:fe:72:8d:25:a0:8c:40:64:a9:f7:0f:42:40:64:63:60:b7:7d:9a:7a:ea:b1:53:d7:7b:9e:2b:db:68:2b:97:da:d2:97:c9:2b:fd:4c:be:6b:bd:e4:64:55:6b:90:c1:fd:87", "blake2s": "c7:4c:bb:86:d3:a2:c4:46:b1:d6:ba:8c:97:01:1d:3b:91:fe:a3:99:a5:0a:75:68:12:34:76:20:0a:a9:4c:bb", "md5": "38:13:dd:45:da:54:2f:5b:bb:99:45:8c:73:1f:5e:b4", "sha1": "94:c0:aa:53:a9:61:29:3d:9a:a7:0e:59:78:c5:b9:5f:bc:0d:22:bc", "sha224": "c3:f5:4f:51:bc:11:eb:5e:e3:77:0e:58:70:61:3c:b6:be:3b:b1:78:a9:da:58:90:4b:ec:a4:bf", "sha256": "54:ef:fa:0e:84:29:5c:5a:c8:3d:ee:74:9f:d3:7a:1c:11:9a:c3:5d:a6:95:ef:81:89:7c:45:64:11:e9:d0:26", "sha384": "b7:e5:0a:07:2e:59:8d:11:44:d6:4e:3a:53:dc:b7:52:6f:12:81:61:c1:ec:d2:5c:a5:04:32:b9:8d:2b:62:23:4a:3c:6e:6a:05:c5:71:e1:46:b0:ce:e7:f9:10:6e:40", "sha3_224": "11:f6:3d:0b:d1:0b:3b:83:6b:54:f7:aa:bc:9a:0d:86:40:61:97:23:33:1a:65:df:84:fe:ff:d8", "sha3_256": "2f:c6:79:08:9a:2d:34:f2:eb:74:9b:cd:70:f5:85:e1:73:62:8b:24:e1:62:e9:c9:61:00:4b:28:e0:ef:ed:97", "sha3_384": "c6:e4:cd:f0:b4:8e:8a:fa:36:26:f3:de:0c:83:97:48:d9:ff:f8:88:2d:63:34:86:10:e5:46:3b:d6:34:3d:1c:14:1d:bb:07:a5:19:d7:7c:b0:ef:f0:ab:32:d4:09:9e", "sha3_512": "66:16:b5:1c:b9:4f:9e:5a:9d:95:42:ca:bd:15:6b:43:52:d9:46:ac:8e:33:8b:d5:f3:0f:7b:09:e1:c3:6e:b4:6e:06:da:cb:79:63:17:ad:5f:a7:83:c8:ac:2c:61:96:0e:36:05:09:ac:39:8c:0a:ab:3a:4e:b6:65:b6:d1:68", "sha512": "42:23:b3:e1:55:85:c4:a1:a2:fa:86:c2:a2:69:6e:89:ed:aa:ad:be:8a:1f:c0:42:fa:e2:5c:d4:f3:f8:1a:70:c7:8f:d0:6b:f1:95:38:cc:50:73:97:89:74:d3:b2:5d:76:fe:8a:a6:71:0f:b4:6d:8c:47:6c:9b:c5:2c:de:75", "shake_128": "58:25:4b:77:ae:aa:0e:f6:1c:5a:c6:b1:78:53:84:24:91:21:cc:66:29:01:ae:ce:c7:f5:a8:a6:ec:c9:1c:37", "shake_256": "23:1a:bf:52:0d:4a:51:5b:f2:7f:e8:55:82:bf:38:3f:53:e3:4e:76:12:11:aa:04:fe:5f:48:f1:aa:44:aa:bf"}, "issuer": {"commonName": "Ansible Automation Controller Nodes Mesh ROOT CA"}, "issuer_ordered": [["commonName", "Ansible Automation Controller Nodes Mesh ROOT CA"]], "issuer_uri": null, "key_usage": ["Certificate Sign", "Digital Signature"], "key_usage_critical": true, "not_after": "20340924210631Z", "not_before": "20240924210631Z", "ocsp_must_staple": null, "ocsp_must_staple_critical": false, "ocsp_uri": null, "public_key": "-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAz6i+J1GTMyue/PVeLRmi\nllmth1i/ahJDvUjqtCK9PqNIcjxx5J3eQius7LuH0J6IffVciTgjeb/hRMXZIras\nsEy5wZXFF05rWtpo5j8yDhuDBJGIluoEVaXpkqykExGAH1cIVtKEgWdRjDaveAms\n3rtTmdsBvSOjVoihR9JvrfwQJVf8GxGs1WH0NFFiMEd+d4SpVrh9bVwrpWF02AO2\n3c70NaPMrH/kxK529KD9K2GeA1sGkiP1XUWpXPVJ1u/0W+ktVcsTuZhg+ZqpX2bW\nM6czHPh+UeVowiujomfm6zlzQ4IybNlcVL1lhEOOkACIUy9yqFH8MrEh9LtrXn6a\nsN6AMggy2V+j9Ss0KuWfUJw90RdyWgRC5ZSyDB1i7g5wwXYhQT/IAgTPt4Oi1ZVX\nbIkLgkyQuVFHE9EswqPVqFcZUDxri7PewwOxKS/BjRiIBy/tWLWPByunHZAwGjlv\nfAXGdrHIYRjHwxO+QB7QO744hfAkDfbScfqS4zRHiV4C7y/hDvcqIN46TSujPr5R\nuhi/cBtWVQGmL6h42e7vZLGliPbHvjywc8Xoj6Pr6v6/X3YVceFtVrD+lH9gApuf\nSDXOrEzGIP+AGstYS8AgECPfVG5qleK0fBqVpIcT8qLRGuG2L+uSZGmXwBU0L2Gh\nZN/k8IUQA/DjpDIAQ1iwp68CAwEAAQ==\n-----END PUBLIC KEY-----\n", "public_key_data": {"exponent": 65537, "modulus": 847175425642127467749740234739185250771684532311381266460226183479831473941823305420426374820518966447946411277090922642717040163727312688967724274187831136156675660564168431483959350031292243935862642450796704484820661129131578291982511077253558446304389796012253848287031879496763228730187954738631605610575198393168650358362423246461614907120326028604103595058175128926871183827957088604426585309114428506768432349910380430399944102000052911768361923092279392010130160700299854792838294521652797133328855425001461187504753047404017756613681156999071654231108188437017146065596041713479177754882972512391474726821990619467341665892028525057456502202938341421752514895879926941888368401294597883153585007522369352629088310959304349823778939717328220669408162644628132798145201028650645927508002705321656796139821309091645322327235894725269003509518120480572238769088215085683952988217765861149656791666232684652591248302832692243123565674167327932880122635530616985507420283949965079516932397106604794673991140412061380409284307991971739655706945643541137857335372854750457257313994024498064496723771116413809814061143375282987456856262427091876955940528608963215409345969073600347422284664529641121159355674391207786102334927447983, "size": 4096}, "public_key_fingerprints": {"blake2b": "4d:b3:57:2f:4d:e4:35:66:74:58:1b:d1:57:99:7f:6a:07:e5:a9:eb:73:5f:56:5e:c1:ed:dd:bd:c7:98:8f:6a:96:4e:b7:2b:c5:ff:c3:f9:78:38:4f:7e:c8:5a:4d:fb:d3:9b:97:dd:af:35:99:f6:f7:c1:f5:11:0a:6c:22:91", "blake2s": "6c:f5:32:0b:ae:36:8f:a4:3a:60:7d:c2:eb:a6:42:0f:8c:c8:76:f9:2f:62:70:f4:08:0b:57:81:63:c2:14:c3", "md5": "b2:0a:e2:a4:b5:c3:da:e9:eb:75:fd:b5:4d:79:a4:f1", "sha1": "9a:bf:3a:03:f7:81:fa:b8:eb:46:74:67:47:f4:61:6a:f2:9f:3b:30", "sha224": "57:9b:7d:e2:98:75:4e:70:00:a1:a1:1b:2f:9f:19:bf:48:16:b2:20:e6:a9:0e:3e:04:05:f9:5a", "sha256": "1d:84:17:84:84:49:c1:ac:2e:a5:0a:e1:f2:54:07:40:5f:ba:07:57:73:c4:43:5e:bd:d5:f3:28:ac:47:ec:5a", "sha384": "eb:60:15:cb:71:fa:31:00:ee:db:89:50:69:ee:e9:be:e0:ab:aa:17:1b:bc:0e:74:e2:a2:80:1b:e7:33:d9:cc:b8:88:d6:7e:28:f6:da:f1:be:cb:02:31:1d:b7:14:15", "sha3_224": "ff:80:9e:24:db:0e:40:f4:2c:d5:39:18:82:c7:d2:66:b0:f0:29:59:cd:1c:92:e4:c6:28:6b:05", "sha3_256": "e2:cb:ac:a0:7b:16:a8:7e:11:c1:f1:6a:a1:0b:0a:47:da:aa:7e:a8:af:22:aa:ad:3a:7c:2a:29:43:63:5f:be", "sha3_384": "4d:e4:80:f4:07:a9:c3:81:de:59:d9:ff:d8:d5:c6:e5:af:b8:52:24:29:b0:d0:5a:3e:16:b5:64:40:0c:1f:bb:45:0d:9d:7b:c2:2f:9c:e7:4c:9c:6b:93:c9:ec:e3:1b", "sha3_512": "7e:40:3f:61:12:88:74:92:7b:06:f6:80:40:57:cf:fa:d4:be:2e:fe:a9:e0:86:26:87:4b:fb:ab:8c:b2:ff:e2:93:58:5f:b6:08:9c:27:71:07:a4:46:f3:eb:ab:0a:03:fc:4e:71:56:21:f9:f0:0e:4a:14:27:c4:59:20:62:7c", "sha512": "32:06:f4:8d:17:15:6a:0d:6b:36:05:10:07:68:ee:ab:84:59:80:a9:cb:60:e5:96:cb:64:2f:69:ac:67:25:53:18:63:c4:86:b1:1a:ec:c1:28:70:fa:4c:07:99:a7:23:34:8d:55:80:8d:ff:74:e6:e5:e2:71:77:90:bf:2a:7b", "shake_128": "9d:7e:39:2c:67:3c:ed:fb:d2:82:d6:2f:ad:fc:5d:b4:b0:b1:61:2e:c7:d0:01:af:96:e1:7a:d7:25:a5:de:58", "shake_256": "e5:0d:40:b0:d6:80:d8:61:34:0c:e2:77:ae:56:f4:bc:22:ad:37:53:9a:9d:f5:d4:54:e9:72:4c:5a:c2:83:00"}, "public_key_type": "RSA", "serial_number": 1727211992, "signature_algorithm": "sha256WithRSAEncryption", "subject": {"commonName": "Ansible Automation Controller Nodes Mesh ROOT CA"}, "subject_alt_name": null, "subject_alt_name_critical": false, "subject_key_identifier": "9d:88:1b:b6:90:e4:a7:08:4b:a0:1a:1b:d0:5c:55:aa:40:45:21:0a", "subject_ordered": [["commonName", "Ansible Automation Controller Nodes Mesh ROOT CA"]], "valid_at": {}, "version": 3}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_expiration_from_cert": "2034-09-24 21:06:31"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_epoch": "2042759191.0"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_epoch_minus_delta": "2041895191"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_datetime_with_z": "2034-09-14T21:06:31-0400"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_cert_expiry_date": "2034-09-14T21:06:31-04:00"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Re-check if Receptor Mesh CA files are present] ***
[0;32mok: [aap.example.com] => (item=/etc/receptor/tls/ca/mesh-CA.crt) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": false, "item": "/etc/receptor/tls/ca/mesh-CA.crt", "stat": {"atime": 1727211992.8521562, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "5605a54806a5910a32a806da8c1315eca2aa523e", "ctime": 1727211992.3601532, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 984, "gr_name": "receptor", "inode": 8435599, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1727211992.3601532, "nlink": 1, "path": "/etc/receptor/tls/ca/mesh-CA.crt", "pw_name": "receptor", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1911, "uid": 984, "version": "861579676", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}[0m
[0;32mok: [aap.example.com] => (item=/etc/receptor/tls/ca/mesh-CA.key) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": false, "item": "/etc/receptor/tls/ca/mesh-CA.key", "stat": {"atime": 1727211992.3601532, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "ab8a212f37273cd7c09897806595e024024090fc", "ctime": 1727211992.3601532, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 984, "gr_name": "receptor", "inode": 8435601, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1727211992.3601532, "nlink": 1, "path": "/etc/receptor/tls/ca/mesh-CA.key", "pw_name": "receptor", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 3243, "uid": 984, "version": "899264430", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}[0m

TASK [ansible.automation_platform_installer.receptor : Assert if any Receptor Mesh CA file is missing] ***
[0;32mok: [aap.example.com] => (item={'changed': False, 'stat': {'exists': True, 'path': '/etc/receptor/tls/ca/mesh-CA.crt', 'mode': '0600', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 984, 'gid': 984, 'size': 1911, 'inode': 8435599, 'dev': 64516, 'nlink': 1, 'atime': 1727211992.8521562, 'mtime': 1727211992.3601532, 'ctime': 1727211992.3601532, 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': False, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': False, 'pw_name': 'receptor', 'gr_name': 'receptor', 'checksum': '5605a54806a5910a32a806da8c1315eca2aa523e', 'mimetype': 'text/plain', 'charset': 'us-ascii', 'version': '861579676', 'attributes': [], 'attr_flags': ''}, 'invocation': {'module_args': {'path': '/etc/receptor/tls/ca/mesh-CA.crt', 'follow': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'failed_when_result': False, 'item': '/etc/receptor/tls/ca/mesh-CA.crt', 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "failed": false, "failed_when_result": false, "invocation": {"module_args": {"checksum_algorithm": "sha1", "follow": false, "get_attributes": true, "get_checksum": true, "get_mime": true, "path": "/etc/receptor/tls/ca/mesh-CA.crt"}}, "item": "/etc/receptor/tls/ca/mesh-CA.crt", "stat": {"atime": 1727211992.8521562, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "5605a54806a5910a32a806da8c1315eca2aa523e", "ctime": 1727211992.3601532, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 984, "gr_name": "receptor", "inode": 8435599, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1727211992.3601532, "nlink": 1, "path": "/etc/receptor/tls/ca/mesh-CA.crt", "pw_name": "receptor", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 1911, "uid": 984, "version": "861579676", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "msg": "All assertions passed"}[0m
[0;32mok: [aap.example.com] => (item={'changed': False, 'stat': {'exists': True, 'path': '/etc/receptor/tls/ca/mesh-CA.key', 'mode': '0600', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 984, 'gid': 984, 'size': 3243, 'inode': 8435601, 'dev': 64516, 'nlink': 1, 'atime': 1727211992.3601532, 'mtime': 1727211992.3601532, 'ctime': 1727211992.3601532, 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': False, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False, 'blocks': 8, 'block_size': 4096, 'device_type': 0, 'readable': True, 'writeable': True, 'executable': False, 'pw_name': 'receptor', 'gr_name': 'receptor', 'checksum': 'ab8a212f37273cd7c09897806595e024024090fc', 'mimetype': 'text/plain', 'charset': 'us-ascii', 'version': '899264430', 'attributes': [], 'attr_flags': ''}, 'invocation': {'module_args': {'path': '/etc/receptor/tls/ca/mesh-CA.key', 'follow': False, 'get_checksum': True, 'get_mime': True, 'get_attributes': True, 'checksum_algorithm': 'sha1'}}, 'failed': False, 'failed_when_result': False, 'item': '/etc/receptor/tls/ca/mesh-CA.key', 'ansible_loop_var': 'item'}) => {"ansible_loop_var": "item", "changed": false, "item": {"ansible_loop_var": "item", "changed": false, "failed": false, "failed_when_result": false, "invocation": {"module_args": {"checksum_algorithm": "sha1", "follow": false, "get_attributes": true, "get_checksum": true, "get_mime": true, "path": "/etc/receptor/tls/ca/mesh-CA.key"}}, "item": "/etc/receptor/tls/ca/mesh-CA.key", "stat": {"atime": 1727211992.3601532, "attr_flags": "", "attributes": [], "block_size": 4096, "blocks": 8, "charset": "us-ascii", "checksum": "ab8a212f37273cd7c09897806595e024024090fc", "ctime": 1727211992.3601532, "dev": 64516, "device_type": 0, "executable": false, "exists": true, "gid": 984, "gr_name": "receptor", "inode": 8435601, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "text/plain", "mode": "0600", "mtime": 1727211992.3601532, "nlink": 1, "path": "/etc/receptor/tls/ca/mesh-CA.key", "pw_name": "receptor", "readable": true, "rgrp": false, "roth": false, "rusr": true, "size": 3243, "uid": 984, "version": "899264430", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "msg": "All assertions passed"}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure expected permissions for the Receptor Mesh CA files] ***
[0;33mchanged: [aap.example.com] => (item=/etc/receptor/tls/ca/mesh-CA.crt) => {"ansible_loop_var": "item", "changed": true, "gid": 984, "group": "receptor", "item": "/etc/receptor/tls/ca/mesh-CA.crt", "mode": "0640", "owner": "receptor", "path": "/etc/receptor/tls/ca/mesh-CA.crt", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 1911, "state": "file", "uid": 984}[0m
[0;33mchanged: [aap.example.com] => (item=/etc/receptor/tls/ca/mesh-CA.key) => {"ansible_loop_var": "item", "changed": true, "gid": 984, "group": "receptor", "item": "/etc/receptor/tls/ca/mesh-CA.key", "mode": "0640", "owner": "receptor", "path": "/etc/receptor/tls/ca/mesh-CA.key", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 3243, "state": "file", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Slurp Receptor Mesh CA files] ***
[0;32mok: [aap.example.com] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [aap.example.com] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Generate Receptor Mesh Nodes certificates] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/tls_nodes.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Copy custom node SSL files] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_node_certfile | default('') | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Verify if Mesh Nodes certificate exists] ***
[0;31mfailed: [aap.example.com] (item=/etc/receptor/tls/aap.example.com.crt) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": true, "item": "/etc/receptor/tls/aap.example.com.crt", "stat": {"exists": false}}[0m
[0;31mfailed: [aap.example.com] (item=/etc/receptor/tls/aap.example.com.key) => {"ansible_loop_var": "item", "changed": false, "failed_when_result": true, "item": "/etc/receptor/tls/aap.example.com.key", "stat": {"exists": false}}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.receptor : Obtain all ipv4_addresses from node] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"receptor_ipaddress_cmd": "ipaddress=192.168.100.145"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Validate if receptor_host_identifier is an ipaddress] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_dnsname_valid_ipadddr": ""}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Include the iPAddress x509 extension on the receptor certificate when receptor_host_identifier is an IP address and is not assigned to any NIC at the node] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_dnsname_valid_ipadddr != None and _dnsname_valid_ipadddr | length > 0", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Adds dnsname option to the receptor certificate] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"x509_dnsname_cmd": "dnsname=aap.example.com"}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Create Mesh node certificate] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "receptor --cert-makereq commonname=\"aap.example.com\" bits=\"4096\" nodeid=\"aap.example.com\" outreq=\"/etc/receptor/tls/aap.example.com.csr\" outkey=\"/etc/receptor/tls/aap.example.com.key\" ipaddress=192.168.100.145 dnsname=aap.example.com\n", "delta": "0:00:05.182116", "end": "2024-09-24 17:06:42.995691", "msg": "", "rc": 0, "start": "2024-09-24 17:06:37.813575", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.receptor : Adjust Mesh Node private key permission] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 984, "group": "receptor", "mode": "0640", "owner": "receptor", "path": "/etc/receptor/tls/aap.example.com.key", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 3243, "state": "file", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Slurp Mesh Node CSR] ****
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Transfer Receptor Mesh Node CSR to be signed] ***
[0;33mchanged: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [ansible.automation_platform_installer.receptor : Sign Receptor Mesh Node Certificates] ***
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/receptor/tasks/tls_ca_sign.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.receptor : Sign Receptor Mesh node certificate] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "receptor --cert-signreq verify=yes cacert=\"/etc/receptor/tls/ca/mesh-CA.crt\" cakey=\"/etc/receptor/tls/ca/mesh-CA.key\" req=\"/etc/receptor/tls/aap.example.com.csr\" outcert=\"/etc/receptor/tls/aap.example.com.crt\" notafter=\"2034-09-14T21:06:31-04:00\"\n", "delta": "0:00:00.038532", "end": "2024-09-24 17:06:45.330841", "msg": "", "rc": 0, "start": "2024-09-24 17:06:45.292309", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.receptor : Slurp Receptor Mesh CA certificates] ***
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Copy Receptor Mesh certificate to final node] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "a499effb094716ed630ea2c73a1f7a5f0de6e5c5", "dest": "/etc/receptor/tls/aap.example.com.crt", "gid": 984, "group": "receptor", "mode": "0640", "owner": "receptor", "path": "/etc/receptor/tls/aap.example.com.crt", "secontext": "unconfined_u:object_r:etc_t:s0", "size": 1935, "state": "file", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Cleanup signed Receptor Mesh Certificates] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname != groups['automationcontroller'][0]", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Gather Certificate Sign Requests files to be removed] ***
[0;32mok: [aap.example.com] => {"changed": false, "examined": 4, "files": [{"atime": 1727212005.3142304, "ctime": 1727212004.6642265, "dev": 64516, "gid": 984, "gr_name": "receptor", "inode": 95012, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727212002.9932165, "nlink": 1, "path": "/etc/receptor/tls/aap.example.com.csr", "pw_name": "receptor", "rgrp": true, "roth": false, "rusr": true, "size": 1704, "uid": 984, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}], "matched": 1, "msg": "All paths examined", "skipped_paths": {}}[0m

TASK [ansible.automation_platform_installer.receptor : Remove directory content] ***
[0;33mchanged: [aap.example.com] => (item={'path': '/etc/receptor/tls/aap.example.com.csr', 'mode': '0640', 'isdir': False, 'ischr': False, 'isblk': False, 'isreg': True, 'isfifo': False, 'islnk': False, 'issock': False, 'uid': 984, 'gid': 984, 'size': 1704, 'inode': 95012, 'dev': 64516, 'nlink': 1, 'atime': 1727212005.3142304, 'mtime': 1727212002.9932165, 'ctime': 1727212004.6642265, 'gr_name': 'receptor', 'pw_name': 'receptor', 'wusr': True, 'rusr': True, 'xusr': False, 'wgrp': False, 'rgrp': True, 'xgrp': False, 'woth': False, 'roth': False, 'xoth': False, 'isuid': False, 'isgid': False}) => {"ansible_loop_var": "item", "changed": true, "item": {"atime": 1727212005.3142304, "ctime": 1727212004.6642265, "dev": 64516, "gid": 984, "gr_name": "receptor", "inode": 95012, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mode": "0640", "mtime": 1727212002.9932165, "nlink": 1, "path": "/etc/receptor/tls/aap.example.com.csr", "pw_name": "receptor", "rgrp": true, "roth": false, "rusr": true, "size": 1704, "uid": 984, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}, "path": "/etc/receptor/tls/aap.example.com.csr", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.receptor : Distribute Receptor Mesh CA to automationcontroller nodes] ***
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.receptor : Distribute Receptor Mesh CA certificate to all execution_nodes] ***
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.receptor : Create awx group] *******
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "name": "awx", "state": "present", "system": false}[0m

TASK [ansible.automation_platform_installer.receptor : Adds awx user to receptor group] ***
[0;33mchanged: [aap.example.com] => {"append": true, "changed": true, "comment": "", "group": 985, "groups": "receptor", "home": "/var/lib/awx", "move_home": false, "name": "awx", "shell": "/bin/bash", "state": "present", "uid": 985}[0m

TASK [ansible.automation_platform_installer.receptor : Configure the user's home directory] ***
[0;32mok: [aap.example.com] => {"changed": false, "gid": 985, "group": "awx", "mode": "0755", "owner": "awx", "path": "/var/lib/awx", "secontext": "system_u:object_r:var_lib_t:s0", "size": 150, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure soft/hard file descriptors limits] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "9251e282f1ff02786b454c0b9e5a09433d6019db", "dest": "/etc/security/limits.d/awx.conf", "gid": 0, "group": "root", "md5sum": "4cb6c6070f3cc859308297da2b37e733", "mode": "0600", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 56, "src": "/root/.ansible/tmp/ansible-tmp-1727212009.5947466-3146513-236490109669965/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.receptor : Generate Private RSA key for signing work] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "filename": "/etc/receptor/work_private_key.pem", "fingerprint": {"blake2b": "60:9d:57:29:7a:43:c5:f9:ab:70:a0:b7:f1:38:bd:8c:84:4d:d2:70:a9:a0:69:fa:e6:d6:af:c4:46:7a:04:22:06:b1:86:94:d9:71:fe:61:3b:70:03:89:0f:63:07:1e:e8:dc:82:bb:18:f7:19:90:0a:ed:35:97:48:b9:26:d2", "blake2s": "a7:6f:20:38:3f:96:43:08:34:88:41:c2:92:c9:15:bf:7d:9c:01:53:7c:a4:e5:78:7f:e2:50:0c:04:75:0b:cd", "md5": "bf:d5:36:cc:e9:66:19:fb:bb:7a:5d:46:1d:2f:1b:cb", "sha1": "05:f3:d3:aa:11:05:b8:d9:e2:bc:87:08:86:1b:73:f8:96:48:01:8a", "sha224": "c2:b8:db:a5:41:ba:42:db:5b:2f:f9:e9:28:4f:ec:4e:34:16:45:e2:0c:0a:08:e0:b2:d8:f2:d1", "sha256": "06:b8:a8:fb:e8:cd:1d:af:d8:c1:95:80:da:09:7d:9f:49:ae:3c:9f:b0:99:dd:40:c8:55:84:4e:ed:39:d6:98", "sha384": "cc:88:3a:21:b1:6e:0e:d0:12:3f:4b:25:da:54:b6:3a:ec:ee:32:c4:02:04:60:22:78:fc:4a:0a:2a:ca:d1:a9:3d:97:96:d9:3c:2c:7a:a8:1f:04:e0:0c:ee:2b:8f:47", "sha3_224": "b5:67:5b:e2:f3:24:a8:4d:22:ba:7a:bb:45:25:7d:91:f1:55:47:85:e5:6b:eb:65:33:09:8f:78", "sha3_256": "e2:10:89:b3:22:36:0f:13:83:16:01:12:e3:80:af:6e:f8:b2:45:87:0d:b0:80:5d:57:f0:6f:cf:3c:e2:a2:9c", "sha3_384": "f9:1a:ed:fe:4c:89:5b:f1:ee:db:67:50:92:5b:fc:db:60:77:c7:17:65:06:d4:13:fc:33:e1:78:dc:9d:16:09:08:56:85:8d:af:65:63:8f:0f:cb:e0:3a:70:57:73:a7", "sha3_512": "5d:8a:c8:b1:43:e8:29:84:85:67:a5:7b:3b:50:5e:04:5d:a6:f6:21:ff:e2:76:5c:d9:c8:b9:58:9a:d0:a6:dd:75:8c:cd:5b:76:86:6d:a7:83:4b:80:97:c2:1e:6d:4b:3e:a0:d9:d1:ac:0f:1b:20:7b:10:a9:d2:3f:d9:15:99", "sha512": "25:90:e8:33:08:7f:83:f3:fc:68:25:d5:ab:48:ab:4c:3e:03:ac:51:5d:61:eb:75:b7:ab:1f:ff:e5:e0:56:9f:3e:fe:59:95:60:07:79:e4:16:c9:1f:12:e4:45:73:48:1b:6b:b0:e0:3b:2e:32:d4:8e:c7:aa:2b:84:50:df:48", "shake_128": "02:20:01:29:4a:38:51:ca:01:44:b0:84:dc:bb:eb:c0:a7:bb:91:a7:ab:34:a1:80:e5:0a:26:85:f7:73:aa:61", "shake_256": "62:69:b2:13:6b:c5:a5:76:4d:91:6f:8d:2b:ba:6a:34:ca:fe:af:9f:20:df:5c:d8:73:b5:a4:90:a2:99:aa:5e"}, "size": 4096, "type": "RSA"}[0m

TASK [ansible.automation_platform_installer.receptor : Generate public RSA key for signing work] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "filename": "/etc/receptor/work_public_key.pem", "fingerprint": {"blake2b": "60:9d:57:29:7a:43:c5:f9:ab:70:a0:b7:f1:38:bd:8c:84:4d:d2:70:a9:a0:69:fa:e6:d6:af:c4:46:7a:04:22:06:b1:86:94:d9:71:fe:61:3b:70:03:89:0f:63:07:1e:e8:dc:82:bb:18:f7:19:90:0a:ed:35:97:48:b9:26:d2", "blake2s": "a7:6f:20:38:3f:96:43:08:34:88:41:c2:92:c9:15:bf:7d:9c:01:53:7c:a4:e5:78:7f:e2:50:0c:04:75:0b:cd", "md5": "bf:d5:36:cc:e9:66:19:fb:bb:7a:5d:46:1d:2f:1b:cb", "sha1": "05:f3:d3:aa:11:05:b8:d9:e2:bc:87:08:86:1b:73:f8:96:48:01:8a", "sha224": "c2:b8:db:a5:41:ba:42:db:5b:2f:f9:e9:28:4f:ec:4e:34:16:45:e2:0c:0a:08:e0:b2:d8:f2:d1", "sha256": "06:b8:a8:fb:e8:cd:1d:af:d8:c1:95:80:da:09:7d:9f:49:ae:3c:9f:b0:99:dd:40:c8:55:84:4e:ed:39:d6:98", "sha384": "cc:88:3a:21:b1:6e:0e:d0:12:3f:4b:25:da:54:b6:3a:ec:ee:32:c4:02:04:60:22:78:fc:4a:0a:2a:ca:d1:a9:3d:97:96:d9:3c:2c:7a:a8:1f:04:e0:0c:ee:2b:8f:47", "sha3_224": "b5:67:5b:e2:f3:24:a8:4d:22:ba:7a:bb:45:25:7d:91:f1:55:47:85:e5:6b:eb:65:33:09:8f:78", "sha3_256": "e2:10:89:b3:22:36:0f:13:83:16:01:12:e3:80:af:6e:f8:b2:45:87:0d:b0:80:5d:57:f0:6f:cf:3c:e2:a2:9c", "sha3_384": "f9:1a:ed:fe:4c:89:5b:f1:ee:db:67:50:92:5b:fc:db:60:77:c7:17:65:06:d4:13:fc:33:e1:78:dc:9d:16:09:08:56:85:8d:af:65:63:8f:0f:cb:e0:3a:70:57:73:a7", "sha3_512": "5d:8a:c8:b1:43:e8:29:84:85:67:a5:7b:3b:50:5e:04:5d:a6:f6:21:ff:e2:76:5c:d9:c8:b9:58:9a:d0:a6:dd:75:8c:cd:5b:76:86:6d:a7:83:4b:80:97:c2:1e:6d:4b:3e:a0:d9:d1:ac:0f:1b:20:7b:10:a9:d2:3f:d9:15:99", "sha512": "25:90:e8:33:08:7f:83:f3:fc:68:25:d5:ab:48:ab:4c:3e:03:ac:51:5d:61:eb:75:b7:ab:1f:ff:e5:e0:56:9f:3e:fe:59:95:60:07:79:e4:16:c9:1f:12:e4:45:73:48:1b:6b:b0:e0:3b:2e:32:d4:8e:c7:aa:2b:84:50:df:48", "shake_128": "02:20:01:29:4a:38:51:ca:01:44:b0:84:dc:bb:eb:c0:a7:bb:91:a7:ab:34:a1:80:e5:0a:26:85:f7:73:aa:61", "shake_256": "62:69:b2:13:6b:c5:a5:76:4d:91:6f:8d:2b:ba:6a:34:ca:fe:af:9f:20:df:5c:d8:73:b5:a4:90:a2:99:aa:5e"}, "format": "PEM", "privatekey": "/etc/receptor/work_private_key.pem"}[0m

TASK [ansible.automation_platform_installer.receptor : Slurp work signing keys] ***
[0;32mok: [aap.example.com] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [aap.example.com] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [aap.example.com] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Distribute Work Sign keys to automationcontroller nodes] ***
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.receptor : Distribute work sign public keys to all execution_nodes] ***
[0;36mskipping: [aap.example.com] => (item=None)  => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.receptor : Allow awx user to read receptor configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "receptor", "path": "/etc/receptor", "secontext": "system_u:object_r:etc_t:s0", "size": 122, "state": "directory", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Ensure systemd override directory exists] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/systemd/system/receptor.service.d", "secontext": "unconfined_u:object_r:systemd_unit_file_t:s0", "size": 6, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.receptor : Override receptor's systemd service runuser] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "ca3bd9eedc215b9d1b5d199ffa1e4bcee6b3ce76", "dest": "/etc/systemd/system/receptor.service.d/override.conf", "gid": 0, "group": "root", "md5sum": "360be72118dce65bc1f2b172572a613c", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:systemd_unit_file_t:s0", "size": 132, "src": "/root/.ansible/tmp/ansible-tmp-1727212017.6746316-3146652-165845202552511/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.receptor : Configure the awx-receptor socket directory.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0750", "owner": "awx", "path": "/var/run/awx-receptor", "secontext": "unconfined_u:object_r:var_run_t:s0", "size": 40, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.receptor : Create tmpfiles.d entry for awx-receptor socket directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "4eec49a705e065542c62c97d942e1b3703c7b4e8", "dest": "/etc/tmpfiles.d/awx-receptor.conf", "gid": 0, "group": "root", "md5sum": "5aa4a39692dd629bb3b8f70f88c65f1f", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 39, "src": "/root/.ansible/tmp/ansible-tmp-1727212018.7438061-3146676-276784072241345/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.receptor : Create tmpfiles.d entry for receptor socket directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "9d47f12d0338f74e8c8899dc6aad09255b605a84", "dest": "/etc/tmpfiles.d/receptor.conf", "gid": 0, "group": "root", "md5sum": "2fea79469a06b76994455b0f107dd8b6", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 35, "src": "/root/.ansible/tmp/ansible-tmp-1727212019.4135509-3146701-61813803285500/source", "state": "file", "uid": 0}[0m

TASK [Configure firewall] ******************************************************

TASK [ansible.automation_platform_installer.firewall : include_tasks] **********
[0;36mincluded: /home/cgs/git/example.com/ansible-automation-platform-setup-2.4-7/collections/ansible_collections/ansible/automation_platform_installer/roles/firewall/tasks/discover.yml for aap.example.com[0m

TASK [ansible.automation_platform_installer.firewall : Determine if firewalld is running] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "firewall-cmd --state", "failed_when_result": false, "msg": "[Errno 2] No such file or directory: b'firewall-cmd'", "rc": 2, "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.firewall : Determine if firewalld is enabled] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"changed": false, "cmd": ["systemctl", "list-unit-files", "firewalld.service"], "delta": "0:00:00.015732", "end": "2024-09-24 17:07:01.267563", "msg": "non-zero return code", "rc": 1, "start": "2024-09-24 17:07:01.251831", "stderr": "", "stderr_lines": [], "stdout": "UNIT FILE STATE PRESET\n\n0 unit files listed.", "stdout_lines": ["UNIT FILE STATE PRESET", "", "0 unit files listed."]}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.firewall : Determine if iptables is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": ["iptables", "--version"], "delta": "0:00:00.018316", "end": "2024-09-24 17:07:01.839946", "failed_when_result": false, "msg": "", "rc": 0, "start": "2024-09-24 17:07:01.821630", "stderr": "", "stderr_lines": [], "stdout": "iptables v1.8.10 (nf_tables)", "stdout_lines": ["iptables v1.8.10 (nf_tables)"]}[0m

TASK [ansible.automation_platform_installer.firewall : Determine if iptables service is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.firewall : Check to see if there is an iptables config file] ***
[0;32mok: [aap.example.com] => {"changed": false, "stat": {"exists": false}}[0m

TASK [ansible.automation_platform_installer.firewall : Select firewalld] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "firewalld_running.rc == 0 or systemctl_unit_files.stdout_lines | select('match','firewalld.service\\s+enabled') | list | length == 1\n", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.firewall : Select iptables] ********
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "iptables_exists.stat.exists", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.firewall : Include no tasks] *******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "firewalld_running.rc == 0 or systemctl_unit_files.stdout_lines | select('match','firewalld.service\\s+enabled') | list | length == 1 or ( iptables_installed.rc == 0 and iptables_exists.stat.exists and iptables_service.stat.exists )\n", "skip_reason": "Conditional result was False"}[0m

TASK [Configure podman] ********************************************************

TASK [ansible.automation_platform_installer.podman : Allocate subuids for awx user] ***
[0;33mchanged: [aap.example.com] => {"changed": true}[0m

TASK [ansible.automation_platform_installer.podman : Allocate subgids for awx user] ***
[0;33mchanged: [aap.example.com] => {"changed": true}[0m

TASK [ansible.automation_platform_installer.podman : Create directory for crun runtime config] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0700", "owner": "awx", "path": "/var/lib/awx/.config/containers", "secontext": "unconfined_u:object_r:container_var_lib_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.podman : Configure podman default runtime] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "1d75352e8e1b2de82b2880a29438210c8a71c7b5", "dest": "/var/lib/awx/.config/containers/containers.conf", "gid": 985, "group": "awx", "md5sum": "66f060cfbed363985d27768c1f30e464", "mode": "0600", "owner": "awx", "secontext": "system_u:object_r:var_lib_t:s0", "size": 91, "src": "/root/.ansible/tmp/ansible-tmp-1727212024.651512-3146816-50635113155829/source", "state": "file", "uid": 985}[0m

TASK [ansible.automation_platform_installer.podman : Create empty mounts config file to avoid permissions error message] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709", "dest": "/var/lib/awx/.config/containers/mounts.conf", "gid": 985, "group": "awx", "md5sum": "d41d8cd98f00b204e9800998ecf8427e", "mode": "0600", "owner": "awx", "secontext": "system_u:object_r:var_lib_t:s0", "size": 0, "src": "/root/.ansible/tmp/ansible-tmp-1727212025.5045097-3146841-118077638723176/source", "state": "file", "uid": 985}[0m

TASK [ansible.automation_platform_installer.podman : Check current SELinux context mapping] ***
[0;31mfatal: [aap.example.com]: FAILED! => {"changed": false, "cmd": "semanage fcontext -C -l | grep /var/lib/awx/.local/share/containers", "delta": "0:00:00.441179", "end": "2024-09-24 17:07:07.288621", "msg": "non-zero return code", "rc": 1, "start": "2024-09-24 17:07:06.847442", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m
[0;36m...ignoring[0m

TASK [ansible.automation_platform_installer.podman : Delete custom SELinux context mapping] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "semanage_current.stdout_lines|length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.podman : Register expected SELinux context mapping] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["semanage", "fcontext", "-a", "-e", "/var/lib/containers", "/var/lib/awx/.local/share/containers"], "delta": "0:00:00.518982", "end": "2024-09-24 17:07:08.400054", "msg": "", "rc": 0, "start": "2024-09-24 17:07:07.881072", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.podman : Force SELinux relabeling for existing files] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "podman_force_selinux_relabel | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.podman : Ensure registries.conf.d exists] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/etc/containers/registries.conf.d/", "secontext": "system_u:object_r:etc_t:s0", "size": 107, "state": "directory", "uid": 0}[0m

TASK [ansible.automation_platform_installer.podman : Force fully qualified image names to be provided to podman pull] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "89306ecf2b88c93284116b1d6ccf1f33d27c4357", "dest": "/etc/containers/registries.conf.d/force-fully-qualified-images.conf", "gid": 0, "group": "root", "md5sum": "59749fe41526b613dba343038e1810df", "mode": "0644", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 35, "src": "/root/.ansible/tmp/ansible-tmp-1727212029.0007029-3146904-222636118256348/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.podman : Create tmpfiles.d entry for podman] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "1a1e05d5c5e9892a7e42bc55c3b0db2983fbd310", "dest": "/etc/tmpfiles.d/podman.conf", "gid": 0, "group": "root", "md5sum": "be73ede4da64671f8c70e7558cfae5e4", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 116, "src": "/root/.ansible/tmp/ansible-tmp-1727212029.695824-3146931-227311238736560/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.podman : Create temporary directory for podman] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "gid": 985, "group": "awx", "mode": "0700", "owner": "awx", "path": "/tmp/ansible.7cw5fxs2", "secontext": "unconfined_u:object_r:user_tmp_t:s0", "size": 6, "state": "directory", "uid": 985}[0m

TASK [ansible.automation_platform_installer.podman : Ensure changes are applied to podman] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["podman", "system", "migrate"], "delta": "0:00:00.713475", "end": "2024-09-24 17:07:12.332170", "msg": "", "rc": 0, "start": "2024-09-24 17:07:11.618695", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.podman : Remove podman temporary directory] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "path": "/tmp/ansible.7cw5fxs2", "state": "absent"}[0m

TASK [ansible.automation_platform_installer.podman : Configure XDG_RUNTIME_DIR Environment variable for "awx" user] ***
[0;33mchanged: [aap.example.com] => {"backup": "", "changed": true, "msg": "line added"}[0m

TASK [ansible.automation_platform_installer.podman : Configure DBUS_SESSION_BUS_ADDRESS Environment variable for "awx" user] ***
[0;33mchanged: [aap.example.com] => {"backup": "", "changed": true, "msg": "line added"}[0m

TASK [ansible.automation_platform_installer.podman : Enable lingering systemd sessions for awx user] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["loginctl", "enable-linger", "awx"], "delta": "0:00:00.015977", "end": "2024-09-24 17:07:14.150029", "msg": "", "rc": 0, "start": "2024-09-24 17:07:14.134052", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.podman : Reset podman for awx user to apply configs] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["podman", "system", "reset", "-f"], "delta": "0:00:00.337715", "end": "2024-09-24 17:07:14.917484", "msg": "", "rc": 0, "start": "2024-09-24 17:07:14.579769", "stderr": "time=\"2024-09-24T17:07:14-04:00\" level=error msg=\"shutting down container storage: umount /var/lib/awx/.local/share/containers/storage/overlay, flags: 0x2: no such file or directory\"", "stderr_lines": ["time=\"2024-09-24T17:07:14-04:00\" level=error msg=\"shutting down container storage: umount /var/lib/awx/.local/share/containers/storage/overlay, flags: 0x2: no such file or directory\""], "stdout": "", "stdout_lines": []}[0m

TASK [ansible.automation_platform_installer.podman : Enable podman socket for awx] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "podman_enable_socket | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : set_fact] ***************
[0;32mok: [aap.example.com] => {"ansible_facts": {"_fips_enabled": false}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Disable minTLS13 if any node is FIPS enabled] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"_disable_mintls13": false}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Deploy receptor config] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "9fd8576e448e4936a110278ec232e36f95e4f617", "dest": "/etc/receptor/receptor.conf", "gid": 984, "group": "receptor", "md5sum": "7c9604fae8416ad000fb675ed01c9405", "mode": "0644", "owner": "receptor", "secontext": "system_u:object_r:etc_t:s0", "size": 1536, "src": "/root/.ansible/tmp/ansible-tmp-1727212035.2047186-3147064-131640294420934/source", "state": "file", "uid": 984}[0m

TASK [ansible.automation_platform_installer.receptor : Start Receptor service] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "receptor", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "sysinit.target system.slice basic.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Receptor", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/receptor.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/receptor ; argv[]=/usr/bin/receptor -c /etc/receptor/receptor.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/receptor ; argv[]=/usr/bin/receptor -c /etc/receptor/receptor.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/receptor.service", "FreezerState": "running", "GID": "[not set]", "Group": "awx", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "receptor.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "receptor.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "on-failure", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "append", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:02:46 EDT", "StateChangeTimestampMonotonic": "2230906433", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "disabled", "User": "awx", "UtmpMode": "init", "WantedBy": "automation-controller.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [ansible.automation_platform_installer.receptor : Get UUID for execution nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_type == 'execution'", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Set UUID option for execution_nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_type == 'execution'", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Generate UUID for hop nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_type == 'hop'", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Set UUID option for hop nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "node_type == 'hop'", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Set UUID option for control / hybrid nodes] ***
[0;32mok: [aap.example.com] => {"ansible_facts": {"uuid_option": "--uuid \"e744c09f-9996-426b-be8f-48256f7d5421\""}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Get the Controller version] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage version", "delta": "0:00:00.537640", "end": "2024-09-24 17:07:18.938982", "msg": "", "rc": 0, "start": "2024-09-24 17:07:18.401342", "stderr": "", "stderr_lines": [], "stdout": "4.5.11", "stdout_lines": ["4.5.11"]}[0m

TASK [ansible.automation_platform_installer.receptor : Set listener port option for nodes] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "listener is defined and listener", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Register the node instance in the database] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage provision_instance --hostname=\"aap.example.com\" --node_type=\"hybrid\" --uuid \"e744c09f-9996-426b-be8f-48256f7d5421\" ", "delta": "0:00:02.588664", "end": "2024-09-24 17:07:21.967644", "msg": "", "rc": 0, "start": "2024-09-24 17:07:19.378980", "stderr": "", "stderr_lines": [], "stdout": "Successfully registered instance aap.example.com\n(changed: True)", "stdout_lines": ["Successfully registered instance aap.example.com", "(changed: True)"]}[0m

TASK [ansible.automation_platform_installer.receptor : Register controlplane nodes to controlplane queue] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage register_queue --queuename=\"controlplane\" --instance_percent=100\n", "delta": "0:00:03.402837", "end": "2024-09-24 17:07:25.954579", "msg": "", "rc": 0, "start": "2024-09-24 17:07:22.551742", "stderr": "", "stderr_lines": [], "stdout": "Creating instance group controlplane\n(changed: True)", "stdout_lines": ["Creating instance group controlplane", "(changed: True)"]}[0m

TASK [ansible.automation_platform_installer.receptor : Register work nodes to default queue] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage register_queue --queuename=\"default\" --instance_percent=100\n", "delta": "0:00:01.849094", "end": "2024-09-24 17:07:28.381860", "msg": "", "rc": 0, "start": "2024-09-24 17:07:26.532766", "stderr": "", "stderr_lines": [], "stdout": "Creating instance group default\n(changed: True)", "stdout_lines": ["Creating instance group default", "(changed: True)"]}[0m

TASK [ansible.automation_platform_installer.receptor : Register instance_group_* groups] ***
[0;36mskipping: [aap.example.com] => (item=all)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.startswith('instance_group_')", "item": "all", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=automationcontroller)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.startswith('instance_group_')", "item": "automationcontroller", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=aap_valid_hosts)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.startswith('instance_group_')", "item": "aap_valid_hosts", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=RedHat_9)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.startswith('instance_group_')", "item": "RedHat_9", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item=supported)  => {"ansible_loop_var": "item", "changed": false, "false_condition": "item.startswith('instance_group_')", "item": "supported", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.receptor : Flush handlers] *********

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : restart nginx] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "nginx", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:httpd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:02:30 EDT", "ActiveEnterTimestampMonotonic": "2214749669", "ActiveExitTimestamp": "Tue 2024-09-24 17:02:30 EDT", "ActiveExitTimestampMonotonic": "2214717744", "ActiveState": "active", "After": "systemd-journald.socket system.slice -.mount sysinit.target basic.target nss-lookup.target tmp.mount network-online.target systemd-tmpfiles-setup.service remote-fs.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:02:30 EDT", "AssertTimestampMonotonic": "2214722265", "Before": "automation-controller.service multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "18240000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:02:30 EDT", "ConditionTimestampMonotonic": "2214722264", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/nginx.service", "ControlGroupId": "5463", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The nginx HTTP and reverse proxy server", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/nginx.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "22474", "ExecMainStartTimestamp": "Tue 2024-09-24 17:02:30 EDT", "ExecMainStartTimestampMonotonic": "2214749652", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPre": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartPreEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/nginx.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "nginx.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:02:30 EDT", "InactiveEnterTimestampMonotonic": "2214721957", "InactiveExitTimestamp": "Tue 2024-09-24 17:02:30 EDT", "InactiveExitTimestampMonotonic": "2214726322", "InvocationID": "dc995f33fc2742528dfbbc86215a4eff", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "3", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "22474", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "2052096", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "nginx.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PIDFile": "/run/nginx.pid", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "-.mount sysinit.target system.slice", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "3", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:02:30 EDT", "StateChangeTimestampMonotonic": "2214749669", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "48684", "TimeoutAbortUSec": "5s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "5s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : reload nginx] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "nginx", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:httpd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ActiveEnterTimestampMonotonic": "2513200285", "ActiveExitTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ActiveExitTimestampMonotonic": "2513160270", "ActiveState": "active", "After": "systemd-journald.socket system.slice -.mount sysinit.target basic.target nss-lookup.target tmp.mount network-online.target systemd-tmpfiles-setup.service remote-fs.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:07:29 EDT", "AssertTimestampMonotonic": "2513164360", "Before": "automation-controller.service multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "26578000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ConditionTimestampMonotonic": "2513164359", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/nginx.service", "ControlGroupId": "6210", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The nginx HTTP and reverse proxy server", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/nginx.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "45242", "ExecMainStartTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ExecMainStartTimestampMonotonic": "2513200267", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecReloadEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStart": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45241 ; code=exited ; status=0 }", "ExecStartEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; flags= ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45241 ; code=exited ; status=0 }", "ExecStartPre": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45240 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; flags= ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45240 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/nginx.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "nginx.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:07:29 EDT", "InactiveEnterTimestampMonotonic": "2513163968", "InactiveExitTimestamp": "Tue 2024-09-24 17:07:29 EDT", "InactiveExitTimestampMonotonic": "2513170030", "InvocationID": "0b56c984c2b545c2b2ded6502e777c3f", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "3", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "45242", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "2830336", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "nginx.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PIDFile": "/run/nginx.pid", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "-.mount sysinit.target system.slice", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "3", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:07:29 EDT", "StateChangeTimestampMonotonic": "2513200285", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "48684", "TimeoutAbortUSec": "5s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "5s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.supervisor : restart supervisor] ***
[0;33mchanged: [aap.example.com] => {[0m
[0;33m    "msg": "Restarting supervisor."[0m
[0;33m}[0m

RUNNING HANDLER [ansible.automation_platform_installer.supervisor : Stop supervisor.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "stopped", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ActiveEnterTimestampMonotonic": "2382342686", "ActiveExitTimestamp": "Tue 2024-09-24 17:02:57 EDT", "ActiveExitTimestampMonotonic": "2241687663", "ActiveState": "active", "After": "systemd-journald.socket basic.target rc-local.service sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:05:18 EDT", "AssertTimestampMonotonic": "2382212417", "Before": "multi-user.target shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "49946867000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ConditionTimestampMonotonic": "2382212416", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/supervisord.service", "ControlGroupId": "5670", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "33466", "ExecMainStartTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ExecMainStartTimestampMonotonic": "2382342668", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:02:57 EDT", "InactiveEnterTimestampMonotonic": "2241958401", "InactiveExitTimestamp": "Tue 2024-09-24 17:05:18 EDT", "InactiveExitTimestampMonotonic": "2382217987", "InvocationID": "270450dca8654729986108ee8d6ce78b", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "33466", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "1499787264", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:05:18 EDT", "StateChangeTimestampMonotonic": "2382342686", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "46", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.supervisor : Wait for supervisor to stop.] ***
[0;32mok: [aap.example.com] => {"attempts": 1, "changed": false, "stat": {"exists": false}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.supervisor : Start supervisor.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ActiveEnterTimestampMonotonic": "2382342686", "ActiveExitTimestamp": "Tue 2024-09-24 17:07:30 EDT", "ActiveExitTimestampMonotonic": "2514345999", "ActiveState": "inactive", "After": "systemd-journald.socket basic.target rc-local.service sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:05:18 EDT", "AssertTimestampMonotonic": "2382212417", "Before": "multi-user.target shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "51431407000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ConditionTimestampMonotonic": "2382212416", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "5670", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "1", "ExecMainExitTimestamp": "Tue 2024-09-24 17:07:32 EDT", "ExecMainExitTimestampMonotonic": "2516879997", "ExecMainPID": "33466", "ExecMainStartTimestamp": "Tue 2024-09-24 17:05:18 EDT", "ExecMainStartTimestampMonotonic": "2382342668", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:07:32 EDT", "InactiveEnterTimestampMonotonic": "2516880116", "InactiveExitTimestamp": "Tue 2024-09-24 17:05:18 EDT", "InactiveExitTimestampMonotonic": "2382217987", "InvocationID": "270450dca8654729986108ee8d6ce78b", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:07:32 EDT", "StateChangeTimestampMonotonic": "2516880116", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.receptor : Restart Receptor] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "enabled": true, "name": "receptor", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:07:17 EDT", "ActiveEnterTimestampMonotonic": "2501978024", "ActiveExitTimestampMonotonic": "0", "ActiveState": "active", "After": "system.slice sysinit.target basic.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:07:17 EDT", "AssertTimestampMonotonic": "2501974020", "Before": "multi-user.target shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "15612000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:07:17 EDT", "ConditionTimestampMonotonic": "2501974018", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/receptor.service", "ControlGroupId": "6165", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Receptor", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/receptor.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "44609", "ExecMainStartTimestamp": "Tue 2024-09-24 17:07:17 EDT", "ExecMainStartTimestampMonotonic": "2501977871", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/receptor ; argv[]=/usr/bin/receptor -c /etc/receptor/receptor.conf ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:17 EDT] ; stop_time=[n/a] ; pid=44609 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/usr/bin/receptor ; argv[]=/usr/bin/receptor -c /etc/receptor/receptor.conf ; flags= ; start_time=[Tue 2024-09-24 17:07:17 EDT] ; stop_time=[n/a] ; pid=44609 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/receptor.service", "FreezerState": "running", "GID": "985", "Group": "awx", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "receptor.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestamp": "Tue 2024-09-24 17:07:17 EDT", "InactiveExitTimestampMonotonic": "2501978024", "InvocationID": "8df6f87c2c5445e0ae525551a210c09f", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "44609", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "10874880", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "receptor.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "on-failure", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "append", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:07:17 EDT", "StateChangeTimestampMonotonic": "2501978024", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "5", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "simple", "UID": "985", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "User": "awx", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.receptor : Reload Receptor] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "receptorctl --socket /var/run/awx-receptor/receptor.sock reload", "delta": "0:00:00.147125", "end": "2024-09-24 17:07:34.869513", "failed_when_result": false, "msg": "", "rc": 0, "start": "2024-09-24 17:07:34.722388", "stderr": "", "stderr_lines": [], "stdout": "Reload successful", "stdout_lines": ["Reload successful"]}[0m

RUNNING HANDLER [ansible.automation_platform_installer.receptor : Restart Receptor If Reload Did Not Success] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "_reload is not defined or _reload.failed | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.receptor : Validate connectivity for Mesh peers] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "skipped_reason": "No items in the list"}[0m

TASK [ansible.automation_platform_installer.receptor : Compose Mesh Report] ****
[0;32mok: [aap.example.com] => {"ansible_facts": {"mesh_report": {"mesh_failed_pings": [], "mesh_successful_pings": []}}, "changed": false}[0m

TASK [ansible.automation_platform_installer.receptor : Receptor Mesh Report] ***
[0;32mok: [aap.example.com] => {[0m
[0;32m    "mesh_report": {[0m
[0;32m        "mesh_failed_pings": [],[0m
[0;32m        "mesh_successful_pings": [][0m
[0;32m    }[0m
[0;32m}[0m

TASK [ansible.automation_platform_installer.receptor : Report error when mesh connectivity issue is detected] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "mesh_ping.failed | default(False) | bool", "skip_reason": "Conditional result was False"}[0m

TASK [Run repo_management (teardown)] ******************************************

TASK [ansible.automation_platform_installer.repo_management : Disable Automation Platform repository] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "extra_repos is defined", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.repo_management : Disable Automation Platform RHSM repository] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["subscription-manager", "repos", "--disable", "ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms"], "delta": "0:00:02.442386", "end": "2024-09-24 17:07:38.126134", "msg": "", "rc": 0, "start": "2024-09-24 17:07:35.683748", "stderr": "", "stderr_lines": [], "stdout": "Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is disabled for this system.", "stdout_lines": ["Repository 'ansible-automation-platform-2.4-for-rhel-9-x86_64-rpms' is disabled for this system."]}[0m

PLAY [Post-Receptor setup] *****************************************************

TASK [set_fact] ****************************************************************
[0;32mok: [aap.example.com] => {"ansible_facts": {"receptor_host_identifier": "aap.example.com"}, "changed": false}[0m

TASK [include_role : ansible.automation_platform_installer.receptor] ***********

TASK [ansible.automation_platform_installer.receptor : register the peers for a node, with removal of old peers] ***
[0;32mok: [aap.example.com] => {"changed": false, "cmd": "awx-manage register_peers \"aap.example.com\" --exact ", "delta": "0:00:03.289047", "end": "2024-09-24 17:07:42.088578", "msg": "", "rc": 0, "start": "2024-09-24 17:07:38.799531", "stderr": "", "stderr_lines": [], "stdout": "0 peer links added and 0 deleted from the database.", "stdout_lines": ["0 peer links added and 0 deleted from the database."]}[0m

PLAY [Install Single Sign-On node] *********************************************
[0;36mskipping: no hosts matched[0m

PLAY [Configure Single Sign-On Realm] ******************************************
[0;36mskipping: no hosts matched[0m

PLAY [Install Automation Hub node] *********************************************
[0;36mskipping: no hosts matched[0m

PLAY [Install Automation EDA Controller] ***************************************
[0;36mskipping: no hosts matched[0m

PLAY [Post-install setup] ******************************************************

TASK [Set automation hub image base path] **************************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.misc] ***************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['automationhub'] | default([]) or (node_type | default('') != 'hop' and node_state | default('') == 'active' and bundle_install | bool) or (inventory_hostname in groups['automationedacontroller'] | default([]) and bundle_install | bool)", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.automationcontroller] ***

TASK [ansible.automation_platform_installer.automationcontroller : Add ee-29 to the EE configuration] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Create execution environment list for Hub] ***
[0;36mskipping: [aap.example.com] => (item={'name': 'Default execution environment', 'image': 'registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8:latest'})  => {"ansible_loop_var": "item", "changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "item": {"image": "registry.redhat.io/ansible-automation-platform-24/ee-supported-rhel8:latest", "name": "Default execution environment"}, "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => (item={'name': 'Minimal execution environment', 'image': 'registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel8:latest'})  => {"ansible_loop_var": "item", "changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "item": {"image": "registry.redhat.io/ansible-automation-platform-24/ee-minimal-rhel8:latest", "name": "Minimal execution environment"}, "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [aap.example.com] => {"changed": false, "msg": "All items skipped"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update global_job_execution_environments for Hub (non-bundle)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update execution environment images for Hub (bundle)] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Update execution environment images for Hub registry only] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "groups['automationhub'] | default([]) | length", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set Execution Environment configuration] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "0e567f926c6b0410581d1c5afb510d00b8ffadb7", "dest": "/etc/tower/conf.d/execution_environments.py", "gid": 985, "group": "awx", "md5sum": "c0dfc94f385cd42adaab265b2d0b9a98", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 424, "src": "/root/.ansible/tmp/ansible-tmp-1727212062.6887748-3147389-148368062558969/source", "state": "file", "uid": 0}[0m

TASK [ansible.automation_platform_installer.automationcontroller : Set default image for Container Groups] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "checksum": "2ed819c209feff8e118780463a6018d15d9d9202", "dest": "/etc/tower/conf.d/container_groups.py", "gid": 985, "group": "awx", "md5sum": "f0abbfe7460eeb3687df0c3789253f51", "mode": "0640", "owner": "root", "secontext": "system_u:object_r:etc_t:s0", "size": 114, "src": "/root/.ansible/tmp/ansible-tmp-1727212063.6566927-3147404-228209982993775/source", "state": "file", "uid": 0}[0m

TASK [include_role : ansible.automation_platform_installer.misc] ***************

TASK [ansible.automation_platform_installer.misc : Create the default organization if it is needed.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": "awx-manage create_preload_data", "delta": "0:00:03.768729", "end": "2024-09-24 17:07:48.923284", "msg": "", "rc": 0, "start": "2024-09-24 17:07:45.154555", "stderr": "", "stderr_lines": [], "stdout": "Default organization added.\nDemo Credential, Inventory, and Job Template added.\n(changed: True)", "stdout_lines": ["Default organization added.", "Demo Credential, Inventory, and Job Template added.", "(changed: True)"]}[0m

TASK [ansible.automation_platform_installer.misc : Create the default execution environments if needed (without authentication).] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "registry_username is not defined or bundle_install | default(false) | bool", "skip_reason": "Conditional result was False"}[0m

TASK [ansible.automation_platform_installer.misc : Create the default execution environments if needed (with authentication).] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["awx-manage", "register_default_execution_environments", "--registry-username=${REGISTRY_USERNAME}", "--registry-password=${REGISTRY_PASSWORD}", "--registry-url=${REGISTRY_URL}", "--verify-ssl=$REGISTRY_VERIFY_SSL"], "delta": "0:00:03.241107", "end": "2024-09-24 17:07:52.752552", "msg": "", "rc": 0, "start": "2024-09-24 17:07:49.511445", "stderr": "", "stderr_lines": [], "stdout": "'Default Execution Environment Credential' registered.\n'Default Execution Environment Credential' updated.\n'Minimal execution environment' Default Execution Environment registered.\n'Minimal execution environment' Default Execution Environment updated.\n'Default execution environment' Default Execution Environment registered.\n'Default execution environment' Default Execution Environment updated.\nControl Plane Execution Environment registered.\n(changed: True)", "stdout_lines": ["'Default Execution Environment Credential' registered.", "'Default Execution Environment Credential' updated.", "'Minimal execution environment' Default Execution Environment registered.", "'Minimal execution environment' Default Execution Environment updated.", "'Default execution environment' Default Execution Environment registered.", "'Default execution environment' Default Execution Environment updated.", "Control Plane Execution Environment registered.", "(changed: True)"]}[0m

TASK [Start the automation-controller service] *********************************
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "automation-controller", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestampMonotonic": "0", "ActiveExitTimestampMonotonic": "0", "ActiveState": "inactive", "After": "nginx.service network.target postgresql.service receptor.service system.slice sysinit.target redis.service supervisord.service systemd-journald.socket basic.target", "AllowIsolate": "no", "AssertResult": "no", "AssertTimestampMonotonic": "0", "Before": "multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "[not set]", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "no", "ConditionTimestampMonotonic": "0", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ConsistsOf": "supervisord.service receptor.service postgresql.service nginx.service redis.service", "ControlGroupId": "0", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Automation Controller service", "DevicePolicy": "auto", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "0", "ExecMainStartTimestampMonotonic": "0", "ExecMainStatus": "0", "ExecStart": "{ path=/bin/true ; argv[]=/bin/true ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExecStartEx": "{ path=/bin/true ; argv[]=/bin/true ; flags= ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/etc/systemd/system/automation-controller.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "automation-controller.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestampMonotonic": "0", "InactiveExitTimestampMonotonic": "0", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "automation-controller.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "yes", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:02:46 EDT", "StateChangeTimestampMonotonic": "2230903735", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "infinity", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "oneshot", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "multi-user.target", "Wants": "supervisord.service postgresql.service nginx.service receptor.service redis.service", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "infinity"}}[0m

TASK [include_role : ansible.automation_platform_installer.automationhub] ******
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['automationhub'] | default([])", "skip_reason": "Conditional result was False"}[0m

TASK [include_role : ansible.automation_platform_installer.automationedacontroller] ***
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['automationedacontroller'] | default([])", "skip_reason": "Conditional result was False"}[0m

TASK [Set supported repositories for seeding] **********************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['automationhub'] | default([])", "skip_reason": "Conditional result was False"}[0m

TASK [Seed collections] ********************************************************
[0;36mskipping: [aap.example.com] => {"changed": false, "false_condition": "inventory_hostname in groups['automationhub'] | default([])", "skip_reason": "Conditional result was False"}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : restart nginx] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "nginx", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:httpd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ActiveEnterTimestampMonotonic": "2513200285", "ActiveExitTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ActiveExitTimestampMonotonic": "2513160270", "ActiveState": "active", "After": "systemd-journald.socket system.slice -.mount sysinit.target basic.target nss-lookup.target tmp.mount network-online.target systemd-tmpfiles-setup.service remote-fs.target", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:07:29 EDT", "AssertTimestampMonotonic": "2513164360", "Before": "automation-controller.service multi-user.target shutdown.target", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "41119000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "yes", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ConditionTimestampMonotonic": "2513164359", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/nginx.service", "ControlGroupId": "6210", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "The nginx HTTP and reverse proxy server", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/nginx.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "45242", "ExecMainStartTimestamp": "Tue 2024-09-24 17:07:29 EDT", "ExecMainStartTimestampMonotonic": "2513200267", "ExecMainStatus": "0", "ExecReload": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45355 ; code=exited ; status=0 }", "ExecReloadEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -s reload ; flags= ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45355 ; code=exited ; status=0 }", "ExecStart": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45241 ; code=exited ; status=0 }", "ExecStartEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx ; flags= ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45241 ; code=exited ; status=0 }", "ExecStartPre": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45240 ; code=exited ; status=0 }", "ExecStartPreEx": "{ path=/usr/sbin/nginx ; argv[]=/usr/sbin/nginx -t ; flags= ; start_time=[Tue 2024-09-24 17:07:29 EDT] ; stop_time=[Tue 2024-09-24 17:07:29 EDT] ; pid=45240 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/nginx.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "nginx.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:07:29 EDT", "InactiveEnterTimestampMonotonic": "2513163968", "InactiveExitTimestamp": "Tue 2024-09-24 17:07:29 EDT", "InactiveExitTimestampMonotonic": "2513170030", "InvocationID": "0b56c984c2b545c2b2ded6502e777c3f", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "mixed", "KillSignal": "3", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "45242", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "3198976", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "nginx.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PIDFile": "/run/nginx.pid", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "yes", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "-.mount sysinit.target system.slice", "RequiresMountsFor": "/var/tmp", "Restart": "no", "RestartKillSignal": "3", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:07:29 EDT", "StateChangeTimestampMonotonic": "2513735517", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "2", "TasksMax": "48684", "TimeoutAbortUSec": "5s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "5s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "Wants": "network-online.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : restart supervisor] ***
[0;33mchanged: [aap.example.com] => {[0m
[0;33m    "msg": "Restarting supervisor."[0m
[0;33m}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : Stop supervisor.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "stopped", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ActiveEnterTimestampMonotonic": "2517871236", "ActiveExitTimestamp": "Tue 2024-09-24 17:07:30 EDT", "ActiveExitTimestampMonotonic": "2514345999", "ActiveState": "active", "After": "systemd-journald.socket basic.target rc-local.service sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:07:33 EDT", "AssertTimestampMonotonic": "2517740511", "Before": "multi-user.target shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "10893327000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ConditionTimestampMonotonic": "2517740509", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroup": "/system.slice/supervisord.service", "ControlGroupId": "6255", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "0", "ExecMainExitTimestampMonotonic": "0", "ExecMainPID": "45690", "ExecMainStartTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ExecMainStartTimestampMonotonic": "2517871217", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:33 EDT] ; stop_time=[Tue 2024-09-24 17:07:33 EDT] ; pid=45689 ; code=exited ; status=0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[Tue 2024-09-24 17:07:33 EDT] ; stop_time=[Tue 2024-09-24 17:07:33 EDT] ; pid=45689 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:07:32 EDT", "InactiveEnterTimestampMonotonic": "2516880116", "InactiveExitTimestamp": "Tue 2024-09-24 17:07:33 EDT", "InactiveExitTimestampMonotonic": "2517744010", "InvocationID": "8dfb1013753c4b85aa4c10af73e8c0d7", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "45690", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "900329472", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:07:33 EDT", "StateChangeTimestampMonotonic": "2517871236", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "running", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "23", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : Wait for supervisor to stop.] ***
[0;32mok: [aap.example.com] => {"attempts": 1, "changed": false, "stat": {"exists": false}}[0m

RUNNING HANDLER [ansible.automation_platform_installer.automationcontroller : Start supervisor.] ***
[0;33mchanged: [aap.example.com] => {"changed": true, "name": "supervisord", "state": "started", "status": {"AccessSELinuxContext": "system_u:object_r:systemd_unit_file_t:s0", "ActiveEnterTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ActiveEnterTimestampMonotonic": "2517871236", "ActiveExitTimestamp": "Tue 2024-09-24 17:07:54 EDT", "ActiveExitTimestampMonotonic": "2538935982", "ActiveState": "inactive", "After": "systemd-journald.socket basic.target rc-local.service sysinit.target system.slice", "AllowIsolate": "no", "AssertResult": "yes", "AssertTimestamp": "Tue 2024-09-24 17:07:33 EDT", "AssertTimestampMonotonic": "2517740511", "Before": "multi-user.target shutdown.target automation-controller.service", "BlockIOAccounting": "no", "BlockIOWeight": "[not set]", "CPUAccounting": "yes", "CPUAffinityFromNUMA": "no", "CPUQuotaPerSecUSec": "infinity", "CPUQuotaPeriodUSec": "infinity", "CPUSchedulingPolicy": "0", "CPUSchedulingPriority": "0", "CPUSchedulingResetOnFork": "no", "CPUShares": "[not set]", "CPUUsageNSec": "12001231000", "CPUWeight": "[not set]", "CacheDirectoryMode": "0755", "CanFreeze": "yes", "CanIsolate": "no", "CanReload": "no", "CanStart": "yes", "CanStop": "yes", "CapabilityBoundingSet": "cap_chown cap_dac_override cap_dac_read_search cap_fowner cap_fsetid cap_kill cap_setgid cap_setuid cap_setpcap cap_linux_immutable cap_net_bind_service cap_net_broadcast cap_net_admin cap_net_raw cap_ipc_lock cap_ipc_owner cap_sys_module cap_sys_rawio cap_sys_chroot cap_sys_ptrace cap_sys_pacct cap_sys_admin cap_sys_boot cap_sys_nice cap_sys_resource cap_sys_time cap_sys_tty_config cap_mknod cap_lease cap_audit_write cap_audit_control cap_setfcap cap_mac_override cap_mac_admin cap_syslog cap_wake_alarm cap_block_suspend cap_audit_read cap_perfmon cap_bpf cap_checkpoint_restore", "CleanResult": "success", "CollectMode": "inactive", "ConditionResult": "yes", "ConditionTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ConditionTimestampMonotonic": "2517740509", "ConfigurationDirectoryMode": "0755", "Conflicts": "shutdown.target", "ControlGroupId": "6255", "ControlPID": "0", "CoredumpFilter": "0x33", "DefaultDependencies": "yes", "DefaultMemoryLow": "0", "DefaultMemoryMin": "0", "Delegate": "no", "Description": "Process Monitoring and Control Daemon", "DevicePolicy": "auto", "DropInPaths": "/etc/systemd/system/supervisord.service.d/override.conf", "DynamicUser": "no", "ExecMainCode": "1", "ExecMainExitTimestamp": "Tue 2024-09-24 17:08:00 EDT", "ExecMainExitTimestampMonotonic": "2545074305", "ExecMainPID": "45690", "ExecMainStartTimestamp": "Tue 2024-09-24 17:07:33 EDT", "ExecMainStartTimestampMonotonic": "2517871217", "ExecMainStatus": "0", "ExecStart": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; ignore_errors=no ; start_time=[Tue 2024-09-24 17:07:33 EDT] ; stop_time=[Tue 2024-09-24 17:07:33 EDT] ; pid=45689 ; code=exited ; status=0 }", "ExecStartEx": "{ path=/usr/bin/supervisord ; argv[]=/usr/bin/supervisord -c /etc/supervisord.conf ; flags= ; start_time=[Tue 2024-09-24 17:07:33 EDT] ; stop_time=[Tue 2024-09-24 17:07:33 EDT] ; pid=45689 ; code=exited ; status=0 }", "ExitType": "main", "FailureAction": "none", "FileDescriptorStoreMax": "0", "FinalKillSignal": "9", "FragmentPath": "/usr/lib/systemd/system/supervisord.service", "FreezerState": "running", "GID": "[not set]", "GuessMainPID": "yes", "IOAccounting": "no", "IOReadBytes": "18446744073709551615", "IOReadOperations": "18446744073709551615", "IOSchedulingClass": "2", "IOSchedulingPriority": "4", "IOWeight": "[not set]", "IOWriteBytes": "18446744073709551615", "IOWriteOperations": "18446744073709551615", "IPAccounting": "no", "IPEgressBytes": "[no data]", "IPEgressPackets": "[no data]", "IPIngressBytes": "[no data]", "IPIngressPackets": "[no data]", "Id": "supervisord.service", "IgnoreOnIsolate": "no", "IgnoreSIGPIPE": "yes", "InactiveEnterTimestamp": "Tue 2024-09-24 17:08:00 EDT", "InactiveEnterTimestampMonotonic": "2545074428", "InactiveExitTimestamp": "Tue 2024-09-24 17:07:33 EDT", "InactiveExitTimestampMonotonic": "2517744010", "InvocationID": "8dfb1013753c4b85aa4c10af73e8c0d7", "JobRunningTimeoutUSec": "infinity", "JobTimeoutAction": "none", "JobTimeoutUSec": "infinity", "KeyringMode": "private", "KillMode": "control-group", "KillSignal": "15", "LimitAS": "infinity", "LimitASSoft": "infinity", "LimitCORE": "infinity", "LimitCORESoft": "0", "LimitCPU": "infinity", "LimitCPUSoft": "infinity", "LimitDATA": "infinity", "LimitDATASoft": "infinity", "LimitFSIZE": "infinity", "LimitFSIZESoft": "infinity", "LimitLOCKS": "infinity", "LimitLOCKSSoft": "infinity", "LimitMEMLOCK": "8388608", "LimitMEMLOCKSoft": "8388608", "LimitMSGQUEUE": "819200", "LimitMSGQUEUESoft": "819200", "LimitNICE": "0", "LimitNICESoft": "0", "LimitNOFILE": "524288", "LimitNOFILESoft": "1024", "LimitNPROC": "30428", "LimitNPROCSoft": "30428", "LimitRSS": "infinity", "LimitRSSSoft": "infinity", "LimitRTPRIO": "0", "LimitRTPRIOSoft": "0", "LimitRTTIME": "infinity", "LimitRTTIMESoft": "infinity", "LimitSIGPENDING": "30428", "LimitSIGPENDINGSoft": "30428", "LimitSTACK": "infinity", "LimitSTACKSoft": "8388608", "LoadState": "loaded", "LockPersonality": "no", "LogLevelMax": "-1", "LogRateLimitBurst": "0", "LogRateLimitIntervalUSec": "0", "LogsDirectoryMode": "0755", "MainPID": "0", "ManagedOOMMemoryPressure": "auto", "ManagedOOMMemoryPressureLimit": "0", "ManagedOOMPreference": "none", "ManagedOOMSwap": "auto", "MemoryAccounting": "yes", "MemoryAvailable": "infinity", "MemoryCurrent": "[not set]", "MemoryDenyWriteExecute": "no", "MemoryHigh": "infinity", "MemoryLimit": "infinity", "MemoryLow": "0", "MemoryMax": "infinity", "MemoryMin": "0", "MemorySwapMax": "infinity", "MountAPIVFS": "no", "NFileDescriptorStore": "0", "NRestarts": "0", "NUMAPolicy": "n/a", "Names": "supervisord.service", "NeedDaemonReload": "no", "Nice": "0", "NoNewPrivileges": "no", "NonBlocking": "no", "NotifyAccess": "none", "OOMPolicy": "stop", "OOMScoreAdjust": "0", "OnFailureJobMode": "replace", "OnSuccessJobMode": "fail", "PartOf": "automation-controller.service", "Perpetual": "no", "PrivateDevices": "no", "PrivateIPC": "no", "PrivateMounts": "no", "PrivateNetwork": "no", "PrivateTmp": "no", "PrivateUsers": "no", "ProcSubset": "all", "ProtectClock": "no", "ProtectControlGroups": "no", "ProtectHome": "no", "ProtectHostname": "no", "ProtectKernelLogs": "no", "ProtectKernelModules": "no", "ProtectKernelTunables": "no", "ProtectProc": "default", "ProtectSystem": "no", "RefuseManualStart": "no", "RefuseManualStop": "no", "ReloadResult": "success", "ReloadSignal": "1", "RemainAfterExit": "no", "RemoveIPC": "no", "Requires": "system.slice sysinit.target", "Restart": "no", "RestartKillSignal": "15", "RestartUSec": "100ms", "RestrictNamespaces": "no", "RestrictRealtime": "no", "RestrictSUIDSGID": "no", "Result": "success", "RootDirectoryStartOnly": "no", "RuntimeDirectoryMode": "0755", "RuntimeDirectoryPreserve": "no", "RuntimeMaxUSec": "infinity", "RuntimeRandomizedExtraUSec": "0", "SameProcessGroup": "no", "SecureBits": "0", "SendSIGHUP": "no", "SendSIGKILL": "yes", "Slice": "system.slice", "StandardError": "inherit", "StandardInput": "null", "StandardOutput": "journal", "StartLimitAction": "none", "StartLimitBurst": "5", "StartLimitIntervalUSec": "10s", "StartupBlockIOWeight": "[not set]", "StartupCPUShares": "[not set]", "StartupCPUWeight": "[not set]", "StartupIOWeight": "[not set]", "StateChangeTimestamp": "Tue 2024-09-24 17:08:00 EDT", "StateChangeTimestampMonotonic": "2545074428", "StateDirectoryMode": "0755", "StatusErrno": "0", "StopWhenUnneeded": "no", "SubState": "dead", "SuccessAction": "none", "SyslogFacility": "3", "SyslogLevel": "6", "SyslogLevelPrefix": "yes", "SyslogPriority": "30", "SystemCallErrorNumber": "2147483646", "TTYReset": "no", "TTYVHangup": "no", "TTYVTDisallocate": "no", "TasksAccounting": "yes", "TasksCurrent": "[not set]", "TasksMax": "48684", "TimeoutAbortUSec": "1min 30s", "TimeoutCleanUSec": "infinity", "TimeoutStartFailureMode": "terminate", "TimeoutStartUSec": "1min 30s", "TimeoutStopFailureMode": "terminate", "TimeoutStopUSec": "1min 30s", "TimerSlackNSec": "50000", "Transient": "no", "Type": "forking", "UID": "[not set]", "UMask": "0022", "UnitFilePreset": "disabled", "UnitFileState": "enabled", "UtmpMode": "init", "WantedBy": "automation-controller.service multi-user.target", "WatchdogSignal": "6", "WatchdogTimestampMonotonic": "0", "WatchdogUSec": "0"}}[0m

PLAY [Post-install insights setup] *********************************************

TASK [include_role : ansible.automation_platform_installer.misc] ***************

TASK [ansible.automation_platform_installer.misc : Ensure insights-client is installed] ***
[0;32mok: [aap.example.com] => {"changed": false, "msg": "Nothing to do", "rc": 0, "results": []}[0m

TASK [ansible.automation_platform_installer.misc : Register with Insights] *****
[0;33mchanged: [aap.example.com] => {"changed": true, "cmd": ["insights-client", "--register"], "delta": "0:00:33.709548", "end": "2024-09-24 17:08:38.672459", "msg": "", "rc": 0, "start": "2024-09-24 17:08:04.962911", "stderr": "", "stderr_lines": [], "stdout": "Successfully registered host aap.example.com\nAutomatic scheduling for Insights has been enabled.\nStarting to collect Insights data for aap.example.com\nWriting RHSM facts to /etc/rhsm/facts/insights-client.facts ...\nUploading Insights data.\nSuccessfully uploaded report from aap.example.com to account 1577672.\nView the Red Hat Insights console at https://console.redhat.com/insights/", "stdout_lines": ["Successfully registered host aap.example.com", "Automatic scheduling for Insights has been enabled.", "Starting to collect Insights data for aap.example.com", "Writing RHSM facts to /etc/rhsm/facts/insights-client.facts ...", "Uploading Insights data.", "Successfully uploaded report from aap.example.com to account 1577672.", "View the Red Hat Insights console at https://console.redhat.com/insights/"]}[0m

PLAY [Post-install cleanup] ****************************************************

TASK [Remove stale packages] ***************************************************
[0;33mchanged: [aap.example.com] => {"changed": true, "msg": "", "rc": 0, "results": ["Removed: python3-ply-3.11-14.el9.noarch"]}[0m

PLAY RECAP *********************************************************************
[0;33maap.example.com[0m            : [0;32mok=343 [0m [0;33mchanged=148 [0m unreachable=0    failed=0    [0;36mskipped=227 [0m rescued=0    [1;35mignored=8   [0m
[0;32mlocalhost[0m                  : ok=0    changed=0    unreachable=0    failed=0    [0;36mskipped=1   [0m rescued=0    ignored=0   

