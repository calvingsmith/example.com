---
# code: language=ansible
- name: Setup satellite for provisioning
  # gather_facts: false
  hosts: satellite
  become: true
  vars_files:
    - extra_vars.yml
    - sat_repos.yml

  environment:
    SATELLITE_SERVER_URL: "{{ satellite_server_url }}"
    SATELLITE_USERNAME: "{{ satellite_username }}"
    SATELLITE_PASSWORD: "{{ satellite_password }}"

  tasks:
    - name: Apply patch for instance based provisioning on libvirt
      ansible.posix.patch:
        src: backing_volume.patch
        dest: /usr/share/gems/gems/fog-libvirt-0.9.0/lib/fog/libvirt/models/compute/templates/volume.xml.erb
        backup: true
      tags: never

    - name: Install additional software
      ansible.builtin.yum:
        name:
          - libvirt-client
          - rhel-system-roles
        disable_plugin:
          - foreman-protector
        state: present

    - name: SSH key create
      ansible.builtin.user:
        name: foreman
        generate_ssh_key: true
        ssh_key_file: .ssh/id_rsa
      register: ssh_key

    - name: SSH public key Install
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{ ssh_key.ssh_public_key }}"
      delegate_to: "root@host4.home"

    - name: Collect ssh keys from host4.home
      ansible.builtin.command: "ssh-keyscan 192.168.100.1"
      register: "host_keys"
      changed_when: false

    - name: Copy over known_hosts key
      ansible.builtin.known_hosts:
        path: /usr/share/foreman/.ssh/known_hosts
        name: 192.168.100.1
        key: "{{ host_keys.stdout }}"

    - name: Fixup permissions for known_hosts file
      ansible.builtin.file:
        path: /usr/share/foreman/.ssh/known_hosts
        owner: foreman
        group: foreman
        mode: '0644'

    - name: Create compute resource     # noqa: args[module]
      redhat.satellite.compute_resource:
        name: libvirt hypervisor
        provider: libvirt
        provider_params:
          url: qemu+ssh://root@192.168.100.1/system
          set_console_password: false

    - name: Create compute item.profile # noqa: args[module]
      redhat.satellite.compute_profile:
        name: libvirt-compute
        compute_attributes:
          - compute_resource: libvirt hypervisor
            vm_attrs:
              cpus: 1
              memory: 4294967296 # 4 GB
              # virtual (NAT) / example.com network example.com domain
              nics_attributes:
                0:
                  type: network
                  network: example.com
                  model: virtio
              volumes_attributes:
                0:
                  pool_name: default
                  capacity: 10G
                  format_type: qcow2
        state: present

    # Need to parameterize
    #
    - name: Add image  # noqa: args[module]
      redhat.satellite.image:
        name: rhel-8
        architecture: x86_64
        operatingsystem: "RHEL 8.8" # This might change to RedHat 8.8 on rebuild"
        uuid: "/home/images/rhel-8.8-x86_64-kvm.qcow2"
        compute_resource: libvirt hypervisor
        image_username: root
        user_data: true
        state: present

    - name: Satellite settings for provisioning
      ansible.builtin.include_role:
        name: redhat.satellite.settings
      vars:
        satellite_settings:
          - name: destroy_vm_on_host_delete
            value: true
          - name: root_pass
            value: "{{ default_password }}"

    - name: Setup activationkey    # noqa: args[module]
      redhat.satellite.activation_key:
        name: "{{ host_activation_key }}"
        content_view: "Default Organization View"
        lifecycle_environment: "Library"
        content_overrides:
          - label: satellite-client-6-for-rhel-8-x86_64-rpms
            override: enabled
        release_version: 8
        service_level: Standard
        purpose_role: "Red Hat Enterprise Linux Server"
        state: present
        organization: "{{ satellite_organization }}"
    # Set up host group "hosts"  (test)

    - name: Setup server hostgroup   # noqa: args[module]
      redhat.satellite.hostgroup:
        name: rhel8-server
        activation_keys: "{{ host_activation_key }}"
        compute_resource: "libvirt hypervisor"
        compute_profile: "libvirt-compute"
        domain: "example.com"
        lifecycle_environment: "Library"
        # content_view: "Default Organization View"
        subnet: "Example network"
        operatingsystem: "RHEL 8.8"
        pxe_loader: "PXELinux BIOS"
        ptable: "Kickstart default"
        architecture: "x86_64"
        parameters:
          - name: remote_execution_ssh_keys
            parameter_type: array
            value:
              - "{{ lookup('file', 'cgs_key.pub') }}"
        organization: "{{ satellite_organization }}"
        locations:
          - "{{ satellite_location }}"
        content_source: "{{ satellite_server }}"
        openscap_proxy: "{{ satellite_server }}"
        state: present
